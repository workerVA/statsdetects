hash,line,regex,end_url
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"            rd = recv(fd, x, (cl>(long long)sizeof(x)?sizeof(x):(size_t)cl), 0);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/scgi-responder.c:156
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        n = kevent(scf->fd, NULL, 0, kevl, sizeof(kevl)/sizeof(*kevl), &t0);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/stat_cache.c:422
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    } while (n == sizeof(kevl)/sizeof(*kevl));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/stat_cache.c:453
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    if (toSend > (off_t)sizeof(buf)) toSend = (off_t)sizeof(buf);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/network_write.c:160
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"	  (sizeof(offsets)+sizeof(plugin_fn_data)-1) / sizeof(plugin_fn_data);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/plugin.c:509
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    digest_iov(ai->digest, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_authn_file.c:192
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    nettle_arcfour_crypt(ctx, sizeof(buf), buf, buf);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rand.c:238
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    nettle_arcfour_crypt(ctx, sizeof(buf), buf, buf);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rand.c:239
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    nettle_arcfour_crypt(ctx, sizeof(buf), buf, buf);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rand.c:240
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    nettle_arcfour_crypt(&arcfour_ctx, sizeof(i), (uint8_t *)&i, (uint8_t *)&i);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rand.c:397
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"            nettle_yarrow256_seed(&yarrow256_ctx, sizeof(seed_file), seed_file);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rand.c:475
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                if (n < sizeof(laddr.s)) memcpy(laddr.s, b->ptr, (laddr.n = n));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/request.c:192
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"            if (len < sizeof(laddr.s)) memcpy(laddr.s, buf, (laddr.n = len));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/request.c:242
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    uint32_t dlen = len < (off_t)sizeof(buf) ? (uint32_t)len : sizeof(buf);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/chunk.c:1388
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_status.c:786
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"	MD5_iov(h, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_usertrack.c:170
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x1node) + sizeof(x1node*))*1024 );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lemon.c:3823
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x1node) + sizeof(x1node*))*size );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lemon.c:3862
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x2node) + sizeof(x2node*))*128 );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lemon.c:3986
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x2node) + sizeof(x2node*))*size );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lemon.c:4026
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x3node) + sizeof(x3node*))*128 );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lemon.c:4193
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x3node) + sizeof(x3node*))*size );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lemon.c:4233
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x4node) + sizeof(x4node*))*64 );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lemon.c:4346
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x4node) + sizeof(x4node*))*size );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lemon.c:4385
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    const int idsz = (int)(sizeof(ids)/sizeof(*ids)-1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3568
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_TLSv12)/sizeof(*suite_TLSv12)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3760
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_TLSv10)/sizeof(*suite_TLSv10)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3770
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_SSLv3)/sizeof(*suite_SSLv3)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3781
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_HIGH)/sizeof(*suite_HIGH)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3848
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_AES_256)/sizeof(*suite_AES_256)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3862
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_AES_128)/sizeof(*suite_AES_128)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3877
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_ARIA_256)/sizeof(*suite_ARIA_256)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3924
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_ARIA_128)/sizeof(*suite_ARIA_128)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3939
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_RSA_PSK)/sizeof(*suite_RSA_PSK)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3964
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_PSK)/sizeof(*suite_PSK)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3968
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_3DES)/sizeof(*suite_3DES)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3978
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_RC4)/sizeof(*suite_RC4)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:3991
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_null)/sizeof(*suite_null)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:4003
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    const int idsz = (int)(sizeof(ids)/sizeof(*ids)-1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:4073
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    const int idsz = (int)(sizeof(ids)/sizeof(*ids)-1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_mbedtls.c:4131
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        MD5_iov(HA1, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_authn_dbi.c:410
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        SHA256_iov(HA1, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_authn_dbi.c:413
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"          li_utostrn(n, sizeof(n), (unsigned long)ts.tv_nsec);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/log.c:115
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/log.c:153
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    force_assert(h2c->rused < sizeof(h2c->r)/sizeof(*h2c->r));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/h2.c:2732
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    MD5_iov(digest, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/algo_hmac.c:72
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        buffer_append_iovec(b, iov+(0==i), sizeof(iov)/sizeof(*iov)-(0==i));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_auth.c:1085
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    memset(&dp, 0, sizeof(dp) - sizeof(dp.rdigest));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_auth.c:1515
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_webdav.c:817
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_webdav.c:831
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_webdav.c:892
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_webdav.c:965
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    buffer_append_iovec(b, iovb, sizeof(iovb)/sizeof(*iovb));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_webdav.c:991
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        const int cache_sz =(int)(sizeof(p->cache_user)/sizeof(*p->cache_user));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_userdir.c:189
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"			MD5_iov(HA1, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_secdownload.c:161
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"	buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_dirlisting.c:841
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"			buffer_append_iovec(p->jb, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_dirlisting.c:1122
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"		buffer_append_iovec(out, iov, sizeof(iov)/sizeof(*iov));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mod_dirlisting.c:1229
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    XXH_memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/algo_xxhash.h:2187
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    XXH_memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved64));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/algo_xxhash.h:2603
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"            bits_used = henc->lens - (sizeof(bits) * 8 - bits_used);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/ls-hpack/lshpack.c:732
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"            bits_used = cur_enc_code.bits - (sizeof(bits) * 8 - bits_used);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/ls-hpack/lshpack.c:771
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    test_mod_evhost_build_doc_root_path_loop(tt1, sizeof(tt1)/sizeof(tt1[0]), authority, b, a);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/t/test_mod_evhost.c:55
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    test_mod_evhost_build_doc_root_path_loop(tt2, sizeof(tt2)/sizeof(tt2[0]), authority, b, a);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/t/test_mod_evhost.c:58
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    test_mod_evhost_build_doc_root_path_loop(tt3, sizeof(tt3)/sizeof(tt3[0]), authority, b, a);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/t/test_mod_evhost.c:61
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    if (rlen > sizeof(buf) - (p - buf) - 2)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/scgi-responder.c:97
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"            rd = recv(fd, x, (cl>(long long)sizeof(x)?sizeof(x):(size_t)cl), 0);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/scgi-responder.c:156
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        n = kevent(scf->fd, NULL, 0, kevl, sizeof(kevl)/sizeof(*kevl), &t0);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/stat_cache.c:422
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    } while (n == sizeof(kevl)/sizeof(*kevl));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/stat_cache.c:453
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"#define YY_SZ_ACTTAB (sizeof(yy_action)/sizeof(yy_action[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lempar.c:111
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"  if( tokenType>0 && (size_t)tokenType<(sizeof(yyTokenName)/sizeof(yyTokenName[0])) ){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lempar.c:217
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        && (size_t)yyruleno<sizeof(yyRuleName)/sizeof(yyRuleName[0]) ){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lempar.c:466
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    digest_iov(ai->digest, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_authn_file.c:192
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    for (unsigned int u = 0; u < sizeof(devices)/sizeof(devices[0]); ++u) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/rand.c:176
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    nettle_arcfour_crypt(&arcfour_ctx, sizeof(i), (uint8_t *)&i, (uint8_t *)&i);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/rand.c:397
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                if (n < sizeof(laddr.s)) memcpy(laddr.s, b->ptr, (laddr.n = n));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/request.c:192
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"            if (len < sizeof(laddr.s)) memcpy(laddr.s, buf, (laddr.n = len));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/request.c:242
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        if (__builtin_expect( (iovcnt == sizeof(iov)/sizeof(*iov)), 0))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/chunk.c:959
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    if (__builtin_expect( (iovcnt < sizeof(iov)/sizeof(*iov)), 1)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/chunk.c:971
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"            if (__builtin_expect( (iovcnt == sizeof(iov)/sizeof(*iov)), 0))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/chunk.c:980
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"         sizeof(time_t) > 4 || (sizeof(time_t) == 4 && (time_t)-1 > (time_t)1)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/server.c:740
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_status.c:786
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        if ((sizeof(off_t) > sizeof(size_t) && st.st_size >= (off_t)~(size_t)0u)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/fdevent.c:594
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"	MD5_iov(h, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_usertrack.c:170
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x1node) + sizeof(x1node*))*1024 );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lemon.c:3823
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x1node) + sizeof(x1node*))*size );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lemon.c:3862
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x2node) + sizeof(x2node*))*128 );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lemon.c:3986
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x2node) + sizeof(x2node*))*size );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lemon.c:4026
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x3node) + sizeof(x3node*))*128 );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lemon.c:4193
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x3node) + sizeof(x3node*))*size );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lemon.c:4233
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x4node) + sizeof(x4node*))*64 );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lemon.c:4346
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      (sizeof(x4node) + sizeof(x4node*))*size );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lemon.c:4385
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    for (uint32_t i = 0; i < sizeof(suite_RC4)/sizeof(suite_RC4[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3499
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    for (uint32_t i = 0; i < sizeof(suite_weak)/sizeof(suite_weak[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3504
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    for (uint32_t i = 0; i < sizeof(suite_null)/sizeof(suite_null[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3508
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    const int idsz = (int)(sizeof(ids)/sizeof(*ids)-1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3568
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_TLSv12)/sizeof(*suite_TLSv12)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3760
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_TLSv10)/sizeof(*suite_TLSv10)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3770
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_SSLv3)/sizeof(*suite_SSLv3)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3781
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_HIGH)/sizeof(*suite_HIGH)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3848
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_AES_256)/sizeof(*suite_AES_256)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3862
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_AES_128)/sizeof(*suite_AES_128)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3877
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_ARIA_256)/sizeof(*suite_ARIA_256)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3924
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_ARIA_128)/sizeof(*suite_ARIA_128)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3939
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_RSA_PSK)/sizeof(*suite_RSA_PSK)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3964
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_PSK)/sizeof(*suite_PSK)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3968
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_3DES)/sizeof(*suite_3DES)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3978
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_RC4)/sizeof(*suite_RC4)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:3991
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"                         (int)(sizeof(suite_null)/sizeof(*suite_null)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:4003
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    const int idsz = (int)(sizeof(ids)/sizeof(*ids)-1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:4073
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    const int idsz = (int)(sizeof(ids)/sizeof(*ids)-1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_mbedtls.c:4131
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        if (++hoff[0] >= /*sizeof(hoff)/sizeof(hoff[0])-1*/ 8192-1) break;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/http_header.c:371
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        MD5_iov(HA1, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_authn_dbi.c:410
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        SHA256_iov(HA1, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_authn_dbi.c:413
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    for (uint32_t i = 0; i < sizeof(sigs)/sizeof(*sigs); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_cgi.c:267
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"          li_utostrn(n, sizeof(n), (unsigned long)ts.tv_nsec);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/log.c:115
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/log.c:153
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        if (h2c->rused == sizeof(h2c->r)/sizeof(*h2c->r))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/h2.c:1499
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    force_assert(h2c->rused < sizeof(h2c->r)/sizeof(*h2c->r));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/h2.c:2732
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    MD5_iov(digest, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/algo_hmac.c:72
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        for (unsigned int i = 0; i < sizeof(facility_names)/sizeof(facility_names[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/configfile.c:1595
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        buffer_append_iovec(b, iov+(0==i), sizeof(iov)/sizeof(*iov)-(0==i));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_auth.c:1085
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    memset(&dp, 0, sizeof(dp) - sizeof(dp.rdigest));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_auth.c:1515
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_webdav.c:817
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_webdav.c:831
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_webdav.c:892
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_webdav.c:965
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    buffer_append_iovec(b, iovb, sizeof(iovb)/sizeof(*iovb));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_webdav.c:991
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"      li_itostrn(tbuf+sizeof(""Second-"")-1, sizeof(tbuf)-(sizeof(""Second-"")-1),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_webdav.c:1058
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    return ((unsigned int)i < sizeof(http_methods)/sizeof(*http_methods)-2)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/http_kv.c:142
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    return (i < sizeof(http_methods)/sizeof(*http_methods)-2)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/http_kv.c:195
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        const int cache_sz =(int)(sizeof(p->cache_user)/sizeof(*p->cache_user));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_userdir.c:189
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"	for (ndx = 1; ndx < sizeof(secdl_algorithm_names)/sizeof(secdl_algorithm_names[0]); ++ndx) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_secdownload.c:108
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"			MD5_iov(HA1, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_secdownload.c:161
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"	buffer_append_iovec(b, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_dirlisting.c:841
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"			buffer_append_iovec(p->jb, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_dirlisting.c:1122
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"		buffer_append_iovec(out, iov, sizeof(iov)/sizeof(*iov));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_dirlisting.c:1229
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        for (i = 0; i < sizeof(names)/sizeof(*names)/2; i += 2) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_gnutls.c:3413
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        if (i == sizeof(names)/sizeof(*names)/2) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_gnutls.c:3417
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        for (unsigned int j = 0; j < sizeof(alpn)/sizeof(*alpn); ++j) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_nss.c:1356
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    for (uint32_t i = 0; i < sizeof(comp)/sizeof(*comp); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mod_nss.c:2560
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    XXH_memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/algo_xxhash.h:2187
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    XXH_memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved64));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/algo_xxhash.h:2603
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"#define NAME_VAL(a, b) sizeof(a) - 1, sizeof(b) - 1, (a), (b)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/ls-hpack/lshpack.c:64
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    test_mod_evhost_build_doc_root_path_loop(tt1, sizeof(tt1)/sizeof(tt1[0]), authority, b, a);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/t/test_mod_evhost.c:55
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    test_mod_evhost_build_doc_root_path_loop(tt2, sizeof(tt2)/sizeof(tt2[0]), authority, b, a);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/t/test_mod_evhost.c:58
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    test_mod_evhost_build_doc_root_path_loop(tt3, sizeof(tt3)/sizeof(tt3[0]), authority, b, a);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/t/test_mod_evhost.c:61
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"	for (unsigned int enc = 0; enc < sizeof(encs)/sizeof(*encs); ++enc) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/t/test_base64.c:51
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"    for (uint32_t i = 0; i < sizeof(c)/sizeof(*c); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/t/test_mod_evasive.c:62
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"	for (int i = 0; i < (int)(sizeof(rmtmask)/sizeof(rmtmask[0])); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/t/test_configfile.c:57
53b8fd72cd37dee4f66679c3735e9b6d05bcc109c30cc14a65d60f91827f665a2a032fc30cc85258b7195908cd98fa1045eaa62f3cce6ae57b49b3ca7727f5bd,"        if (++hloffsets[0] >= sizeof(hloffsets)/sizeof(*hloffsets)) break;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/t/test_request.c:35
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"  while (Ufgets(buffer, sizeof(buffer), f) != NULL) text_show(text, buffer);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/exim_monitor/em_menu.c:158
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"              mime_body < (reason_end-(sizeof(nlnl)-1)) && memcmp(mime_body, nlnl, (sizeof(nlnl)-1));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/src/sieve.c:3353
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"            if (mime_body+(sizeof(nlnl)-1)<reason_end) mime_body+=(sizeof(nlnl)-1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/src/sieve.c:3358
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"  assert(sizeof(argv)/sizeof(argv[0]) > argc);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/src/perl.c:113
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"    string_format(p, sizeof(sx->buffer) - (p-sx->buffer), "" ENVID=%s"", dsn_envid);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/src/transports/smtp.c:3306
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"      memcpy(cache_time + sizeof(time_t), to, add_size - sizeof(time_t));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/src/transports/autoreply.c:718
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"    rc = (retry_read(fd, &count, sizeof(count)) < (int) sizeof(count));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/src/auths/pwcheck.c:288
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"if (read(fd, &len, sizeof(int)) != sizeof(int)) return FALSE;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/rda.c:472
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"    if (write(fd, &i, sizeof(i)) != sizeof(i))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/rda.c:684
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"  if (write(fd, filter_n, sizeof(filter_n)) != sizeof(filter_n))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/rda.c:703
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"        if (write(fd, &reply_options, sizeof(int)) != sizeof(int))    /* 0 means no reply */
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/rda.c:737
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"    if (read(fd, &n, sizeof(int)) != sizeof(int)) goto DISASTER;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/rda.c:831
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"    if (read(fd, &type, sizeof(type)) != sizeof(type)) goto DISASTER;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/rda.c:847
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"if (read(fd, filter_n, sizeof(filter_n)) != sizeof(filter_n)) goto DISASTER;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/rda.c:854
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"    if (read(fd, &reply_options, sizeof(int)) != sizeof(int)) goto DISASTER;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/rda.c:917
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"              mime_body < (reason_end-(sizeof(nlnl)-1)) && memcmp(mime_body, nlnl, (sizeof(nlnl)-1));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/sieve.c:3353
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"            if (mime_body+(sizeof(nlnl)-1)<reason_end) mime_body+=(sizeof(nlnl)-1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/sieve.c:3358
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"  assert(sizeof(argv)/sizeof(argv[0]) > argc);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/perl.c:113
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"  (sizeof(void *) > sizeof(double) ? sizeof(void *) : sizeof(double))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/store.c:91
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"      if (read(pfd[pipe_read], (void *)&ok, sizeof(BOOL)) != sizeof(BOOL))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/transport.c:1395
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"    if(  (i = addr2->transport_return, (ret = write(pfd[pipe_write], &i, sizeof(int))) != sizeof(int))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/deliver.c:2415
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"      || (i = addr2->special_action, (ret = write(pfd[pipe_write], &i, sizeof(int))) != sizeof(int))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/deliver.c:2421
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"if (!Ufgets(buffer, sizeof(buffer), f) || Ustrcmp(buffer, ""****\n"") == 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/deliver.c:5201
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"  if (!Ufgets(buffer, sizeof(buffer), f) || Ustrcmp(buffer, ""****\n"") == 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/deliver.c:5208
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"#define nelem(arr) (sizeof(arr) / sizeof(*arr))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/macros.h:17
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"if ((count = read(fd, buffer, sizeof(buffer))) >= sizeof(buffer))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/transports/tf_maildir.c:394
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"# define nelem(arr) (sizeof(arr)/sizeof(*arr))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/transports/smtp_socks.c:17
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"    string_format(p, sizeof(sx->buffer) - (p-sx->buffer), "" ENVID=%s"", dsn_envid);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/transports/smtp.c:3306
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"      memcpy(cache_time + sizeof(time_t), to, add_size - sizeof(time_t));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/transports/autoreply.c:718
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"    rc = (retry_read(fd, &count, sizeof(count)) < (int) sizeof(count));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/auths/pwcheck.c:288
efb406fcb84be2788a76a592d5bd9896f203639c18558950179e70c3341a3f3ed9241f62472e5a4b39aa4877fbeb6e48fad8b57017120e7469135b15f471b83e,"# define nele(arr) (sizeof(arr) / sizeof(*arr))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/src/lookups/redis.c:18
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	list = xcalloc((sizeof(cmds) / sizeof(*cmds)) + 1, sizeof(char *));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/sftp.c:1884
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		RAND_add(buf, sizeof(buf), sizeof(buf));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/entropy.c:115
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	stride = (keylen + sizeof(out) - 1) / sizeof(out);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/openbsd-compat/bcrypt_pbkdf.c:134
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	.len = (unsigned short)(sizeof(preauth_insns)/sizeof(preauth_insns[0])),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/sandbox-seccomp-filter.c:339
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		if ((size_t)argc >= sizeof(argv) / sizeof(*argv)){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/sftp.c:1192
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	list = xcalloc((sizeof(cmds) / sizeof(*cmds)) + 1, sizeof(char *));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/sftp.c:1884
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"			if (strlcpy(cmd, line, sizeof(cmd)) >= sizeof(cmd)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/sftp.c:2280
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		    strlcat(old, "".old"", sizeof(old)) >= sizeof(old))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/ssh-keygen.c:1327
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		RAND_add(buf, sizeof(buf), sizeof(buf));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/entropy.c:115
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		if (atomicio(read, fd, buf, sizeof(buf)) != sizeof(buf)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/sshkey-xmss.c:407
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	if (atomicio(vwrite, fd, buf, sizeof(buf)) != sizeof(buf)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/sshkey-xmss.c:624
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	if (atomicio(vwrite, sock, buf, sizeof(buf)) != sizeof(buf))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/monitor_wrap.c:134
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	if (atomicio(read, sock, buf, sizeof(buf)) != sizeof(buf)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/monitor_wrap.c:149
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	 (sizeof(type) != 4 && sizeof(type) != 8))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/scp.c:1580
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"			if (atomicio(read, remin, &ch, sizeof(ch)) != sizeof(ch))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/scp.c:1637
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	if (atomicio(read, remin, &resp, sizeof(resp)) != sizeof(resp))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/scp.c:1980
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"			if (atomicio(read, remin, &ch, sizeof(ch)) != sizeof(ch))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/scp.c:1993
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"#define MIN_SIZEOF(s1,s2) (sizeof(s1) < sizeof(s2) ? sizeof(s1) : sizeof(s2))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/loginrec.c:220
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		if (atomicio(vwrite, fd, ut, sizeof(*ut)) != sizeof(*ut)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/loginrec.c:910
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		if (atomicio(vwrite, fd, ut, sizeof(*ut)) != sizeof(*ut)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/loginrec.c:1104
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		if (atomicio(read, fd, &ut, sizeof(ut)) != sizeof(ut)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/loginrec.c:1212
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		if (atomicio(vwrite, fd, utx, sizeof(*utx)) != sizeof(*utx)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/loginrec.c:1277
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		if (atomicio(read, fd, &utx, sizeof(utx)) != sizeof(utx)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/loginrec.c:1377
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"		if (atomicio(vwrite, fd, &last, sizeof(last)) != sizeof(last)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/loginrec.c:1555
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	if (atomicio(vwrite, fd, &ut, sizeof(ut)) != sizeof(ut))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/loginrec.c:1723
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	if (p == NULL || strlcpy(addrbuf, p, sizeof(addrbuf)) >= sizeof(addrbuf))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/addr.c:393
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	if (atomicio(vwrite, fd, buf, sizeof(buf)) != sizeof(buf)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/msg.c:54
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	if (atomicio(read, fd, buf, sizeof(buf)) != sizeof(buf)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/msg.c:74
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	for (i = 0; i < sizeof(esc_txt)/sizeof(esc_txt[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/clientloop.c:919
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	if (atomicio(vwrite, fd, msg, sizeof(msg)) != sizeof(msg)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/openbsd-compat/port-prngd.c:119
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"#define	SCALE_LENGTH (sizeof(units)/sizeof(units[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/openbsd-compat/fmt_scaled.c:68
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"#define NCCLASSES	(sizeof(cclasses) / sizeof(cclasses[0]) - 1)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/openbsd-compat/charclass.h:31
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"    if (len > 0 && (size_t)len < sizeof(fdpath) && (dirp = opendir(fdpath))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/openbsd-compat/bsd-closefrom.c:139
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	for (i = 0; i < sizeof(version_tests) / sizeof(version_tests[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/openbsd-compat/regress/opensslvertest.c:63
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	(sizeof(*(su)) - sizeof((su)->sun_path) + strlen((su)->sun_path))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/regress/netcat.c:84
2449b6554e8219201af2b907a0b09b96f9d723e13056891c8ad13056b0ae489695b4671bd0a1c065ec379634feb39dfb44848c7c8174b221dcb13dcb59ebf229,"	for (i = 0; i < (sizeof(lens)/sizeof(lens[0])); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/regress/unittests/sshkey/test_sshkey.c:160
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"	memcpy(d.buffer->data + sizeof(code), message, d.len - sizeof(code));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/server/dhcpleasequery.c:898
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"	(sizeof(dhcpv6_type_names) / sizeof(dhcpv6_type_names[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/common/tables.c:687
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"		    strncat (s1, val, sizeof(s1)-strlen(s1)-1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/dhcpctl/omshell.c:513
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"		    strncat (s1, val, sizeof(s1)-strlen(s1)-1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/dhcpctl/omshell.c:621
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"		r = makeString(sizeof(val), (char *)&val);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/keama/eval.c:932
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"		r = makeString(sizeof(val), (char *)&val);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/keama/eval.c:966
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"		r = makeString(sizeof(val), (char *)&val);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/keama/eval.c:1000
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"	memcpy(d.buffer->data + sizeof(code), message, d.len - sizeof(code));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/server/dhcpleasequery.c:898
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"	(sizeof(dhcpv6_type_names) / sizeof(dhcpv6_type_names[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/common/tables.c:687
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"		    strncat (s1, val, sizeof(s1)-strlen(s1)-1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/dhcpctl/omshell.c:513
7219a43de2ce16450382686c90704905202cfdc87447569b44484a7932c83105d7b1fa50752851aa72fb100deac94261a5294890c06f7e8d0fd852827f7e83ae,"		    strncat (s1, val, sizeof(s1)-strlen(s1)-1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/dhcpctl/omshell.c:621
46c909d572a80002b3683096495b780c2bfef936594a29c21d87bb7fbf3fa2145341b7b057a1f093714fcc82600b07711550660f9e1af1dcbe3725676167ed33,"        ((maxval <= 255) ? sizeof(U_CHAR) : (2 * sizeof(U_CHAR)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/rdppm.c:702
46c909d572a80002b3683096495b780c2bfef936594a29c21d87bb7fbf3fa2145341b7b057a1f093714fcc82600b07711550660f9e1af1dcbe3725676167ed33,"        ((maxval <= 255) ? sizeof(U_CHAR) : (2 * sizeof(U_CHAR)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/rdppm.c:705
46c909d572a80002b3683096495b780c2bfef936594a29c21d87bb7fbf3fa2145341b7b057a1f093714fcc82600b07711550660f9e1af1dcbe3725676167ed33,"        ((maxval <= 255) ? sizeof(U_CHAR) : (2 * sizeof(U_CHAR)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/rdppm.c:702
46c909d572a80002b3683096495b780c2bfef936594a29c21d87bb7fbf3fa2145341b7b057a1f093714fcc82600b07711550660f9e1af1dcbe3725676167ed33,"        ((maxval <= 255) ? sizeof(U_CHAR) : (2 * sizeof(U_CHAR)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/rdppm.c:705
1a172264201fbca34fbcd585961fd88bf38ff896f922cad5de1b099d465bf9aaaa2f2a603c49bde570d8b8b35ba3bfc1900308f602669b4537df12eb28d0e267,"#  define GT_OFF(x) (sizeof(int) == sizeof(z_off64_t) && (x) > gz_intmax())
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/gzguts.h:218
0293fc243fad7563b5b503e4f0c23eff3414fab462b9c7c009425aab188ed36f9314af828c756d53084c8e52197402c9324b368b0d4b537281375feef1332e9c,"    for (currentTest = 0;currentTest < sizeof(hugeTests)/sizeof(hugeTests[0]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/testlimits.c:124
0293fc243fad7563b5b503e4f0c23eff3414fab462b9c7c009425aab188ed36f9314af828c756d53084c8e52197402c9324b368b0d4b537281375feef1332e9c,"	snprintf((char *) prefix, sizeof(prefix), ""%.20s"", (char *)ns->prefix);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tree.c:6327
0293fc243fad7563b5b503e4f0c23eff3414fab462b9c7c009425aab188ed36f9314af828c756d53084c8e52197402c9324b368b0d4b537281375feef1332e9c,"	  while ((j < (int)sizeof(buffer)) && (mblen(buffer, (size_t)j) != j));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/trio.c:5711
0293fc243fad7563b5b503e4f0c23eff3414fab462b9c7c009425aab188ed36f9314af828c756d53084c8e52197402c9324b368b0d4b537281375feef1332e9c,"    for (i = 0;i < sizeof(limitDescriptions)/sizeof(limitDescriptions[0]);i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/testlimits.c:1444
0293fc243fad7563b5b503e4f0c23eff3414fab462b9c7c009425aab188ed36f9314af828c756d53084c8e52197402c9324b368b0d4b537281375feef1332e9c,"        for (j = 0;j < sizeof(testExceptions)/sizeof(testExceptions[0]);j++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/testlimits.c:1450
0293fc243fad7563b5b503e4f0c23eff3414fab462b9c7c009425aab188ed36f9314af828c756d53084c8e52197402c9324b368b0d4b537281375feef1332e9c,"	  while ((j < (int)sizeof(buffer)) && (mblen(buffer, (size_t)j) != j));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/trio.c:5711
0293fc243fad7563b5b503e4f0c23eff3414fab462b9c7c009425aab188ed36f9314af828c756d53084c8e52197402c9324b368b0d4b537281375feef1332e9c,"    if (idx >= (sizeof(IOerr) / sizeof(IOerr[0]))) idx = 0;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/xmlIO.c:401
0293fc243fad7563b5b503e4f0c23eff3414fab462b9c7c009425aab188ed36f9314af828c756d53084c8e52197402c9324b368b0d4b537281375feef1332e9c,"	for ( i = 0; i < sizeof(allowPCData)/sizeof(allowPCData[0]); i++ ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/HTMLparser.c:2446
0293fc243fad7563b5b503e4f0c23eff3414fab462b9c7c009425aab188ed36f9314af828c756d53084c8e52197402c9324b368b0d4b537281375feef1332e9c,"	for ( i = 0; i < sizeof(allowPCData)/sizeof(allowPCData[0]); i++ ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/HTMLparser.c:2456
bdf5987866fbafc27f8fc5f2a07c7783d341f533801211e76682a4ae0c3f351221e7b0da6392800ab269c0dc4c3684dfa9f0e7da9c06ea155f9c6cb9ad7ac2c8,"	b = (char *)malloc(sizeof(char) * ((size_t)chars + 1));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/vasprintf_compat.h:48
bdf5987866fbafc27f8fc5f2a07c7783d341f533801211e76682a4ae0c3f351221e7b0da6392800ab269c0dc4c3684dfa9f0e7da9c06ea155f9c6cb9ad7ac2c8,"	    jerr_int >= (int)(sizeof(json_tokener_errors) / sizeof(json_tokener_errors[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/json_tokener.c:134
bdf5987866fbafc27f8fc5f2a07c7783d341f533801211e76682a4ae0c3f351221e7b0da6392800ab269c0dc4c3684dfa9f0e7da9c06ea155f9c6cb9ad7ac2c8,"#define NELEM(a) (sizeof(a) / sizeof(a[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/json_util.c:272
bdf5987866fbafc27f8fc5f2a07c7783d341f533801211e76682a4ae0c3f351221e7b0da6392800ab269c0dc4c3684dfa9f0e7da9c06ea155f9c6cb9ad7ac2c8,"	b = (char *)malloc(sizeof(char) * ((size_t)chars + 1));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/vasprintf_compat.h:48
bdf5987866fbafc27f8fc5f2a07c7783d341f533801211e76682a4ae0c3f351221e7b0da6392800ab269c0dc4c3684dfa9f0e7da9c06ea155f9c6cb9ad7ac2c8,"#define NELEM(x) (sizeof(x) / sizeof(x[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/parse_flags.c:27
9c1a5af03d68f0f0532ac8299cd27b95faf81bb1df6242032bed7690c5715d30c4a3bf007015e229e7aa76dda7db4a11b3aeaf88f6920e954a546e0b3236351d,"  struct UCD_info *ui = memset(malloc(sizeof(*ui)), 0, sizeof(*ui));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/coredump/_UCD_create.c:57
9c1a5af03d68f0f0532ac8299cd27b95faf81bb1df6242032bed7690c5715d30c4a3bf007015e229e7aa76dda7db4a11b3aeaf88f6920e954a546e0b3236351d,"  coredump_phdr_t *phdrs = ui->phdrs = memset(malloc(size * sizeof(phdrs[0])), 0, size * sizeof(phdrs[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/coredump/_UCD_create.c:123
9c1a5af03d68f0f0532ac8299cd27b95faf81bb1df6242032bed7690c5715d30c4a3bf007015e229e7aa76dda7db4a11b3aeaf88f6920e954a546e0b3236351d,"      Debug(2, ""register out of range: >= %zu / %zu\n"", sizeof(_UPT_reg_offset), sizeof(_UPT_reg_offset[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/ptrace/_UPT_access_reg.c:284
9c1a5af03d68f0f0532ac8299cd27b95faf81bb1df6242032bed7690c5715d30c4a3bf007015e229e7aa76dda7db4a11b3aeaf88f6920e954a546e0b3236351d,"  struct UCD_info *ui = memset(malloc(sizeof(*ui)), 0, sizeof(*ui));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/coredump/_UCD_create.c:57
9c1a5af03d68f0f0532ac8299cd27b95faf81bb1df6242032bed7690c5715d30c4a3bf007015e229e7aa76dda7db4a11b3aeaf88f6920e954a546e0b3236351d,"  if (read(fd, &elf_header64, sizeof(elf_header64)) != sizeof(elf_header64))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/coredump/_UCD_create.c:72
9c1a5af03d68f0f0532ac8299cd27b95faf81bb1df6242032bed7690c5715d30c4a3bf007015e229e7aa76dda7db4a11b3aeaf88f6920e954a546e0b3236351d,"  coredump_phdr_t *phdrs = ui->phdrs = memset(malloc(size * sizeof(phdrs[0])), 0, size * sizeof(phdrs[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/coredump/_UCD_create.c:123
9c1a5af03d68f0f0532ac8299cd27b95faf81bb1df6242032bed7690c5715d30c4a3bf007015e229e7aa76dda7db4a11b3aeaf88f6920e954a546e0b3236351d,"          if (read(fd, &hdr64, sizeof(hdr64)) != sizeof(hdr64))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/coredump/_UCD_create.c:131
9c1a5af03d68f0f0532ac8299cd27b95faf81bb1df6242032bed7690c5715d30c4a3bf007015e229e7aa76dda7db4a11b3aeaf88f6920e954a546e0b3236351d,"          if (read(fd, &hdr32, sizeof(hdr32)) != sizeof(hdr32))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/coredump/_UCD_create.c:157
9c1a5af03d68f0f0532ac8299cd27b95faf81bb1df6242032bed7690c5715d30c4a3bf007015e229e7aa76dda7db4a11b3aeaf88f6920e954a546e0b3236351d,"  if (read(fd, val, sizeof(*val)) != sizeof(*val))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/coredump/_UCD_access_mem.c:81
9c1a5af03d68f0f0532ac8299cd27b95faf81bb1df6242032bed7690c5715d30c4a3bf007015e229e7aa76dda7db4a11b3aeaf88f6920e954a546e0b3236351d,"      Debug(2, ""register out of range: >= %zu / %zu\n"", sizeof(_UPT_reg_offset), sizeof(_UPT_reg_offset[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/ptrace/_UPT_access_reg.c:284
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"#define array_count(a) (sizeof(a) / (sizeof((a)[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/wepoll.c:829
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"		if ((signed)sizeof(date) > evutil_date_rfc1123(date, sizeof(date), NULL)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/http.c:570
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"#define MEMBERSOF(x) (sizeof(x)/sizeof(x[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/http.c:3289
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"    (unsigned)(sizeof(name##_PRIMES)/sizeof(name##_PRIMES[0]));         \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/ht-internal.h:312
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"#define ARRAY_SIZE(a) (sizeof(a) / sizeof(a[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/regress_testutils.c:72
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"#define ARRAY_SIZE(x) (sizeof(x)/sizeof((x)[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/regress_http.c:69
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"	if (++state->i < (int) (sizeof(CHUNKS)/sizeof(CHUNKS[0]))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/regress_http.c:490
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"	for (n = 0; n < sizeof(evcons)/sizeof(evcons[0]); ++n) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/regress_http.c:5336
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"	for (n = 0; n < sizeof(evcons)/sizeof(evcons[0]); ++n) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/regress_http.c:5366
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"	for (n = 0; n < sizeof(evcons)/sizeof(evcons[0]); ++n) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/regress_http.c:5661
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"#define ARRAY_SIZE(a) (sizeof(a) / sizeof(a[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/regress_buffer.c:66
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"#define ARRAY_SIZE(a) (sizeof(a) / sizeof(a[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/regress_dns.c:82
084624ed1ea4d4be37f10451807164df9d93fb774b43ae4636d75a043e8389f7b6923186e55e42dec7480fad7059c89fa99bd62c673fc1a6a40025b6392a4e83,"    while ((n = write(fd[1], buf, sizeof(buf))) == sizeof(buf))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cmake/CheckWorkingKqueue.cmake:29
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"  EXPECT_EQ(sizeof(kHelloString) / sizeof(kHelloString[0]) - 1, s.Length());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/googletest/samples/sample2_unittest.cc:81
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"  const ::std::wstring str(s, sizeof(s) / sizeof(wchar_t));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/googletest/test/googletest-printers-test.cc:906
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"  EXPECT_EQ(sizeof(IsContainer), sizeof(IsContainerTest<std::vector<bool>>(0)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/googletest/test/gtest_unittest.cc:7258
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"  return FilePath(_getcwd(cwd, sizeof(cwd)) == nullptr ? """" : cwd);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/googletest/src/gtest-filepath.cc:105
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"    ::GetTempPathA(sizeof(temp_dir_path), temp_dir_path);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/googletest/src/gtest-port.cc:1051
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"  if (sizeof(double) == sizeof(long double)) {  // NOLINT
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/googlemock/test/gmock-internal-utils_test.cc:278
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"  EXPECT_EQ(sizeof(kHelloString) / sizeof(kHelloString[0]) - 1, s.Length());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/googletest/samples/sample2_unittest.cc:81
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"  for (int i = 0; i < static_cast<int>(sizeof(a) / sizeof(*a)); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/googletest/test/googletest-output-test_.cc:151
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"  const ::std::wstring str(s, sizeof(s) / sizeof(wchar_t));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/googletest/test/googletest-printers-test.cc:906
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"  for (int i = 0; i < int(sizeof(kTestdata) / sizeof(kTestdata[0])); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/googletest/test/googletest-printers-test.cc:1663
c4c91abacb50b6bf9c816f9b1ead55bd417ad6f2f58a86e0d888b2716fd327f9377c50e9b5c4692abce501dd6afb58d854e6fdef6400c1c044c726f3c0e26601,"  EXPECT_EQ(sizeof(IsContainer), sizeof(IsContainerTest<std::vector<bool>>(0)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/googletest/test/gtest_unittest.cc:7258
4b7dac20ef8c6c7b3c02e7137fd5237bf5ded5908163ea1310ffaaf880e30994ea03e56fe5843608cf7b325f96a067d0f9e2764f58584b9512f1a04fa18947df,"        (sizeof(buf) > num_bytes_left) ? num_bytes_left : sizeof(buf);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/symbolize.cc:203
4b7dac20ef8c6c7b3c02e7137fd5237bf5ded5908163ea1310ffaaf880e30994ea03e56fe5843608cf7b325f96a067d0f9e2764f58584b9512f1a04fa18947df,"    SAFE_ASSERT(num_headers_in_buf <= sizeof(buf) / sizeof(buf[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/symbolize.cc:211
4b7dac20ef8c6c7b3c02e7137fd5237bf5ded5908163ea1310ffaaf880e30994ea03e56fe5843608cf7b325f96a067d0f9e2764f58584b9512f1a04fa18947df,"# define ARRAYSIZE(a) (sizeof(a) / sizeof(*(a)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utilities.h:128
4b7dac20ef8c6c7b3c02e7137fd5237bf5ded5908163ea1310ffaaf880e30994ea03e56fe5843608cf7b325f96a067d0f9e2764f58584b9512f1a04fa18947df,"    SAFE_ASSERT(num_headers_in_buf <= sizeof(buf) / sizeof(buf[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/symbolize.cc:211
4b7dac20ef8c6c7b3c02e7137fd5237bf5ded5908163ea1310ffaaf880e30994ea03e56fe5843608cf7b325f96a067d0f9e2764f58584b9512f1a04fa18947df,"  if (!ReadFromOffsetExact(fd, &shstrtab, sizeof(shstrtab), shstrtab_offset)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/symbolize.cc:239
4b7dac20ef8c6c7b3c02e7137fd5237bf5ded5908163ea1310ffaaf880e30994ea03e56fe5843608cf7b325f96a067d0f9e2764f58584b9512f1a04fa18947df,"#define CHECK_INDEX(I,A) CHECK(I < (sizeof(A)/sizeof(A[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/glog/logging.h.in:968
4b7dac20ef8c6c7b3c02e7137fd5237bf5ded5908163ea1310ffaaf880e30994ea03e56fe5843608cf7b325f96a067d0f9e2764f58584b9512f1a04fa18947df,"#define CHECK_BOUND(B,A) CHECK(B <= (sizeof(A)/sizeof(A[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/glog/logging.h.in:969
4733cc68555145ecd195c34fec3fb76f63e5dd427bd9eae050e73b025926100bd48b28064183973e3ace575da8bb8292d512b9562f55ada59c0d23e171613178,"  int tmppath_len = GetTempPathA(sizeof(tmppath_buffer), tmppath_buffer);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/util.h:255
4733cc68555145ecd195c34fec3fb76f63e5dd427bd9eae050e73b025926100bd48b28064183973e3ace575da8bb8292d512b9562f55ada59c0d23e171613178,"    for (size_t i = 0; i < sizeof(kTrue)/sizeof(*kTrue); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gflags.cc:297
4733cc68555145ecd195c34fec3fb76f63e5dd427bd9eae050e73b025926100bd48b28064183973e3ace575da8bb8292d512b9562f55ada59c0d23e171613178,"#define arraysize(arr) (sizeof(arr)/sizeof(*(arr)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/util.h:96
c44af087810e64c99165250938d87d5e3cc017b1c072b0d41cb4c340401f79d7435b54ff98683ee47852cb1df183a2336791a2557a00ff68ffb62ce1bcdaed74,"			GetDlgItemTextW(hwndDlg,(INT)wParam,wt,sizeof(wt)/sizeof(*wt));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/winamp/wasabi/Winamp/wa_dlg.h:271
c44af087810e64c99165250938d87d5e3cc017b1c072b0d41cb4c340401f79d7435b54ff98683ee47852cb1df183a2336791a2557a00ff68ffb62ce1bcdaed74,"			GetDlgItemTextW(hwndDlg,(INT)wParam,wt,sizeof(wt)/sizeof(*wt));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/winamp/wasabi/Winamp/wa_dlg.h:271
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"  strncat(buf, "": "", sizeof(buf) - strlen(buf) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/mrbgems/mruby-compiler/core/y.tab.c:10434
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"  strncat(buf, s, sizeof(buf) - strlen(buf) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/mrbgems/mruby-compiler/core/y.tab.c:10435
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"      strncat(msg, tok(p), sizeof(msg) - strlen(msg) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/mrbgems/mruby-compiler/core/y.tab.c:11291
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"      strncat(buf, p->error_buffer[0].message, sizeof(buf) - strlen(buf) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/mrbgems/mruby-compiler/core/y.tab.c:13084
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"        mrb_raisef(mrb, E_RUNTIME_ERROR, ""mruby-pack does not support sizeof(int) == %d"", (int)sizeof(int));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/mrbgems/mruby-pack/src/pack.c:1181
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"        mrb_raisef(mrb, E_RUNTIME_ERROR, ""mruby-pack does not support sizeof(int) == %d"", (int)sizeof(int));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/mrbgems/mruby-pack/src/pack.c:1190
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"mrb_static_assert(sizeof(mrb_value) == sizeof(union mrb_value_));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/mruby/boxing_word.h:132
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"  else if (p->nerr < sizeof(p->error_buffer) / sizeof(p->error_buffer[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mrbgems/mruby-compiler/core/y.tab.c:10377
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"  else if (p->nwarn < sizeof(p->warn_buffer) / sizeof(p->warn_buffer[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mrbgems/mruby-compiler/core/y.tab.c:10416
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"  strncat(buf, "": "", sizeof(buf) - strlen(buf) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mrbgems/mruby-compiler/core/y.tab.c:10434
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"  strncat(buf, s, sizeof(buf) - strlen(buf) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mrbgems/mruby-compiler/core/y.tab.c:10435
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"      strncat(msg, tok(p), sizeof(msg) - strlen(msg) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mrbgems/mruby-compiler/core/y.tab.c:11291
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"      strncat(buf, p->error_buffer[0].message, sizeof(buf) - strlen(buf) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mrbgems/mruby-compiler/core/y.tab.c:13084
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"#define E2C_LEN         (sizeof(e2c) / sizeof(e2c[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mrbgems/mruby-errno/src/errno.c:36
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"        mrb_raisef(mrb, E_RUNTIME_ERROR, ""mruby-pack does not support sizeof(int) == %d"", (int)sizeof(int));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mrbgems/mruby-pack/src/pack.c:1181
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"        mrb_raisef(mrb, E_RUNTIME_ERROR, ""mruby-pack does not support sizeof(int) == %d"", (int)sizeof(int));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mrbgems/mruby-pack/src/pack.c:1190
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"#define mrb_assert_int_fit(t1,n,t2,max) assert((n)>=0 && ((sizeof(n)<=sizeof(t2))||(n<=(t1)(max))))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/mruby.h:66
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"mrb_static_assert(sizeof(mrb_value) == sizeof(union mrb_value_));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/mruby/boxing_word.h:132
c79b99616c6f40f5481f6e60c6a618116e4ab3b0365d3149654c3278c12cf60017364efa8288d8854c68dbe594f1bed25374aff80427a46a4bab8e0128e55167,"  ((mrb_int)(sizeof(void*) * 3 + sizeof(void*) - 32 / CHAR_BIT - 1))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/mruby/string.h:20
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"            ret = xmlSecTransformPopBin(left, buf, sizeof(buf), &bufSize, transformCtx);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/transforms.c:1404
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"                ret = kwAesId->encrypt(block, sizeof(block), block, sizeof(block), context);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/kw_aes_des.c:372
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"                ret = kwAesId->decrypt(block, sizeof(block), block, sizeof(block), context);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/kw_aes_des.c:427
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyParams(params, sizeof(params)/sizeof(params[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:136
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyParams(params, sizeof(params)/sizeof(params[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:139
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:152
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:160
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:163
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:229
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:232
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyParams(params, sizeof(params)/sizeof(params[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:304
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyParams(params, sizeof(params)/sizeof(params[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:307
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:323
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:331
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:334
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:393
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/gnutls/asymkeys.c:396
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecInternalError(""assumed sizeof(y) == sizeof(p)"", xmlSecKeyDataKlassGetName(id));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/mscng/certkeys.c:694
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    if(pos < sizeof(xmlSecErrorsTable) / sizeof(xmlSecErrorsTable[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/errors.c:196
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    if(pos < sizeof(xmlSecErrorsTable) / sizeof(xmlSecErrorsTable[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/errors.c:214
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"                ret = kwAesId->encrypt(block, sizeof(block), block, sizeof(block), context);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/kw_aes_des.c:372
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"                ret = kwAesId->decrypt(block, sizeof(block), block, sizeof(block), context);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/kw_aes_des.c:427
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    for (idx = 0; idx < sizeof(keyparms) / sizeof(keyparms[0]); idx++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gcrypt/asn1.c:508
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyParams(params, sizeof(params)/sizeof(params[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:136
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyParams(params, sizeof(params)/sizeof(params[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:139
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:152
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:160
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:163
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:229
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:232
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyParams(params, sizeof(params)/sizeof(params[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:304
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyParams(params, sizeof(params)/sizeof(params[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:307
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:323
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:331
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:334
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:393
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    xmlSecGnuTLSDestroyMpis(mpis, sizeof(mpis)/sizeof(mpis[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/gnutls/asymkeys.c:396
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"#define xmlSecMSCngKeysStoreSize (sizeof(xmlSecKeyStore) + sizeof(xmlSecKeyStorePtr))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mscng/keysstore.c:51
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        xmlSecInternalError(""assumed sizeof(y) == sizeof(p)"", xmlSecKeyDataKlassGetName(id));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mscng/certkeys.c:694
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        (sizeof(xmlSecKeyStore) + sizeof(xmlSecKeyStorePtr))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/mscrypto/keysstore.c:66
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"        (sizeof(xmlSecKeyStore) + sizeof(xmlSecKeyStorePtr))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/nss/keysstore.c:58
310d04b10f70b8becb4020d5d9a2f7ff5295026de0089e01709a2b79b078b4d2d4c96c85dca105e654c4510e2c913284b55fb2e70058253769430f21635c511d,"    for(zeros_len = 1; (zeros_len < sizeof(bb)) && (bb[zeros_len] == 0); ++zeros_len) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/nss/x509vfy.c:718
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"	size = backtrace(array, sizeof(array) / sizeof(array[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/db/os/os_stack.c:37
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"    poptDone done = memset(alloca(sizeof(*done)), 0, sizeof(*done));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/popt/popthelp.c:707
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"  return FilePath(_getcwd(cwd, sizeof(cwd)) == NULL ? """" : cwd);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/fmt/test/gmock-gtest-all.cc:7942
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"  return FilePath(getcwd(cwd, sizeof(cwd)) == NULL ? """" : cwd);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/fmt/test/gmock-gtest-all.cc:7945
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"    ::GetTempPathA(sizeof(temp_dir_path), temp_dir_path);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/fmt/test/gmock-gtest-all.cc:8731
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"//   GTEST_COMPILE_ASSERT_(sizeof(foo) < 128, foo_too_large);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/fmt/test/gtest/gtest.h:1912
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"                this->gptr() - number_putbacks * sizeof(char_type), number_putbacks * sizeof(char_type));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/Netxx-0.3.2/include/Netxx/Netbuf.h:176
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"            printf(""%.*s"", (int)(sizeof(spaces) - n), spaces);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/srtp/test/cutest.h:323
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"        for (i = (sizeof(v128_t) - c->bytes_in_buffer); i < sizeof(v128_t);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/srtp/crypto/cipher/aes_icm.c:323
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"    (unsigned)(sizeof(GeoIP_country_code) / sizeof(GeoIP_country_code[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/GeoIP/libGeoIP/GeoIP.c:159
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"      memcpy(&naddr, body, sizeof(UInt32)); body+=sizeof(UInt32);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/reTurn/StunMessage.cxx:399
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"      memcpy(&result.addr.ipv6, body, sizeof(result.addr.ipv6)); body+=sizeof(result.addr.ipv6);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/reTurn/StunMessage.cxx:406
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"  resip_assert(code >= 0 && code < (sizeof(errtext) / sizeof(*errtext)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/rutil/dns/ares/ares_strerror.c:44
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"	size = backtrace(array, sizeof(array) / sizeof(array[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/db/os/os_stack.c:37
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"<pre>db_timespec mytime;<br>DB_LSN perm_lsn;<br>DBT lease_dbt;<br>REP_GRANT_INFO gi;<br><br><br>timespecclear(&amp;mytime);<br>timespecclear(&amp;newgrant);<br>memset(&amp;lease_dbt, 0, sizeof(lease_dbt));<br>memset(&amp;gi, 0, sizeof(gi));<br>__os_gettime(dbenv, &amp;mytime);<br>timespecadd(&amp;mytime, &amp;rep-&gt;lease_duration);<br>MUTEX_LOCK(rep-&gt;clientdb_mutex);<br>perm_lsn = lp-&gt;max_perm_lsn;<br>MUTEX_UNLOCK(rep-&gt;clientdb_mutex);<br>REP_SYSTEM_LOCK(dbenv);<br>if (timespeccmp(mytime, rep-&gt;grant_expire, &gt;))<br>	rep-&gt;grant_expire = mytime;<br>gi.msg_time = msg-&gt;msg_time;<br>#ifdef DIAGNOSTIC<br>gi.expire_time = rep-&gt;grant_expire;<br>#endif<br>lease_dbt.data = &amp;gi;<br>lease_dbt.size = sizeof(gi);<br>REP_SYSTEM_UNLOCK(dbenv);<br>__rep_send_message(dbenv, eid, REP_LEASE_GRANT, &amp;perm_lsn, &amp;lease_dbt, 0, 0);<br></pre>
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/db/rep/mlease.html:417
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"#define ArraySize(X)    (sizeof(X)/sizeof(X[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/db/db_sql/sqlite/sqliteInt.h:401
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"#define etNINFO (int)(sizeof(fmtinfo)/sizeof(fmtinfo[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/db/db_sql/sqlite/sqlprintf.c:139
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"#define YY_SZ_ACTTAB (int)(sizeof(yy_action)/sizeof(yy_action[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/db/db_sql/sqlite/parse.c:602
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"        && yyruleno<(int)(sizeof(yyRuleName)/sizeof(yyRuleName[0])) ){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/db/db_sql/sqlite/parse.c:2008
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"    poptDone done = memset(alloca(sizeof(*done)), 0, sizeof(*done));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/popt/popthelp.c:707
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"  for (std::size_t i = 0, n = sizeof(codes) / sizeof(*codes); i < n; ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/fmt/test/format-impl-test.cc:175
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"  if (sizeof(U) <= sizeof(int) && sizeof(int) < sizeof(T)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/fmt/test/printf-test.cc:306
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"    (sizeof(long) == sizeof(int) ? int_type : long_long_type), long, long_type)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/fmt/include/fmt/core.h:631
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"                this->gptr() - number_putbacks * sizeof(char_type), number_putbacks * sizeof(char_type));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/Netxx-0.3.2/include/Netxx/Netbuf.h:176
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"    (unsigned)(sizeof(GeoIP_country_code) / sizeof(GeoIP_country_code[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/GeoIP/libGeoIP/GeoIP.c:159
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"#define REND_NELTS(tbl)   ( sizeof(tbl)/sizeof((tbl)[0]) )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/resip/rend/RendMisc.hxx:30
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"      if ((n=read(fd,&r,sizeof(r))) == sizeof(r))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/resip/stack/test/testHash.cxx:124
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"    for(unsigned int i = 0 ; i < sizeof(arr)/sizeof(*arr); i++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/resip/stack/test/testId.cxx:57
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"    for(size_t i = 0 ; i < sizeof(lang)/sizeof(*lang); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/resip/stack/test/testPlainContents.cxx:20
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"    for (unsigned int i = 0 ; i < sizeof(sigs)/sizeof(*sigs); i++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/p2p/test/testCon.cxx:201
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"   for (unsigned int count=0; count<(len+sizeof(int)-1)/sizeof(int); ++count)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/rutil/Random.cxx:350
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"  while ( (x=read(mPipe[0], rdBuf, sizeof(rdBuf))) == sizeof(rdBuf) )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/rutil/SelectInterruptor.cxx:83
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"            for (unsigned i = 0, n = sizeof(testVectors) / sizeof(testVectors[0]); i < n; ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/rutil/test/testData.cxx:1368
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"   if ( hdrLen >= (sizeof(result)-sizeof(result.sizeReason)) ) // Note: result.sizeReason is extra info in StunAtrError that is not on the wire
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/rutil/stun/Stun.cxx:121
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"  resip_assert(code >= 0 && code < (sizeof(errtext) / sizeof(*errtext)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/rutil/dns/ares/ares_strerror.c:44
c79870838ebb9ef921be27c4305b4864b6eb9e821f3fdb2b3f355508b7d97f24e3fb1022184bcb1f4ab84f80a21b3b7fff36a70c8f1a6d39bc272ad3f496dfa2,"      if (gethostname(hostname, sizeof(hostname)) == -1 || !strchr(hostname, '.'))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/rutil/dns/ares/ares_init.c:894
77b5bea6a7254372a97152a175d137556cc7f022b1bc666b82b6d78797d089dbfcdd198d7af590049cf9deaaad03361b48c1a1fc038fd0b0434d6af4fa540599,"#define array_count(a) (sizeof(a) / (sizeof((a)[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/external/wepoll/wepoll.c:824
97fbba49649fd9852def8c54abb1f64b754d245d6457d14c32ca33fac7409b6019e4b02be4a27bd0ce384e3f99794ae1893f068f3e444809772db394135d1535,"#define ARRAY_SIZE(array) (sizeof(array) / sizeof(array[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/bloaty.cc:101
c57ae9efe1a39a59cc2fa6b8aed3a5cd55783f273a6ce80aad34971fc5e2d146557e9abac33a7e67f667b7bbd8960358f9f6ae4afb5dd07f8ea933373888523e,"#define SIZEOF_ARRAY(a)     (sizeof(a) / sizeof(a[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/md4c.c:65
c57ae9efe1a39a59cc2fa6b8aed3a5cd55783f273a6ce80aad34971fc5e2d146557e9abac33a7e67f667b7bbd8960358f9f6ae4afb5dd07f8ea933373888523e,"        if(input_size >= sizeof(bom)  &&  memcmp(input, bom, sizeof(bom)) == 0) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/md4c-html.c:565
297ed8eaa06365ac129a0e2040cca3801263ab53ab351dd9372f96c8d79a580496d1ec8e67ff892f3abe2493ef2c377aa6c01d98362ce09b12b4a9c874700eb8,"    janet_assert(slen <= sizeof(ss), ""socket address truncated"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/core/net.c:704
297ed8eaa06365ac129a0e2040cca3801263ab53ab351dd9372f96c8d79a580496d1ec8e67ff892f3abe2493ef2c377aa6c01d98362ce09b12b4a9c874700eb8,"    janet_assert(slen <= sizeof(ss), ""socket address truncated"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/core/net.c:720
297ed8eaa06365ac129a0e2040cca3801263ab53ab351dd9372f96c8d79a580496d1ec8e67ff892f3abe2493ef2c377aa6c01d98362ce09b12b4a9c874700eb8,"    if (index >= (sizeof(optimizers) / sizeof(optimizers[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/core/cfuns.c:397
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset((char *)conn + sizeof(conn->super), 0, offsetof(struct st_h2o_http1_conn_t, req) - sizeof(conn->super));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/http1.c:1268
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"            assert(i != sizeof(stream_offsets) / sizeof(stream_offsets[0]) && ""we should have found one stream"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/http3/server.c:1605
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memcpy(&result, buf + bytes_to_encrypt - sizeof(result), sizeof(result));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/http3/common.c:487
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset((char *)conn + sizeof(conn->super), 0, sizeof(*conn) - sizeof(conn->super));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/http3/common.c:1111
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    H2O_BUILD_ASSERT(sizeof(vecs) / sizeof(vecs[0]) <= IOV_MAX);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/core/request.c:238
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    writev(2, vecs, sizeof(vecs) / sizeof(vecs[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/core/request.c:239
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    counter->average = counter->prev.sum / (sizeof(counter->prev.slots) / sizeof(counter->prev.slots[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/common/socket.c:1824
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset((char *)conn + sizeof(conn->super), 0, sizeof(*conn) - sizeof(conn->super));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/common/http3client.c:362
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memcpy(sa->sun_path, host.base + sizeof(PREFIX) - 1, host.len - (sizeof(PREFIX) - 1));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/common/url.c:409
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    nevents = epoll_wait(loop->ep, events, sizeof(events) / sizeof(events[0]), max_wait);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/common/socket/evloop/epoll.c.h:115
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    nevents = kevent(loop->kq, changelist, nchanges, events, sizeof(events) / sizeof(events[0]), &ts);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/common/socket/evloop/kqueue.c.h:120
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        assert(nparts <= sizeof(parts) / sizeof(parts[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/handler/connect.c:149
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    post_response(ctx, 500, headers_sorted, sizeof(headers_sorted) / sizeof(headers_sorted[0]), 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/handler/mruby/http_request.c:337
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        assert(i <= sizeof(argv) / sizeof(argv[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/handler/configurator/fastcgi.c:274
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset((char *)conn + sizeof(conn->super), 0, sizeof(*conn) - sizeof(conn->super));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/http2/connection.c:1720
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    return h2o_cache_set(conn->push_memo, 0, h2o_iovec_init(&url_hash, sizeof(url_hash)), url_hash, h2o_iovec_init(NULL, 0));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/http2/connection.c:1753
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        queue->offset = (queue->offset + zeroes) % (sizeof(queue->anchors) / sizeof(queue->anchors[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/http2/scheduler.c:113
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset((char *)conn + sizeof(conn->super), 0, offsetof(struct st_h2o_loopback_conn_t, req) - sizeof(conn->super));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/t/00unit/test.c:70
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    h2o_iovec_t ret = h2o_join_list(&pool, list, sizeof(list) / sizeof(list[0]), h2o_iovec_init(H2O_STRLIT(""..."")));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/t/00unit/lib/common/string.c:333
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    h2o_compress_transform(compressor, NULL, inbufs, sizeof(inbufs) / sizeof(inbufs[0]), 1, &outbufs, &outbufcnt);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/t/00unit/lib/handler/compress.c:112
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        memset((char *)sbuf + sizeof(*sbuf), 0, sz - sizeof(*sbuf));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/quicly/lib/streambuf.c:223
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        memset((uint8_t *)space + sizeof(*space), 0, sz - sizeof(*space));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/quicly/lib/quicly.c:1339
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    ok(quicly_decode_packet(&quic_ctx, &packet, datagram, sizeof(datagram), &off) == sizeof(datagram));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/quicly/t/test.c:304
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset(packetbuf + sizeof(header), 0, sizeof(packetbuf) - sizeof(header));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/quicly/t/test.c:623
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"                memmove(conns + i, conns + i + 1, sizeof(conns) - sizeof(conns[0]) * (i + 1));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/quicly/examples/echo.c:265
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"               ptls_hexdump(alloca(sizeof(tls->client_random) * 2 + 1), tls->client_random, sizeof(tls->client_random)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/lib/picotls.c:1252
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    ptls_clear_memory((uint8_t *)ctx + sizeof(ctx->super), sizeof(*ctx) - sizeof(ctx->super));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/lib/cifra/aes-common.h:111
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        cf_hash_drbg_sha256_init(&ctx, entropy, sizeof(entropy) / 2, entropy + sizeof(entropy) / 2, sizeof(entropy) / 2, ""ptls"", 4);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/lib/cifra/random.c:119
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        ok(memcmp(expected + sizeof(plaintext), encrypted + sizeof(plaintext), 16) == 0);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/t/fusion.c:121
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    ok(memcmp(expected + sizeof(plaintext), encrypted + sizeof(plaintext), 16) == 0);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/t/fusion.c:220
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"  memset(partial + npartial, 0, sizeof(partial) - npartial);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/deps/cifra/src/norx.c:218
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset(partial + npartial, 0, sizeof(partial) - npartial);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/deps/cifra/src/ocb.c:184
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset(partial + npartial, 0, sizeof(partial) - npartial);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/deps/cifra/src/ocb.c:264
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset(partial + npartial, 0, sizeof(partial) - npartial);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/deps/cifra/src/ocb.c:361
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"  memset(ctx->buffer + ctx->buffer_used, 0, sizeof(ctx->buffer) - ctx->buffer_used);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/deps/cifra/src/gcm.c:59
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"            printf(""%.*s"", (int) (sizeof(spaces) - n), spaces);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/deps/cifra/src/ext/cutest.h:303
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    assert(sizeof(key) >= aead->key_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/picotlsvs/bcrypt-test/bcrypt-test.c:181
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    assert(sizeof(iv) >= aead->iv_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/picotlsvs/bcrypt-test/bcrypt-test.c:182
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    assert(sizeof(key) >= aead->key_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/picotlsvs/bcrypt-test/bcrypt-test.c:263
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    assert(sizeof(iv) >= aead->iv_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/picotlsvs/bcrypt-test/bcrypt-test.c:264
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    assert(sizeof(key) >= aead->key_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/picotlsvs/bcrypt-test/bcrypt-test.c:324
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    assert(sizeof(iv) >= aead->iv_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/picotlsvs/bcrypt-test/bcrypt-test.c:325
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    assert(sizeof(key) >= aead->key_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/picotlsvs/bcrypt-test/bcrypt-test.c:395
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    assert(sizeof(iv) >= aead->iv_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/picotlsvs/bcrypt-test/bcrypt-test.c:396
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    assert(sizeof(key) >= b1->key_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/picotlsvs/bcrypt-test/bcrypt-test.c:511
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    assert(sizeof(data) >= data_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/picotls/picotlsvs/bcrypt-test/bcrypt-test.c:512
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        mrb_raisef(mrb, E_RUNTIME_ERROR, ""mruby-pack does not support sizeof(int) == %S"", mrb_fixnum_value(sizeof(int)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/mruby/mrbgems/mruby-pack/src/pack.c:979
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        mrb_raisef(mrb, E_RUNTIME_ERROR, ""mruby-pack does not support sizeof(int) == %S"", mrb_fixnum_value(sizeof(int)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/mruby/mrbgems/mruby-pack/src/pack.c:988
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"  ret += (sizeof(uint16_t) + sizeof(uint16_t)) * (irep->nlocals - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/mruby/src/dump.c:643
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    printf(""sizeof(token) = %ld\n"", (long)sizeof(yaml_token_t));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/yaml/tests/test-version.c:24
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    printf(""sizeof(event) = %ld\n"", (long)sizeof(yaml_event_t));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/yaml/tests/test-version.c:25
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    printf(""sizeof(parser) = %ld\n"", (long)sizeof(yaml_parser_t));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/yaml/tests/test-version.c:26
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"	if (setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, &on, sizeof(on)) == -1) __err_connect(""setsockopt"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/klib/kopen.c:48
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"	if (setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, &on, sizeof(on)) == -1) __err_connect(""setsockopt"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/klib/knetfile.c:103
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"	if (setsockopt(fd, SOL_SOCKET, SO_REUSEADDR, (char*)&on, sizeof(on)) == -1) __err_connect(""setsockopt"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/klib/knetfile.c:162
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        len = len < (sizeof(c->errstr)-1) ? len : (sizeof(c->errstr)-1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/hiredis/hiredis.c:578
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    len = len < (sizeof(r->errstr)-1) ? len : (sizeof(r->errstr)-1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/deps/hiredis/read.c:67
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    int len = snprintf(buf, sizeof(buf), ""%s%s"", node->data.scalar, strrchr(h2o_socket_buffer_mmap_settings.fn_template, '/'));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/main.c:2389
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    int framecnt = backtrace(frames, sizeof(frames) / sizeof(frames[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/main.c:2626
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        r = pthread_setaffinity_np(pthread_self(), sizeof(cpu_set), &cpu_set);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/main.c:3143
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    int framecnt = backtrace(frames, sizeof(frames) / sizeof(frames[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/httpclient.c:541
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"            if (conn->_write_buf.cnt < sizeof(conn->_write_buf.bufs) / sizeof(conn->_write_buf.bufs[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/websocket.c:226
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset((char *)conn + sizeof(conn->super), 0, offsetof(struct st_h2o_http1_conn_t, req) - sizeof(conn->super));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http1.c:1268
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"            for (i = 0; i != sizeof(stream_offsets) / sizeof(stream_offsets[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http3/server.c:1600
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"            assert(i != sizeof(stream_offsets) / sizeof(stream_offsets[0]) && ""we should have found one stream"");
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http3/server.c:1605
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memcpy(&result, buf + bytes_to_encrypt - sizeof(result), sizeof(result));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http3/common.c:487
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset((char *)conn + sizeof(conn->super), 0, sizeof(*conn) - sizeof(conn->super));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http3/common.c:1111
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if (index >= sizeof(h2o_qpack_static_table) / sizeof(h2o_qpack_static_table[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http3/qpack.c:206
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if (!(index < sizeof(h2o_qpack_static_table) / sizeof(h2o_qpack_static_table[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http3/qpack.c:547
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    H2O_BUILD_ASSERT(sizeof(vecs) / sizeof(vecs[0]) <= IOV_MAX);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/core/request.c:238
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    writev(2, vecs, sizeof(vecs) / sizeof(vecs[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/core/request.c:239
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if (++counter->prev.index >= sizeof(counter->prev.slots) / sizeof(counter->prev.slots[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/socket.c:1820
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    counter->average = counter->prev.sum / (sizeof(counter->prev.slots) / sizeof(counter->prev.slots[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/socket.c:1824
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset((char *)conn + sizeof(conn->super), 0, sizeof(*conn) - sizeof(conn->super));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/http3client.c:362
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if (sysctl(name, sizeof(name) / sizeof(name[0]), &ncpu, &ncpu_sz, NULL, 0) != 0 || sizeof(ncpu) != ncpu_sz) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/serverutil.c:340
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if (frame.type < sizeof(FRAME_HANDLERS) / sizeof(FRAME_HANDLERS[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/http2client.c:814
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if (host.len < sizeof(PREFIX) - 1 || memcmp(host.base, PREFIX, sizeof(PREFIX) - 1) != 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/url.c:401
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memcpy(sa->sun_path, host.base + sizeof(PREFIX) - 1, host.len - (sizeof(PREFIX) - 1));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/url.c:409
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    nevents = epoll_wait(loop->ep, events, sizeof(events) / sizeof(events[0]), max_wait);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/socket/evloop/epoll.c.h:115
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if ((nchanges = collect_status(loop, changelist, sizeof(changelist) / sizeof(changelist[0]))) == -1)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/socket/evloop/kqueue.c.h:113
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    nevents = kevent(loop->kq, changelist, nchanges, events, sizeof(events) / sizeof(events[0]), &ts);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/socket/evloop/kqueue.c.h:120
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        assert(nparts <= sizeof(parts) / sizeof(parts[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/handler/connect.c:149
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"#define MIME_STARTS_WITH(x) (mime_len >= sizeof(x) - 1 && memcmp(mime, x, sizeof(x) - 1) == 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/handler/mimemap.c:425
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"#define MIME_ENDS_WITH(x) (mime_len >= sizeof(x) - 1 && memcmp(mime + mime_len - (sizeof(x) - 1), x, sizeof(x) - 1) == 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/handler/mimemap.c:426
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"#define COND0(str, lit, pos) (sizeof(lit) - 1 <= (pos) || (str)[pos] == (lit)[pos])
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/handler/mruby/middleware.c:527
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"#define CHECK_KEY(lit) ((sizeof(lit) - 1) == keystr_len && COND(keystr, lit))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/handler/mruby/middleware.c:531
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    post_response(ctx, 500, headers_sorted, sizeof(headers_sorted) / sizeof(headers_sorted[0]), 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/handler/mruby/http_request.c:337
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        assert(i <= sizeof(argv) / sizeof(argv[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/handler/configurator/fastcgi.c:274
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        for (i = 0; i < sizeof(conn->_recently_closed_streams.streams) / sizeof(conn->_recently_closed_streams.streams[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http2/connection.c:403
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if (frame.type < sizeof(FRAME_HANDLERS) / sizeof(FRAME_HANDLERS[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http2/connection.c:1246
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset((char *)conn + sizeof(conn->super), 0, sizeof(*conn) - sizeof(conn->super));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http2/connection.c:1720
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    return h2o_cache_set(conn->push_memo, 0, h2o_iovec_init(&url_hash, sizeof(url_hash)), url_hash, h2o_iovec_init(NULL, 0));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http2/connection.c:1753
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if (!(cookie_len > sizeof(COOKIE_NAME ""="") - 1 && memcmp(cookie, H2O_STRLIT(COOKIE_NAME ""="")) == 0))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http2/casper.c:106
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if ((binary = h2o_decode_base64url(NULL, cookie + sizeof(COOKIE_NAME ""="") - 1, cookie_len - (sizeof(COOKIE_NAME ""="") - 1)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http2/casper.c:110
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    for (i = 0; i != sizeof(queue->anchors) / sizeof(queue->anchors[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http2/scheduler.c:38
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        h2o_linklist_insert(queue->anchors + (queue->offset + offset) % (sizeof(queue->anchors) / sizeof(queue->anchors[0])),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http2/scheduler.c:90
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        queue->offset = (queue->offset + zeroes) % (sizeof(queue->anchors) / sizeof(queue->anchors[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/http2/scheduler.c:113
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        strcasecmp(host + host_len - (sizeof(inject_suffix) - 1), inject_suffix) != 0) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/t/injectaddr.c:77
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    while (fgets(line, sizeof(line), inp) != NULL && (len = strlen(line)) != 0) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/t/qif.c:127
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset((char *)conn + sizeof(conn->super), 0, offsetof(struct st_h2o_loopback_conn_t, req) - sizeof(conn->super));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/t/00unit/test.c:70
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        for (i = 0; i < sizeof(tests) / sizeof(tests[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/t/00unit/lib/core/util.c:242
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    h2o_iovec_t ret = h2o_join_list(&pool, list, sizeof(list) / sizeof(list[0]), h2o_iovec_init(H2O_STRLIT(""..."")));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/t/00unit/lib/common/string.c:333
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    h2o_compress_transform(compressor, NULL, inbufs, sizeof(inbufs) / sizeof(inbufs[0]), 1, &outbufs, &outbufcnt);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/t/00unit/lib/handler/compress.c:112
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"#define ARRAY_SIZE(x) (sizeof(x)/sizeof(x[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/libgkc/test.c:37
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    for (vecindex = 0; vecindex != sizeof(vecs) / sizeof(vecs[0]);) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/neverbleed/neverbleed.c:301
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        while ((r = writev(fd, vecs + vecindex, sizeof(vecs) / sizeof(vecs[0]) - vecindex)) == -1 && errno == EINTR)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/neverbleed/neverbleed.c:302
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        memset((char *)sbuf + sizeof(*sbuf), 0, sz - sizeof(*sbuf));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/quicly/lib/streambuf.c:223
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        memset((uint8_t *)space + sizeof(*space), 0, sz - sizeof(*space));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/quicly/lib/quicly.c:1339
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    ok(quicly_decode_packet(&quic_ctx, &packet, datagram, sizeof(datagram), &off) == sizeof(datagram));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/quicly/t/test.c:304
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    memset(packetbuf + sizeof(header), 0, sizeof(packetbuf) - sizeof(header));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/quicly/t/test.c:623
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"                memmove(conns + i, conns + i + 1, sizeof(conns) - sizeof(conns[0]) * (i + 1));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/quicly/examples/echo.c:265
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"               ptls_hexdump(alloca(sizeof(tls->client_random) * 2 + 1), tls->client_random, sizeof(tls->client_random)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/picotls/lib/picotls.c:1252
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    ptls_clear_memory((uint8_t *)ctx + sizeof(ctx->super), sizeof(*ctx) - sizeof(ctx->super));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/picotls/lib/cifra/aes-common.h:111
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        cf_hash_drbg_sha256_init(&ctx, entropy, sizeof(entropy) / 2, entropy + sizeof(entropy) / 2, sizeof(entropy) / 2, ""ptls"", 4);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/picotls/lib/cifra/random.c:119
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if (mem_eq(tag, (const uint8_t *)input + inlen - sizeof(tag), sizeof(tag))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/picotls/lib/cifra/chacha20.c:169
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        ok(memcmp(expected + sizeof(plaintext), encrypted + sizeof(plaintext), 16) == 0);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/picotls/t/fusion.c:121
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    ok(memcmp(expected + sizeof(plaintext), encrypted + sizeof(plaintext), 16) == 0);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/picotls/t/fusion.c:220
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    if (snprintf(esni_name, sizeof(esni_name), ""_esni.%s"", server_name) > sizeof(esni_name) - 1)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/picotls/t/util.h:343
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"#define PTLS_ELEMENTSOF(x) (PTLS_ASSERT_IS_ARRAY_EXPR(x) * sizeof(x) / sizeof((x)[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/picotls/include/picotls.h:61
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"                (sizeof(size_t) < 8 && (_block_size64 >> (8 * sizeof(size_t))) != 0)) {                                            \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/picotls/include/picotls.h:1073
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        mrb_raisef(mrb, E_RUNTIME_ERROR, ""mruby-pack does not support sizeof(int) == %S"", mrb_fixnum_value(sizeof(int)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/mruby/mrbgems/mruby-pack/src/pack.c:979
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        mrb_raisef(mrb, E_RUNTIME_ERROR, ""mruby-pack does not support sizeof(int) == %S"", mrb_fixnum_value(sizeof(int)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/mruby/mrbgems/mruby-pack/src/pack.c:988
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"#define mrb_assert_int_fit(t1,n,t2,max) assert((n)>=0 && ((sizeof(n)<=sizeof(t2))||(n<=(t1)(max))))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/mruby/include/mruby.h:54
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"  ret += (sizeof(uint16_t) + sizeof(uint16_t)) * (irep->nlocals - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/mruby/src/dump.c:643
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"  if (v < sizeof(kLog2Table) / sizeof(kLog2Table[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/brotli/c/enc/fast_log.h:128
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"  if (htsize <= sizeof(s->small_table_) / sizeof(s->small_table_[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/brotli/c/enc/encode.c:237
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    printf(""sizeof(token) = %ld\n"", (long)sizeof(yaml_token_t));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/yaml/tests/test-version.c:24
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    printf(""sizeof(event) = %ld\n"", (long)sizeof(yaml_event_t));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/yaml/tests/test-version.c:25
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    printf(""sizeof(parser) = %ld\n"", (long)sizeof(yaml_parser_t));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/yaml/tests/test-version.c:26
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"#define chr(i) (cs == sizeof(saint_t) ? ((const saint_t *)T)[i] : (T[i]? (saint_t)T[i] : i - SAINT_MAX))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/klib/ksa.c:54
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"	if (count != sizeof(header) || !check_header(header)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/klib/bgzf.c:340
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"		b->t = ((size - 4 - sizeof(void*)) / (sizeof(void*) + sizeof(key_t)) + 1) >> 1; \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/klib/kbtree.h:55
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"		b->ilen = (4 + sizeof(void*) + b->n * (sizeof(void*) + sizeof(key_t)) + 3) >> 2 << 2; \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/klib/kbtree.h:61
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"        len = len < (sizeof(c->errstr)-1) ? len : (sizeof(c->errstr)-1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/hiredis/hiredis.c:578
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    len = len < (sizeof(r->errstr)-1) ? len : (sizeof(r->errstr)-1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/deps/hiredis/read.c:67
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"            for (i = 0; i != sizeof(h2o_http3_alpn) / sizeof(h2o_http3_alpn[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/main.c:521
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    int len = snprintf(buf, sizeof(buf), ""%s%s"", node->data.scalar, strrchr(h2o_socket_buffer_mmap_settings.fn_template, '/'));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/main.c:2389
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    int framecnt = backtrace(frames, sizeof(frames) / sizeof(frames[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/main.c:2626
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"    int framecnt = backtrace(frames, sizeof(frames) / sizeof(frames[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/httpclient.c:541
d2445edbbde089e8aef35a65cbb2655e0c486339c3c56608daf98d595323ad7d2b8e6b94ca3f48d84bc9b2a28337132144ea058581d6daa6c6b5d5f514a76190,"            if (req.num_headers >= sizeof(req.headers) / sizeof(req.headers[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/httpclient.c:702
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	napi_define_properties(env, pck_obj, sizeof(filterpck_properties)/sizeof(napi_property_descriptor), filterpck_properties);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:1548
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	napi_define_properties(env, pid_obj, sizeof(filterpid_properties)/sizeof(napi_property_descriptor), filterpid_properties);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:2920
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	NAPI_CALL( napi_define_properties(env, obj, sizeof(filter_properties)/sizeof(napi_property_descriptor), filter_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:3410
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	NAPI_CALL(napi_define_properties(env, obj, sizeof(curstom_filter_properties)/sizeof(napi_property_descriptor), curstom_filter_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:3728
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	status = napi_define_class(env, ""FilterSession"", NAPI_AUTO_LENGTH , new_fs, NULL, sizeof(fs_properties)/sizeof(napi_property_descriptor), fs_properties, &cons);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:3965
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_base_properties)/sizeof(napi_property_descriptor), fevt_base_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4308
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4326
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4332
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4338
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4346
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4356
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4368
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4378
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4388
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4397
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_ui_properties)/sizeof(napi_property_descriptor), fevt_ui_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4408
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4425
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4437
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4454
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4463
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4472
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4485
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4493
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4505
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4511
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:4517
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	NAPI_CALL( napi_define_properties(env, this_val, sizeof(fio_base_properties)/sizeof(napi_property_descriptor), fio_base_properties) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/share/nodejs/src/gpac_napi.c:6055
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			memcpy(op_dst_u + lineC * sizeof(short), op_dst_u, lineC * sizeof(short));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/modules/dektec_out/dektec_video.cpp:248
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			memcpy(op_dst_v + lineC * sizeof(short), op_dst_v, lineC * sizeof(short));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/modules/dektec_out/dektec_video.cpp:249
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			ExtEscape(DC, GETGXINFO, 0, NULL, sizeof(GXInfo), (char*)&GXInfo);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/modules/deprecated/old_arch/gapi/gapi.cpp:1385
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		memcpy(wgtload->file_name, esd->decoderConfig->decoderSpecificInfo->data + sizeof(u32), esd->decoderConfig->decoderSpecificInfo->dataLength - sizeof(u32) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/modules/deprecated/old_arch/widgetman/wgt_load.c:215
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"#define SAFEALLOC(__ptr, __struc) __ptr = (__struc*)gf_malloc(sizeof(__struc)); if (__ptr) memset(__ptr, 0, sizeof(__struc));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/modules/deprecated/old_arch/gdip_raster/gdip_priv.h:36
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			RaiseException(0x406D1388, 0, sizeof(info)/sizeof(ULONG_PTR), (ULONG_PTR*)&info);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/utils/os_thread.c:273
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"    New_3(SampleTree, thread_sampler->sample_trees[SampleType_CPU], sizeof(Sample), (ObjConstructor)Sample_Constructor, (ObjDestructor)Sample_Destructor);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/utils/Remotery.c:4380
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"    strncat_s(thread_name, sizeof(thread_name), msg->thread_name, strnlen_s(msg->thread_name, 255));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/utils/Remotery.c:4635
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            RaiseException(0x406D1388, 0, sizeof(info)/sizeof(ULONG_PTR), (ULONG_PTR*)&info);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/utils/Remotery.c:5260
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            New_3(SampleTree, *cuda_tree, sizeof(CUDASample), (ObjConstructor)CUDASample_Constructor, (ObjDestructor)CUDASample_Destructor);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/utils/Remotery.c:5788
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            New_3(SampleTree, *d3d_tree, sizeof(D3D11Sample), (ObjConstructor)D3D11Sample_Constructor, (ObjDestructor)D3D11Sample_Destructor);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/utils/Remotery.c:6327
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            New_3(SampleTree, *ogl_tree, sizeof(OpenGLSample), (ObjConstructor)OpenGLSample_Constructor, (ObjDestructor)OpenGLSample_Destructor);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/utils/Remotery.c:6967
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            New_3(SampleTree, *metal_tree, sizeof(MetalSample), (ObjConstructor)MetalSample_Constructor, (ObjDestructor)MetalSample_Destructor);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/utils/Remotery.c:7299
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		snprintf(port, sizeof(port)-1, "":%d"", info->port);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/utils/downloader.c:2247
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            l = (len + sizeof(limb_t) - 1) / sizeof(limb_t);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/quickjs/quickjs.c:35246
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	count = (sizeof(lang_table) / sizeof(lang_table[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/media_tools/vobsub.c:185
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	count = (sizeof(lang_table) / sizeof(lang_table[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/media_tools/vobsub.c:202
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		sprintf(szFmt, ""%d@%p"", (u32) sizeof(stack), stack);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/filters/unit_test_filter.c:749
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	snprintf(name, sizeof(name), ""video encoder %s"", video_data_conf->filename);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/video_muxer.c:758
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		snprintf(name, sizeof(name), ""%s/%s_%d_ffmpeg.mp4"", directory, id_name, seg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/video_muxer.c:800
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		snprintf(name, sizeof(name), ""%s/%s_%d.264"", directory, id_name, seg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/video_muxer.c:803
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		snprintf(name, sizeof(name), ""%s/%s_%d_gpac.mp4"", directory, id_name, seg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/video_muxer.c:807
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			snprintf(name, sizeof(name), ""%s/%s_init_gpac.mp4"", directory, id_name);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/video_muxer.c:812
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		snprintf(name, sizeof(name), ""%s/%s_%d_gpac.m4s"", directory, id_name, seg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/video_muxer.c:816
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			snprintf(name, sizeof(name), ""%s/%s_init_gpac.mp4"", directory, id_name);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/video_muxer.c:820
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		snprintf(name, sizeof(name), ""%s/%s_%d_gpac.m4s"", directory, id_name, seg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/video_muxer.c:824
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	snprintf(name, sizeof(name), ""audio encoder %s"", audio_data_conf->filename);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/audio_muxer.c:354
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		snprintf(name, sizeof(name), ""%s/%s_%d_ffmpeg.mp4"", directory, id_name, seg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/audio_muxer.c:386
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		snprintf(name, sizeof(name), ""%s/%s_%d_gpac.mp4"", directory, id_name, seg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/audio_muxer.c:390
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			snprintf(name, sizeof(name), ""%s/%s_init_gpac.mp4"", directory, id_name);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/audio_muxer.c:395
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		snprintf(name, sizeof(name), ""%s/%s_%d_gpac.m4s"", directory, id_name, seg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/audio_muxer.c:399
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	snprintf(name, sizeof(name), ""%s/%s"", cmddata->out_dir, cmddata->mpd_filename);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/applications/deprecated/old_arch/dashcast/controler.c:141
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	NAPI_CALL( napi_define_properties(env, obj, sizeof(filter_properties)/sizeof(napi_property_descriptor), filter_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:3410
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	NAPI_CALL(napi_define_properties(env, obj, sizeof(curstom_filter_properties)/sizeof(napi_property_descriptor), curstom_filter_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:3728
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_base_properties)/sizeof(napi_property_descriptor), fevt_base_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4308
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4326
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4332
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4338
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4346
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4356
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4368
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4378
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4388
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4397
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_ui_properties)/sizeof(napi_property_descriptor), fevt_ui_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4408
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4425
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4437
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4454
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4463
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4472
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4485
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4493
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4505
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4511
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		NAPI_CALL( napi_define_properties(env, obj, sizeof(fevt_properties)/sizeof(napi_property_descriptor), fevt_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:4517
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	NAPI_CALL( napi_define_properties(env, this_val, sizeof(fio_base_properties)/sizeof(napi_property_descriptor), fio_base_properties) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/share/nodejs/src/gpac_napi.c:6055
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"#define NPT_ARRAY_SIZE(_a) (sizeof(_a)/sizeof((_a)[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/extra_lib/include/platinum/NptUtils.h:60
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"#define FF_ARRAY_ELEMS(a) (sizeof(a) / sizeof((a)[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/extra_lib/include/libavutil/macros.h:53
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"#define GF_ARRAY_LENGTH(a) (sizeof(a) / sizeof((a)[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/gpac/tools.h:2150
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			memcpy(op_dst_u + lineC * sizeof(short), op_dst_u, lineC * sizeof(short));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/modules/dektec_out/dektec_video.cpp:248
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			memcpy(op_dst_v + lineC * sizeof(short), op_dst_v, lineC * sizeof(short));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/modules/dektec_out/dektec_video.cpp:249
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		memcpy(wgtload->file_name, esd->decoderConfig->decoderSpecificInfo->data + sizeof(u32), esd->decoderConfig->decoderSpecificInfo->dataLength - sizeof(u32) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/modules/deprecated/old_arch/widgetman/wgt_load.c:215
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"#define SAFEALLOC(__ptr, __struc) __ptr = (__struc*)gf_malloc(sizeof(__struc)); if (__ptr) memset(__ptr, 0, sizeof(__struc));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/modules/deprecated/old_arch/gdip_raster/gdip_priv.h:36
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"#define countof(x) (sizeof(x) / sizeof((x)[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/scenegraph/qjs_common.h:41
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			RaiseException(0x406D1388, 0, sizeof(info)/sizeof(ULONG_PTR), (ULONG_PTR*)&info);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/os_thread.c:273
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	if (len <= 0 || len >= (int)sizeof(buf) || buf[sizeof(buf) - 1] != 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/gzio.c:606
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	if (len <= 0 || len >= sizeof(buf) || buf[sizeof(buf) - 1] != 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/gzio.c:639
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"    New_3(SampleTree, thread_sampler->sample_trees[SampleType_CPU], sizeof(Sample), (ObjConstructor)Sample_Constructor, (ObjDestructor)Sample_Destructor);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/Remotery.c:4380
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"    strncat_s(thread_name, sizeof(thread_name), msg->thread_name, strnlen_s(msg->thread_name, 255));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/Remotery.c:4635
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            RaiseException(0x406D1388, 0, sizeof(info)/sizeof(ULONG_PTR), (ULONG_PTR*)&info);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/Remotery.c:5260
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            New_3(SampleTree, *cuda_tree, sizeof(CUDASample), (ObjConstructor)CUDASample_Constructor, (ObjDestructor)CUDASample_Destructor);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/Remotery.c:5788
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            New_3(SampleTree, *d3d_tree, sizeof(D3D11Sample), (ObjConstructor)D3D11Sample_Constructor, (ObjDestructor)D3D11Sample_Destructor);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/Remotery.c:6327
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            New_3(SampleTree, *ogl_tree, sizeof(OpenGLSample), (ObjConstructor)OpenGLSample_Constructor, (ObjDestructor)OpenGLSample_Destructor);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/Remotery.c:6967
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"            New_3(SampleTree, *metal_tree, sizeof(MetalSample), (ObjConstructor)MetalSample_Constructor, (ObjDestructor)MetalSample_Destructor);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/Remotery.c:7299
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"			        read(fd, buf, sizeof(buf)) == sizeof(buf)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/dlmalloc.c:3026
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"#define countof(x) (sizeof(x) / sizeof((x)[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/quickjs/cutils.h:61
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"#define NUM_ELEMENTS_IN_ARRAY(name) ((sizeof((name))) / (sizeof(*(name))))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/media_tools/mpeg2_ps.c:1442
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	count = (sizeof(lang_table) / sizeof(lang_table[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/media_tools/vobsub.c:185
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	count = (sizeof(lang_table) / sizeof(lang_table[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/media_tools/vobsub.c:202
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		if (gf_fwrite(buf, sizeof(buf), fsub) != sizeof(buf)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/media_tools/vobsub.c:651
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	if (ptr->size < sizeof(GF_SampleGroupEntry)*ptr->entry_count || (u64)ptr->entry_count > (u64)SIZE_MAX/sizeof(GF_SampleGroupEntry))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/isomedia/box_code_base.c:9596
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		if (n_rep->_name) { rep->_name = gf_malloc(sizeof(GF_MPD_Fractional)); memcpy(rep->_name, n_rep->_name, sizeof(GF_MPD_Fractional)); } \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/filters/dasher.c:4429
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		if ((p.value.data.size != (u32) sizeof(stack)) || memcmp(p.value.data.ptr, (char *) stack, sizeof(stack))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/filters/unit_test_filter.c:751
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"	if ( gf_strlcpy(outfile, outName ? outName : inName, sizeof(outfile)) >= sizeof(outfile) ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/applications/mp4box/main.c:6112
ef5444ebe71ebc57937a80aa6d839d0be144648cfb09da843d989a7e85c1cbe97e2f134031ca242ec57f513d6c64a4d1c9ece37032ec9cd8b6bb43ceb02d23d0,"		for (int i=0; i<sizeof(arr)/sizeof(arr[0]); i++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/applications/deprecated/old_arch/GPAX/GPAXPlugin.h:184
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"      CryptUpdateDigestInt(&hmacState, sizeof(hashAlg), &hashAlg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Ticket.c:148
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"     CryptUpdateDigestInt(&hashState, sizeof(commandCode), &commandCode);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Policy_spt.c:97
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"       CryptUpdateDigestInt(&hmacState, sizeof(gr.clearCount), &gr.clearCount);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Context_spt.c:92
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"             CryptUpdateDigestInt(&hashState, sizeof(i), &i);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/CommandAudit.c:263
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"    pAssert(contextIndex < sizeof(gr.contextArray)/sizeof(gr.contextArray[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Session.c:559
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"   _cpri__DrbgGetPutState(GET_STATE, sizeof(go.drbgState), (BYTE *)&go.drbgState);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Manufacture.c:87
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"  value.t.size = sizeof(TPMI_RH_NV_INDEX)+sizeof(TPMI_ALG_HASH)+sizeof(TPMA_NV)+sizeof(UINT16)+sizeof(UINT16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/marshal_test.c:397
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"                     NvWriteIndexData(nvHandle, &nvIndex, 0, sizeof(counter), &counter);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/NV.c:1051
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"              MemoryCopy(data, s_ramIndex + ramAddr, sizeof(*data), sizeof(*data));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/NV.c:1511
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"    NvAdd(sizeof(nvBuffer), sizeof(nvBuffer), nvBuffer);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/NV.c:2345
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"   if(in->offset < sizeof(UINT64) + sizeof(UINT64))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/PolicyCounterTimer.c:36
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"     for(index = (sizeof(s_algorithms) / sizeof(s_algorithms[0])) - 1;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/AlgorithmCap.c:177
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"    pAssert(contextIndex < sizeof(gr.contextArray)/sizeof(gr.contextArray[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Session.c:559
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"              MemoryCopy(data, s_ramIndex + ramAddr, sizeof(*data), sizeof(*data));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/NV.c:1511
459ccff88cc69a03301d70a2cdc2ab7d7ac5a6ad46f7c3aa28e1b8e84231af49349a0c761d11a85776a109f5027840809a5dd596da96de766794081c5394a301,"    NvAdd(sizeof(nvBuffer), sizeof(nvBuffer), nvBuffer);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/NV.c:2345
b86a63b153008016d1ef1d32569fbdc3f018d326bc6c97034dff25119c060fab704b7309e68bf78835e4908844c474a0df5d6abf34ada86b27ba9021bb006e0c,"    ref_make_ref(&(var), sizeof(*(var)), offsetof(typeof(*(var)), ref))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/ref.h:48
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		snprintf(p, sizeof(zname)-(p-zname), ""\003%3.3d"", labnum);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/testcode/unitneg.c:105
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	snprintf(p, sizeof(zname)-(p-zname), ""\007example\003com"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/testcode/unitneg.c:108
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		(void)strlcpy(buf+strlen(buf), expand, sizeof(buf)-strlen(buf));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/testcode/replay.c:882
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	(void)strlcpy(buf+strlen(buf), at, sizeof(buf)-strlen(buf));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/testcode/replay.c:887
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		where+sizeof(*tv)+sizeof(*p)+sizeof(len), len);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/testcode/delayer.c:317
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		memmove(pktbuf+*pktlen+sizeof(edns), ednsdata, ednslen);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/testcode/testpkts.c:538
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	*pktlen += (sizeof(edns) + ednslen);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/testcode/testpkts.c:540
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		yarrow256_random(&s->ctx, sizeof(x), (uint8_t *)&x);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/random.c:182
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	snprintf(buf+strlen(buf), sizeof(buf)-strlen(buf), "" PTR %s"", name);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/config_file.c:2498
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		snprintf(t, sizeof(t), ""TYPE%d"", (int)type);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/net_help.c:551
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		snprintf(c, sizeof(c), ""CLASS%d"", (int)dclass);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/net_help.c:558
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		snprintf(t, sizeof(t), ""TYPE%d"", (int)type);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/net_help.c:580
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		snprintf(c, sizeof(c), ""CLASS%d"", (int)dclass);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/net_help.c:587
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	snprintf(b, sizeof(b), ""%s %s"", str, buf);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/module.c:212
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-11, 13), hashlittle(p, sizeof(q)-12, 13));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/storage/lookup3.c:973
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-11, 13), hashlittle(p, sizeof(q)-12, 13));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/storage/lookup3.c:981
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-11, 13), hashlittle(p, sizeof(q)-12, 13));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/storage/lookup3.c:989
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-11, 13), hashlittle(p, sizeof(q)-12, 13));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/util/storage/lookup3.c:997
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+sizeof(uint32_t), (uint32_t)q->querynum);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libunbound/context.c:244
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+2*sizeof(uint32_t), (uint32_t)q->res->qtype);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libunbound/context.c:245
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+3*sizeof(uint32_t), (uint32_t)q->res->qclass);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libunbound/context.c:246
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+sizeof(uint32_t), (uint32_t)q->querynum);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libunbound/context.c:325
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+2*sizeof(uint32_t), (uint32_t)err);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libunbound/context.c:326
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+3*sizeof(uint32_t), (uint32_t)q->msg_security);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libunbound/context.c:327
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+4*sizeof(uint32_t), (uint32_t)q->res->was_ratelimited);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libunbound/context.c:328
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+5*sizeof(uint32_t), (uint32_t)wlen);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libunbound/context.c:329
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+sizeof(uint32_t), (uint32_t)q->querynum);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libunbound/context.c:391
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"			memmove(buf+i*sizeof(v), &v, sizeof(v));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/smallapp/unbound-control.c:1032
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	ve->nsec3_keysize = (size_t*)calloc(sizeof(size_t), (size_t)c);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/validator/validator.c:94
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	ve->nsec3_maxiter = (size_t*)calloc(sizeof(size_t), (size_t)c);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/validator/validator.c:95
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"					for (ii = 0; ii < sizeof(cl)/sizeof(cl[0]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/compat/getentropy_solaris.c:361
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"					for (ii = 0; ii < sizeof(cl)/sizeof(cl[0]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/compat/getentropy_linux.c:439
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"			else snprintf(s, sizeof(s), ""%s"", str);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/iterator/iter_delegpt.c:312
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_buffer_read_at(buf, lim-sizeof(expiry), &expiry, sizeof(expiry));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/cachedb/cachedb.c:503
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	wsvc_err2str(e, sizeof(e), str, (int)GetLastError());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/winrc/w_inst.c:65
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	wsvc_err2str(e, sizeof(e), str, GetLastError());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/winrc/win_svc.c:135
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	while(fgets(np, (int)sizeof(buf) - (np-buf), in)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/testcode/unitmsgparse.c:479
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		snprintf(p, sizeof(zname)-(p-zname), ""\003%3.3d"", labnum);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/testcode/unitneg.c:105
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	snprintf(p, sizeof(zname)-(p-zname), ""\007example\003com"");
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/testcode/unitneg.c:108
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	for(i=0; i<sizeof(headers)/sizeof(headers[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/testcode/dohclient.c:199
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		if((size_t)(next-at) >= sizeof(buf)-strlen(buf))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/testcode/replay.c:875
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		(void)strlcpy(buf+strlen(buf), expand, sizeof(buf)-strlen(buf));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/testcode/replay.c:882
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	(void)strlcpy(buf+strlen(buf), at, sizeof(buf)-strlen(buf));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/testcode/replay.c:887
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	while(fgets(np, (int)sizeof(buf) - (np-buf), in)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/testcode/pktview.c:64
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	snprintf(buf+strlen(buf), sizeof(buf)-strlen(buf), "" PTR %s"", name);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/config_file.c:2498
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		snprintf(t, sizeof(t), ""TYPE%d"", (int)type);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/net_help.c:551
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"		snprintf(t, sizeof(t), ""TYPE%d"", (int)type);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/net_help.c:580
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"#    define CMSG_ALIGN(len) (((len)+sizeof(long)-1) & ~(sizeof(long)-1))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/netevent.c:79
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-1, 13), hashlittle(p, sizeof(q)-2, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:968
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-3, 13), hashlittle(p, sizeof(q)-4, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:969
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-5, 13), hashlittle(p, sizeof(q)-6, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:970
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-7, 13), hashlittle(p, sizeof(q)-8, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:971
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-9, 13), hashlittle(p, sizeof(q)-10, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:972
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-11, 13), hashlittle(p, sizeof(q)-12, 13));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:973
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-1, 13), hashlittle(p, sizeof(q)-2, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:976
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-3, 13), hashlittle(p, sizeof(q)-4, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:977
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-5, 13), hashlittle(p, sizeof(q)-6, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:978
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-7, 13), hashlittle(p, sizeof(q)-8, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:979
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-9, 13), hashlittle(p, sizeof(q)-10, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:980
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-11, 13), hashlittle(p, sizeof(q)-12, 13));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:981
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-1, 13), hashlittle(p, sizeof(q)-2, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:984
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-3, 13), hashlittle(p, sizeof(q)-4, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:985
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-5, 13), hashlittle(p, sizeof(q)-6, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:986
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-7, 13), hashlittle(p, sizeof(q)-8, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:987
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-9, 13), hashlittle(p, sizeof(q)-10, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:988
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-11, 13), hashlittle(p, sizeof(q)-12, 13));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:989
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-1, 13), hashlittle(p, sizeof(q)-2, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:992
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-3, 13), hashlittle(p, sizeof(q)-4, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:993
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-5, 13), hashlittle(p, sizeof(q)-6, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:994
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-7, 13), hashlittle(p, sizeof(q)-8, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:995
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-9, 13), hashlittle(p, sizeof(q)-10, 13),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:996
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"         hashlittle(p, sizeof(q)-11, 13), hashlittle(p, sizeof(q)-12, 13));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/storage/lookup3.c:997
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	if(nmlen+saltlen > sizeof(p) || hlen+saltlen > sizeof(p))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/services/authzone.c:2867
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+sizeof(uint32_t), (uint32_t)q->querynum);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libunbound/context.c:244
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+2*sizeof(uint32_t), (uint32_t)q->res->qtype);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libunbound/context.c:245
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+3*sizeof(uint32_t), (uint32_t)q->res->qclass);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libunbound/context.c:246
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+sizeof(uint32_t), (uint32_t)q->querynum);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libunbound/context.c:325
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+2*sizeof(uint32_t), (uint32_t)err);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libunbound/context.c:326
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+3*sizeof(uint32_t), (uint32_t)q->msg_security);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libunbound/context.c:327
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+4*sizeof(uint32_t), (uint32_t)q->res->was_ratelimited);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libunbound/context.c:328
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+5*sizeof(uint32_t), (uint32_t)wlen);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libunbound/context.c:329
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_write_uint32(p+sizeof(uint32_t), (uint32_t)q->querynum);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libunbound/context.c:391
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"			memmove(buf+i*sizeof(v), &v, sizeof(v));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/smallapp/unbound-control.c:1032
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	ve->nsec3_keysize = (size_t*)calloc(sizeof(size_t), (size_t)c);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/validator/validator.c:94
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	ve->nsec3_maxiter = (size_t*)calloc(sizeof(size_t), (size_t)c);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/validator/validator.c:95
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"        while ( (r=read_multiline(line, sizeof(line), fd, &line_nr)) != 0) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/validator/autotrust.c:1006
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"			for (ii = 0; ii < sizeof(cl)/sizeof(cl[0]); ii++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/compat/getentropy_solaris.c:289
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"			for (ii = 0; ii < sizeof(cl)/sizeof(cl[0]); ii++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/compat/getentropy_linux.c:370
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	sldns_buffer_read_at(buf, lim-sizeof(expiry), &expiry, sizeof(expiry));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cachedb/cachedb.c:503
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	wsvc_err2str(e, sizeof(e), str, (int)GetLastError());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/winrc/w_inst.c:65
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	wsvc_err2str(e, sizeof(e), str, GetLastError());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/winrc/win_svc.c:135
01a21ac525d2dbb8917c85fcfddaaf3391e62c70664680b14a2e7d124c4342f5a4bbe6ccee8df3107635bbc138f0c4aace1372dd95a3d21568457a1e0e18f74e,"	(sizeof(rdata_field_descriptors)/sizeof(rdata_field_descriptors[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/sldns/rrdef.c:637
ca9541df1e06a960728ddafb79edc23f33d5cb8375676531b73e26bee2c8cbd3c555c868a1f21f1a73254576b72efcd3e7d8997a57c839ffea40827d84f753c0,"    i4_sys_res = syscall(__NR_sched_setaffinity, pid, sizeof(i4_mask), &i4_mask);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/common/ithread.c:178
ca9541df1e06a960728ddafb79edc23f33d5cb8375676531b73e26bee2c8cbd3c555c868a1f21f1a73254576b72efcd3e7d8997a57c839ffea40827d84f753c0,"#define NELEMENTS(x) (sizeof(x) / sizeof(x[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/fuzzer/mpeg2_dec_fuzzer.cpp:37
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"                ""multiplySizeof"", ""Multiplying sizeof() with sizeof() indicates a logic error."", CWE682, Certainty::inconclusive);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/checksizeof.cpp:415
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"            ASSERT_EQUALS(true, settings.library.loadxmldata(argDirectionsTestXmlData, sizeof(argDirectionsTestXmlData) / sizeof(argDirectionsTestXmlData[0])));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testuninitvar.cpp:3812
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2] -> [test.cpp:3]: (style) The comparison 'i != sizeof(int)' is always false because 'i' and 'sizeof(int)' represent the same value.\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testother.cpp:5503
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2] -> [test.cpp:3]: (style) The comparison 'sizeof(int) != i' is always false because 'sizeof(int)' and 'i' represent the same value.\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testother.cpp:5509
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        TODO_ASSERT_EQUALS(""[test.cpp:6]: (warning) Possible buffer overflow if strlen(src) is larger than sizeof(data)-strlen(data).\n"", """", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testbufferoverrun.cpp:3253
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        TODO_ASSERT_EQUALS(""[test.cpp:3]: (warning) Possible buffer overflow if strlen(src) is larger than sizeof(data)-strlen(data).\n"", """", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testbufferoverrun.cpp:3268
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found calculation inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:119
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found calculation inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:122
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found calculation inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:125
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found calculation inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:140
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found calculation inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:143
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"                      ""[test.cpp:5]: (warning, inconclusive) Found calculation inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:167
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2]: (warning, inconclusive) Found calculation inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:171
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:5]: (warning) Found function call inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:180
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:5]: (warning) Found function call inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:195
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found function call inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:201
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found function call inside sizeof().\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:207
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:3]: (warning, inconclusive) Division of result of sizeof() on pointer type.\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:385
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2]: (warning, inconclusive) Multiplying sizeof() with sizeof() indicates a logic error.\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:414
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2]: (warning, inconclusive) Division of result of sizeof() on pointer type.\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:446
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2]: (warning) Division by result of sizeof(). malloc() expects a size in bytes, did you intend to multiply instead?\n"", errout.str());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsizeof.cpp:781
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""char"", typeOf(""sizeof(char);"", ""char""));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/testsymboldatabase.cpp:7523
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        return std::vector<float>(detector, detector + sizeof(detector)/sizeof(detector[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/bug-hunting/cve/CVE-2019-15939/hog.cpp:2755
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        return std::vector<float>(detector, detector + sizeof(detector)/sizeof(detector[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/bug-hunting/cve/CVE-2019-15939/hog.cpp:3259
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"			      (int)sizeof(inBuf) - inBufLen);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/bug-hunting/cve/CVE-2019-10025/Stream.cc:5827
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"			      (int)sizeof(inBuf) - inBufLen);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/bug-hunting/cve/CVE-2019-10021/Stream.cc:5827
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"            sqlite3_snprintf(sizeof(zLeft),zLeft,""left=%d"", pTerm->leftCursor);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/bug-hunting/cve/CVE-2019-16168/where.c:1761
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        std::memcpy(&(out[1+sizeof(len)]), data.c_str(), len);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/cli/threadexecutor.cpp:121
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"    GetModuleFileNameA(nullptr, exename, sizeof(exename)/sizeof(exename[0])-1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/cli/main.cpp:101
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        for (int i = 0; i < sizeof(qualifiers)/sizeof(qualifiers[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/tokenize.cpp:7598
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"            for (int i = 0; i < (sizeof(functionName) / sizeof(*functionName)); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/tokenize.cpp:8578
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"            for (int i = 0; i < (sizeof(functionName) / sizeof(*functionName)); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/tokenize.cpp:8602
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"  <define name=""WXSIZEOF(array)"" value=""(sizeof(array)/sizeof(array[0]))""/>
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cfg/wxwidgets.cfg:35
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"  <define name=""SDL_arraysize(array)"" value=""(sizeof(array)/sizeof(array[0]))""/>
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cfg/sdl.cfg:15
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"  <define name=""PyMem_Resize(p, type, n)"" value=""( (p) = ((size_t)(n) &gt; PY_SSIZE_T_MAX / sizeof(type)) ? NULL : (type *) PyMem_Realloc((p), (n) * sizeof(type)) )""/>
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cfg/python.cfg:39
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"  <define name=""PyMem_RESIZE(p, type, n)"" value=""( (p) = ((size_t)(n) &gt; PY_SSIZE_T_MAX / sizeof(type)) ? NULL : (type *) PyMem_REALLOC((p), (n) * sizeof(type)) )""/>
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cfg/python.cfg:40
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"  <define name=""_countof(_Array)"" value=""(sizeof(_Array) / sizeof(_Array[0]))""/>
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cfg/windows.cfg:6971
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"  <define name=""PR_ARRAY_SIZE(a)"" value=""(sizeof(a)/sizeof((a)[0]))""/>
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cfg/nspr.cfg:23
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"            ASSERT_EQUALS(true, settings.library.loadxmldata(argDirectionsTestXmlData, sizeof(argDirectionsTestXmlData) / sizeof(argDirectionsTestXmlData[0])));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testuninitvar.cpp:3812
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""    if (sizeof(a) == sizeof(a)) { }\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testother.cpp:5305
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2] -> [test.cpp:3]: (style) The comparison 'i != sizeof(int)' is always false because 'i' and 'sizeof(int)' represent the same value.\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testother.cpp:5503
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2] -> [test.cpp:3]: (style) The comparison 'sizeof(int) != i' is always false because 'sizeof(int)' and 'i' represent the same value.\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testother.cpp:5509
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""    if (sizeof(long) == sizeof(long long)) {}\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testother.cpp:5761
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        const char code[] = ""template<class T> requires (sizeof(T) > 1 && get_value<T>()) void f(T v){}\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsimplifytemplate.cpp:6268
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""    if (i >= 0 && i < sizeof(b) / sizeof(*(b)))\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testbufferoverrun.cpp:1792
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""    if (i >= 0 && i < sizeof(b) / sizeof((b)[0]))\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testbufferoverrun.cpp:1794
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        TODO_ASSERT_EQUALS(""[test.cpp:6]: (warning) Possible buffer overflow if strlen(src) is larger than sizeof(data)-strlen(data).\n"", """", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testbufferoverrun.cpp:3253
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        TODO_ASSERT_EQUALS(""[test.cpp:3]: (warning) Possible buffer overflow if strlen(src) is larger than sizeof(data)-strlen(data).\n"", """", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testbufferoverrun.cpp:3268
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""    pData = (char*) realloc(pData, sizeof(char) + (nLen + 1)*sizeof(char));\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testmemleak.cpp:246
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found calculation inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:119
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found calculation inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:122
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found calculation inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:125
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found calculation inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:140
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found calculation inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:143
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"                      ""[test.cpp:5]: (warning, inconclusive) Found calculation inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:167
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2]: (warning, inconclusive) Found calculation inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:171
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:5]: (warning) Found function call inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:180
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:5]: (warning) Found function call inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:195
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found function call inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:201
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:1]: (warning) Found function call inside sizeof().\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:207
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:3]: (warning, inconclusive) Division of result of sizeof() on pointer type.\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:385
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2]: (warning, inconclusive) Multiplying sizeof() with sizeof() indicates a logic error.\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:414
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""    for (int i = 0; i < (int)(sizeof(a) / sizeof(char*)); i++) {}\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:439
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2]: (warning, inconclusive) Division of result of sizeof() on pointer type.\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:446
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""    for (size_t i = 0; i < sizeof(t->s) / sizeof(t->s[0]); i++) {}\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:455
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""[test.cpp:2]: (warning) Division by result of sizeof(). malloc() expects a size in bytes, did you intend to multiply instead?\n"", errout.str());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:781
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""  strncpy(str, xyz, sizeof(str)/sizeof(str[0]));\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:785
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""    memcpy(b, a, ((sizeof(a) / sizeof(a[0])) - 1) * sizeof(a[0]));\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:792
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""    memcpy(b, a, sizeof(a[0]) * ((sizeof(a) / sizeof(a[0])) - 1));\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsizeof.cpp:793
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        ASSERT_EQUALS(""char"", typeOf(""sizeof(char);"", ""char""));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsymboldatabase.cpp:7523
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"                      ""  *Tokens = (CXToken *)malloc(sizeof(CXToken) * CXTokens.size());\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testclass.cpp:3367
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"                      ""  memmove(*Tokens, CXTokens.data(), sizeof(CXToken) * CXTokens.size());\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testclass.cpp:3368
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"              ""    std::vector<int> v(i, i + sizeof(i) / sizeof(int));\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/teststl.cpp:783
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        const char code[] = ""foo(sizeof(uint32_t), sizeof(std::uint32_t));"";
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/testsimplifytokens.cpp:2990
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"    if (posix_memalign(&ptr, sizeof(void *), sizeof(void *)) == 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/cfg/posix.c:721
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        return std::vector<float>(detector, detector + sizeof(detector)/sizeof(detector[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/bug-hunting/cve/CVE-2019-15939/hog.cpp:2755
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        return std::vector<float>(detector, detector + sizeof(detector)/sizeof(detector[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/bug-hunting/cve/CVE-2019-15939/hog.cpp:3259
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"    if (device->peek(head, sizeof(head)) != sizeof(head))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/bug-hunting/cve/CVE-2018-19872/qppmhandler.cpp:477
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"    GetModuleFileNameA(nullptr, exename, sizeof(exename)/sizeof(exename[0])-1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cli/main.cpp:101
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"        const char *u = unop[getValue(data,dataSize,sizeof(unop)/sizeof(*unop))];
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/oss-fuzz/type2.cpp:94
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"    while (fgets(line,sizeof(line),f) && n < (sizeof(lines)/sizeof(*lines))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tools/times.c:25
9481e5e3dc77e1e07770a7999295399d5e75d7d664a12ddb70de29b9798a3f2cab3ea60788fb17942af329d7a92d69f352023ba25c8578ea0c785ab2495dd588,"            for (unsigned int i = 0; i < (sizeof(conditions) / sizeof(conditions[0])); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/gui/test/data/benchmark/simple.cpp:650
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		wb = zip->wbuff + (sizeof(zip->wbuff) - zip->wbuff_remaining);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_write_set_format_7zip.c:687
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_perm_map)/sizeof(acl_nfs4_perm_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_darwin.c:80
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_flag_map)/sizeof(acl_nfs4_flag_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_darwin.c:91
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	_snprintf(oemcp, sizeof(oemcp)-1, ""CP%d"", a->current_oemcp);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_string.c:1767
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	_snprintf(oemcp, sizeof(oemcp)-1, ""CP%d"", a->current_oemcp);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_string.c:1788
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_posix_perm_map)/sizeof(acl_posix_perm_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_freebsd.c:63
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_perm_map)/sizeof(acl_nfs4_perm_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_freebsd.c:87
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_flag_map)/sizeof(acl_nfs4_flag_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_freebsd.c:102
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_posix_perm_map)/sizeof(acl_posix_perm_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_sunos.c:61
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_perm_map)/sizeof(acl_nfs4_perm_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_sunos.c:85
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_flag_map)/sizeof(acl_nfs4_flag_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_sunos.c:100
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_posix_perm_map)/sizeof(acl_posix_perm_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_linux.c:66
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_perm_map)/sizeof(acl_nfs4_perm_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_linux.c:91
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_flag_map)/sizeof(acl_nfs4_flag_map[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_disk_acl_linux.c:102
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    store32( buffer + sizeof( S->h[i] ) * i, S->h[i] );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_blake2s_ref.c:260
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		    (sizeof(iso9660->wbuff) - (off - iso9660->wbuff_offset));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_write_set_format_iso9660.c:3704
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	num %= sizeof(xdig) * sizeof(xdig) * sizeof(xdig);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_write_set_format_iso9660.c:5939
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		wb = xar->wbuff + (sizeof(xar->wbuff) - xar->wbuff_remaining);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_write_set_format_xar.c:1819
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		wb = xar->wbuff + (sizeof(xar->wbuff) - xar->wbuff_remaining);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/archive_write_set_format_xar.c:1894
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualInt(sizeof(data), archive_write_data(ad, data, sizeof(data)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_disk_hardlink.c:134
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualInt(sizeof(data), archive_write_data(ad, data, sizeof(data)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_disk.c:93
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualInt(sizeof(data), archive_write_data(ad, data, sizeof(data)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_disk.c:209
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualInt(sizeof(buff), archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_7zip.c:184
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:574
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:724
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:851
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:927
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1166
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1336
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1341
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1346
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1351
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1356
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1389
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1397
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1402
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1408
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1413
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1482
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1487
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1492
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1498
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1503
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1532
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1537
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1542
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1547
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1552
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_format_rar.c:1557
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:324
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	compare_acls(aclp, aclcnt, acls2, sizeof(acls2)/sizeof(acls2[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:345
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	compare_acls(acl, acls2, sizeof(acls2)/sizeof(acls2[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:349
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	n = facl(fd, SETACL, (int)(sizeof(aclp1)/sizeof(aclp1[0])), aclp1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:430
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	n = facl(fd, SETACL, (int)(sizeof(aclp2) / sizeof(aclp2[0])), aclp2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:505
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	n = acl(""d/d2"", SETACL, (int)(sizeof(aclp3) / sizeof(aclp3[0])), aclp3);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:561
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	memcpy(buff + buff_size - sizeof(data), data, sizeof(data));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_disk_sparse.c:73
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualMem(buff + buff_size - sizeof(data), data, sizeof(data));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_disk_sparse.c:119
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	memcpy(buff + buff_size - sizeof(data), data, sizeof(data));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_disk_sparse.c:173
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualMem(buff + buff_size - sizeof(data), data, sizeof(data));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_disk_sparse.c:247
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualIntA(a, sizeof(buff2), archive_write_data(a, buff2, sizeof(buff2)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_truncated.c:54
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"			assertEqualIntA(a, sizeof(buff2), archive_read_data(a, buff2, sizeof(buff2)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_truncated.c:78
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertA((int)sizeof(testdata) == archive_write_data(a, testdata, sizeof(testdata)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_large.c:58
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls0, sizeof(acls0)/sizeof(acls0[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_posix1e.c:119
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls1, sizeof(acls1)/sizeof(acls1[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_posix1e.c:127
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_posix1e.c:145
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls0, sizeof(acls0)/sizeof(acls0[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_posix1e.c:157
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_posix1e.c:168
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualIntA(a, sizeof(file_data1), archive_write_data(a, file_data1, sizeof(file_data1)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_format_zip_entry_size_unset.c:93
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualIntA(a, sizeof(file_data2), archive_write_data(a, file_data2, sizeof(file_data2)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_format_zip_entry_size_unset.c:94
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualIntA(a, sizeof(file_data1), archive_write_data(a, file_data1, sizeof(file_data1)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_format_zip_compression_store.c:93
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualIntA(a, sizeof(file_data2), archive_write_data(a, file_data2, sizeof(file_data2)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_write_format_zip_compression_store.c:94
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls1, sizeof(acls1)/sizeof(acls1[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_nfs4.c:162
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_nfs4.c:176
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls1, sizeof(acls1)/sizeof(acls1[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_nfs4.c:186
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_nfs4.c:195
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_archive_read_multiple_data_objects.c:158
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"static const int acls_reg_cnt = (int)(sizeof(acls_reg)/sizeof(acls_reg[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_platform_nfs4.c:136
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"static const int acls_dir_cnt = (int)(sizeof(acls_dir)/sizeof(acls_dir[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_platform_nfs4.c:256
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls0, sizeof(acls0)/sizeof(acls0[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_pax.c:241
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls1, sizeof(acls1)/sizeof(acls1[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_pax.c:245
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_pax.c:249
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls0, sizeof(acls0)/sizeof(acls0[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_pax.c:256
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls3, sizeof(acls3)/sizeof(acls3[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_pax.c:352
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls4, sizeof(acls4)/sizeof(acls4[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_pax.c:356
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls5, sizeof(acls5)/sizeof(acls5[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_pax.c:360
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls0, sizeof(acls0)/sizeof(acls0[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_text.c:419
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls1, sizeof(acls1)/sizeof(acls1[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_acl_text.c:460
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertA((int)sizeof(buff2) == archive_write_data(a, buff2, sizeof(buff2)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_data_large.c:70
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualInt(sizeof(buff3), fread(buff3, 1, sizeof(buff3), f));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libarchive/test/test_read_data_large.c:108
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	    (int)(sizeof(aclp_nfs4)/sizeof(aclp_nfs4[0])), aclp_nfs4);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test_utils/test_main.c:3004
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	    (int)(sizeof(aclp_posix1e)/sizeof(aclp_posix1e[0])), aclp_posix1e);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test_utils/test_main.c:3024
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	strncat(result, ""2 blocks\n"", sizeof(result) - strlen(result) -1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/cpio/test/test_basic.c:220
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		strncat(result, ""2 blocks\n"", sizeof(result) - strlen(result) -1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/cpio/test/test_format_newc.c:177
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		strncat(result, ""1 block\n"", sizeof(result) - strlen(result) -1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/cpio/test/test_format_newc.c:179
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	_snprintf(date, sizeof(date)-1, ""%12.12s file"", date2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/cpio/test/test_option_t.c:92
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	snprintf(date, sizeof(date)-1, ""%12.12s file"", date2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/cpio/test/test_option_t.c:95
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"			strncat(buff, ""/"", sizeof(buff) - strlen(buff) -1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tar/test/test_print_longpath.c:44
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		strncat(buff, ""\n"", sizeof(buff) - strlen(buff) -1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tar/test/test_print_longpath.c:46
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	perm_end = (int)(sizeof(acl_perms) / sizeof(acl_perms[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tar/test/test_option_acls.c:189
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		for (i = 0; i < (int)(sizeof(acl_flags) / sizeof(acl_flags[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tar/test/test_option_acls.c:222
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_perm_map)/sizeof(acl_nfs4_perm_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_darwin.c:80
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_flag_map)/sizeof(acl_nfs4_flag_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_darwin.c:91
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	if (!GetVolumePathNameW(path, vol, sizeof(vol)/sizeof(vol[0]))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_read_disk_windows.c:1509
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(lengthbases)/sizeof(lengthbases[0])),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_read_support_format_rar.c:2843
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(lengthbits)/sizeof(lengthbits[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_read_support_format_rar.c:2844
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(offsetbases)/sizeof(offsetbases[0])),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_read_support_format_rar.c:2864
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(offsetbits)/sizeof(offsetbits[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_read_support_format_rar.c:2865
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_posix_perm_map)/sizeof(acl_posix_perm_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_freebsd.c:63
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_perm_map)/sizeof(acl_nfs4_perm_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_freebsd.c:87
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_flag_map)/sizeof(acl_nfs4_flag_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_freebsd.c:102
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"			*p = num[((DWORD)*p) % (sizeof(num)/sizeof(num[0]))];
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_util.c:335
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (i = 0; i < sizeof(a->formats)/sizeof(a->formats[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_read_set_options.c:82
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_posix_perm_map)/sizeof(acl_posix_perm_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_sunos.c:61
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_perm_map)/sizeof(acl_nfs4_perm_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_sunos.c:85
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_flag_map)/sizeof(acl_nfs4_flag_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_sunos.c:100
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	if (debug_index >= sizeof(debug_buff)/sizeof(debug_buff[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_read_support_filter_compress.c:337
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"#define rar5_countof(X) ((const ssize_t) (sizeof(X) / sizeof(*X)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_read_support_format_rar5.c:62
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_posix_perm_map)/sizeof(acl_posix_perm_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_linux.c:66
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_perm_map)/sizeof(acl_nfs4_perm_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_linux.c:91
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    (int)(sizeof(acl_nfs4_flag_map)/sizeof(acl_nfs4_flag_map[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_disk_acl_linux.c:102
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		    (sizeof(iso9660->wbuff) - (off - iso9660->wbuff_offset));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_write_set_format_iso9660.c:3704
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	p[0] = xdig[(num / (sizeof(xdig) * sizeof(xdig)))];
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_write_set_format_iso9660.c:5940
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"#define XDIG_CNT	(sizeof(xdig)/sizeof(xdig[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_write_set_format_iso9660.c:5959
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (i = 0; i < (int)(sizeof(doserrors)/sizeof(doserrors[0])); i++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_windows.c:895
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"#define FLAGENTRY_MAXSIZE ((sizeof(flagbsd)+sizeof(flagext2))/sizeof(flagbsd))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/archive_write_set_format_xar.c:1093
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualInt(sizeof(data), archive_write_data(ad, data, sizeof(data)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_disk_hardlink.c:134
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualInt(sizeof(data), archive_write_data(ad, data, sizeof(data)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_disk.c:93
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualInt(sizeof(data), archive_write_data(ad, data, sizeof(data)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_disk.c:209
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualInt(sizeof(buff), archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_7zip.c:184
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:574
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:724
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:851
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:927
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1166
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1336
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1341
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1346
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1351
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1356
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1389
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1397
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1402
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1408
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1413
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1482
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1487
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1492
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1498
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1503
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1532
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1537
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1542
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1547
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1552
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"  assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_rar.c:1557
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:324
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	compare_acls(aclp, aclcnt, acls2, sizeof(acls2)/sizeof(acls2[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:345
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	compare_acls(acl, acls2, sizeof(acls2)/sizeof(acls2[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:349
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	n = facl(fd, SETACL, (int)(sizeof(aclp1)/sizeof(aclp1[0])), aclp1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:430
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	n = facl(fd, SETACL, (int)(sizeof(aclp2) / sizeof(aclp2[0])), aclp2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:505
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	n = acl(""d/d2"", SETACL, (int)(sizeof(aclp3) / sizeof(aclp3[0])), aclp3);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_platform_posix1e.c:561
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	memcpy(buff + buff_size - sizeof(data), data, sizeof(data));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_disk_sparse.c:73
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualMem(buff + buff_size - sizeof(data), data, sizeof(data));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_disk_sparse.c:119
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	memcpy(buff + buff_size - sizeof(data), data, sizeof(data));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_disk_sparse.c:173
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualMem(buff + buff_size - sizeof(data), data, sizeof(data));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_disk_sparse.c:247
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualIntA(a, sizeof(buff2), archive_write_data(a, buff2, sizeof(buff2)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_truncated.c:54
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"			assertEqualIntA(a, sizeof(buff2), archive_read_data(a, buff2, sizeof(buff2)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_truncated.c:78
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"			while (i < sizeof(zero_groups)/sizeof(zero_groups[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_disk.c:134
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"			if (i == sizeof(zero_groups)/sizeof(zero_groups[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_disk.c:139
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertA((int)sizeof(testdata) == archive_write_data(a, testdata, sizeof(testdata)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_large.c:58
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls0, sizeof(acls0)/sizeof(acls0[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_posix1e.c:119
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls1, sizeof(acls1)/sizeof(acls1[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_posix1e.c:127
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_posix1e.c:145
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls0, sizeof(acls0)/sizeof(acls0[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_posix1e.c:157
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_posix1e.c:168
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (i = 0; i < (int)(sizeof(acls_nfs4)/sizeof(acls_nfs4[0])); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_posix1e.c:169
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualIntA(a, sizeof(file_data1), archive_write_data(a, file_data1, sizeof(file_data1)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_format_zip_entry_size_unset.c:93
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualIntA(a, sizeof(file_data2), archive_write_data(a, file_data2, sizeof(file_data2)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_format_zip_entry_size_unset.c:94
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualIntA(a, sizeof(file_data1), archive_write_data(a, file_data1, sizeof(file_data1)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_format_zip_compression_store.c:93
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualIntA(a, sizeof(file_data2), archive_write_data(a, file_data2, sizeof(file_data2)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_write_format_zip_compression_store.c:94
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls1, sizeof(acls1)/sizeof(acls1[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_nfs4.c:162
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_nfs4.c:176
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls1, sizeof(acls1)/sizeof(acls1[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_nfs4.c:186
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_nfs4.c:195
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (i = 0; i < (int)(sizeof(acls_bad)/sizeof(acls_bad[0])); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_nfs4.c:196
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (j = 0; j < sizeof(data_sizes)/sizeof(data_sizes[0]); ++j) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_position.c:44
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (i = 0; i < sizeof(data_sizes)/sizeof(data_sizes[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_position.c:84
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"    assertA(sizeof(buff) == archive_read_data(a, buff, sizeof(buff)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_archive_read_multiple_data_objects.c:158
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"static const int acls_reg_cnt = (int)(sizeof(acls_reg)/sizeof(acls_reg[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_platform_nfs4.c:136
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"static const int acls_dir_cnt = (int)(sizeof(acls_dir)/sizeof(acls_dir[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_platform_nfs4.c:256
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (i = 0; i < (int)(sizeof(perms)/sizeof(perms[0])); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_platform_nfs4.c:368
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (i = 0; i < (int)(sizeof(perms)/sizeof(perms[0])); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_platform_nfs4.c:424
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls0, sizeof(acls0)/sizeof(acls0[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_pax.c:241
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls1, sizeof(acls1)/sizeof(acls1[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_pax.c:245
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls2, sizeof(acls2)/sizeof(acls2[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_pax.c:249
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls0, sizeof(acls0)/sizeof(acls0[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_pax.c:256
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls3, sizeof(acls3)/sizeof(acls3[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_pax.c:352
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls4, sizeof(acls4)/sizeof(acls4[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_pax.c:356
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls5, sizeof(acls5)/sizeof(acls5[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_pax.c:360
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		for (s = 0; s + sizeof(buff) < 33000; s+= sizeof(buff)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_format_cab.c:217
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls0, sizeof(acls0)/sizeof(acls0[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_text.c:419
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEntrySetAcls(ae, acls1, sizeof(acls1)/sizeof(acls1[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_acl_text.c:460
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertA((int)sizeof(buff2) == archive_write_data(a, buff2, sizeof(buff2)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_data_large.c:70
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	assertEqualInt(sizeof(buff3), fread(buff3, 1, sizeof(buff3), f));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libarchive/test/test_read_data_large.c:108
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (i = 0; i < (int)(sizeof(acl_perms) / sizeof(acl_perms[0])); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test_utils/test_main.c:2975
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	    (int)(sizeof(aclp_nfs4)/sizeof(aclp_nfs4[0])), aclp_nfs4);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test_utils/test_main.c:3004
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	    (int)(sizeof(aclp_posix1e)/sizeof(aclp_posix1e[0])), aclp_posix1e);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test_utils/test_main.c:3024
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (i = 0; i < sizeof(failed_lines)/sizeof(failed_lines[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test_utils/test_main.c:3504
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	strncat(result, ""2 blocks\n"", sizeof(result) - strlen(result) -1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cpio/test/test_basic.c:220
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		strncat(result, ""2 blocks\n"", sizeof(result) - strlen(result) -1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cpio/test/test_format_newc.c:177
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		strncat(result, ""1 block\n"", sizeof(result) - strlen(result) -1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/cpio/test/test_format_newc.c:179
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"			strncat(buff, ""/"", sizeof(buff) - strlen(buff) -1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tar/test/test_print_longpath.c:44
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		strncat(buff, ""\n"", sizeof(buff) - strlen(buff) -1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tar/test/test_print_longpath.c:46
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	for (i = 3; i < sizeof(filenames)/sizeof(filenames[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tar/test/test_copy.c:115
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"	perm_end = (int)(sizeof(acl_perms) / sizeof(acl_perms[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tar/test/test_option_acls.c:189
8e9c2baef4bb775528107c623e8cab15e726fa6e3709a8bb29e6a0a6c4f7c2d49962f6a3bf94fe8bafe273ed659df93f5380f9388b20f462e94a704337cfd6fa,"		for (i = 0; i < (int)(sizeof(acl_flags) / sizeof(acl_flags[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tar/test/test_option_acls.c:222
cd2cd8d1068f1f789bad243e6ce8c405dc82ff96def10f2342eb88aa027f51d9697827c70d1e5495a3cb404b4c5ad6c12769d28c99fb23edd42a01b5121d14bc,"    if( fwrite( buf, 1, sizeof( buf ), f ) != sizeof( buf ) )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/library/hmac_drbg.c:442
cd2cd8d1068f1f789bad243e6ce8c405dc82ff96def10f2342eb88aa027f51d9697827c70d1e5495a3cb404b4c5ad6c12769d28c99fb23edd42a01b5121d14bc,"#define ARRAY_LENGTH( array ) ( sizeof( array ) / sizeof( *( array ) ) )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/library/psa_crypto_slot_management.c:44
cd2cd8d1068f1f789bad243e6ce8c405dc82ff96def10f2342eb88aa027f51d9697827c70d1e5495a3cb404b4c5ad6c12769d28c99fb23edd42a01b5121d14bc,"#define ARRAY_LENGTH( array ) ( sizeof( array ) / sizeof( *( array ) ) )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/library/psa_crypto.c:89
cd2cd8d1068f1f789bad243e6ce8c405dc82ff96def10f2342eb88aa027f51d9697827c70d1e5495a3cb404b4c5ad6c12769d28c99fb23edd42a01b5121d14bc,"#define ARRAY_LENGTH( a )   ( sizeof( a ) / sizeof( ( a )[0] ) )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/library/sha512.c:961
cd2cd8d1068f1f789bad243e6ce8c405dc82ff96def10f2342eb88aa027f51d9697827c70d1e5495a3cb404b4c5ad6c12769d28c99fb23edd42a01b5121d14bc,"    ( sizeof( array ) / sizeof( *( array ) ) )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/include/test/macros.h:196
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"  for (unsigned TI = 0, TE = sizeof(ARMAttributeTags) / sizeof(*ARMAttributeTags);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/llvm/lib/Support/ARMBuildAttrs.cpp:79
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"  for (unsigned TI = 0, TE = sizeof(ARMAttributeTags) / sizeof(*ARMAttributeTags);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/llvm/lib/Support/ARMBuildAttrs.cpp:88
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"    return static_cast<T *>(Allocate(Num * sizeof(T), AlignOf<T>::Alignment));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/llvm/include/llvm/Support/Allocator.h:77
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"    this->grow_pod(MinSize*sizeof(T), sizeof(T));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/llvm/include/llvm/ADT/SmallVector.h:334
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"  qsort(&*Start, NElts, sizeof(*Start), get_array_pod_sort_comparator(*Start));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/llvm/include/llvm/ADT/STLExtras.h:327
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"#define ARR_SIZE(a) (sizeof(a)/sizeof(a[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/llvm/keystone/EVMMapping.cpp:9
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"#define ARR_SIZE(a) (sizeof(a)/sizeof(a[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/llvm/keystone/ks_priv.h:33
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"    return static_cast<T *>(Allocate(Num * sizeof(T), AlignOf<T>::Alignment));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/llvm/include/llvm/Support/Allocator.h:77
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"      for (char *Ptr = Begin; Ptr + sizeof(T) <= End; Ptr += sizeof(T))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/llvm/include/llvm/Support/Allocator.h:383
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"    this->grow_pod(MinSize*sizeof(T), sizeof(T));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/llvm/include/llvm/ADT/SmallVector.h:334
7d0adac55d2f7c055ec78f261ab65146a7d915ee712e4299d8f08dcf92a148bffe459a388649bc3bc6634ced3c3e727f846010793899b0e61775f4f03cae19eb,"  qsort(&*Start, NElts, sizeof(*Start), get_array_pod_sort_comparator(*Start));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/llvm/include/llvm/ADT/STLExtras.h:327
bcff667f8c0adb493fde0f6412a32f996baf8628c038ddcc3e87ca11ae59791eb6b9b79d273ab6eac74f0f2ac1983c435d333d6fbb7f28ee9ed808751b598a54,"		printf(""WEIRD: sizeof(STREAM_TYPE) = %lu\n"",sizeof(STREAM_TYPE));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/wasi/stream/stream.c:479
bcff667f8c0adb493fde0f6412a32f996baf8628c038ddcc3e87ca11ae59791eb6b9b79d273ab6eac74f0f2ac1983c435d333d6fbb7f28ee9ed808751b598a54,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/platforms/embedded/fomu/include/xxhash.c:382
bcff667f8c0adb493fde0f6412a32f996baf8628c038ddcc3e87ca11ae59791eb6b9b79d273ab6eac74f0f2ac1983c435d333d6fbb7f28ee9ed808751b598a54,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/platforms/embedded/fomu/include/xxhash.c:763
bcff667f8c0adb493fde0f6412a32f996baf8628c038ddcc3e87ca11ae59791eb6b9b79d273ab6eac74f0f2ac1983c435d333d6fbb7f28ee9ed808751b598a54,"		printf(""WEIRD: sizeof(STREAM_TYPE) = %lu\n"",sizeof(STREAM_TYPE));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/wasi/stream/stream.c:479
bcff667f8c0adb493fde0f6412a32f996baf8628c038ddcc3e87ca11ae59791eb6b9b79d273ab6eac74f0f2ac1983c435d333d6fbb7f28ee9ed808751b598a54,"#define M3_COUNT_OF(x) ((sizeof(x)/sizeof(0[x])) / ((size_t)(!(sizeof(x) % sizeof(0[x])))))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/source/m3_config_platforms.h:94
bcff667f8c0adb493fde0f6412a32f996baf8628c038ddcc3e87ca11ae59791eb6b9b79d273ab6eac74f0f2ac1983c435d333d6fbb7f28ee9ed808751b598a54,"            ((sizeof(__x) == sizeof(float))  ?  __signbitf(__x) : __signbitd(__x))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/source/m3_math_utils.h:85
bcff667f8c0adb493fde0f6412a32f996baf8628c038ddcc3e87ca11ae59791eb6b9b79d273ab6eac74f0f2ac1983c435d333d6fbb7f28ee9ed808751b598a54,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/platforms/embedded/fomu/include/xxhash.c:382
bcff667f8c0adb493fde0f6412a32f996baf8628c038ddcc3e87ca11ae59791eb6b9b79d273ab6eac74f0f2ac1983c435d333d6fbb7f28ee9ed808751b598a54,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/platforms/embedded/fomu/include/xxhash.c:763
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"UA_STATIC_ASSERT(sizeof(bool) == 1, cannot_overlay_integers_with_large_bool);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/open62541/architecture_definitions.h:349
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static const size_t testDataSize = (sizeof(testData) / sizeof(testData[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/client/historical_read_test_data.h:27
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static const size_t testInsertDataSuccessSize = (sizeof(testInsertDataSuccess) / sizeof(testInsertDataSuccess[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/client/historical_read_test_data.h:34
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static size_t testInsertResultDataSize = (sizeof(testInsertResultData) / sizeof(testInsertResultData[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/client/historical_read_test_data.h:47
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static const size_t testReplaceDataSuccessSize = (sizeof(testReplaceDataSuccess) / sizeof(testReplaceDataSuccess[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/client/historical_read_test_data.h:54
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static const size_t testDeleteRangeDataSize = (sizeof(testDeleteRangeData) / sizeof(testDeleteRangeData[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/client/historical_read_test_data.h:87
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static const size_t receivedDataSize = (sizeof(testData) / sizeof(testData[0])) + 10;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/client/check_client_historical_data.c:50
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static struct ReceiveTupel receivedTestData[(sizeof(testData) / sizeof(testData[0])) + 10];
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/client/check_client_historical_data.c:51
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static const size_t testDataSize = (sizeof(testData) / sizeof(testData[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/client/historical_read_test_data.h:27
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static const size_t testInsertDataSuccessSize = (sizeof(testInsertDataSuccess) / sizeof(testInsertDataSuccess[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/client/historical_read_test_data.h:34
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static size_t testInsertResultDataSize = (sizeof(testInsertResultData) / sizeof(testInsertResultData[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/client/historical_read_test_data.h:47
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static const size_t testReplaceDataSuccessSize = (sizeof(testReplaceDataSuccess) / sizeof(testReplaceDataSuccess[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/client/historical_read_test_data.h:54
472da840403cb5a6d1ba11a9c6ee134e694199f3621914b1228043bc4766b78270bc8b0430b655901f80a157b97db5b1c66971cce44cfb1af4b2bb6935f2c7fa,"static const size_t testDeleteRangeDataSize = (sizeof(testDeleteRangeData) / sizeof(testDeleteRangeData[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/client/historical_read_test_data.h:87
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	    sizeof(struct rpcap_startcapreq) + sizeof(struct rpcap_filter) + fp->fcode.bf_len * sizeof(struct rpcap_filterbpf_insn));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/pcap-rpcap.c:1224
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"				sock_getascii_addrport((struct sockaddr_storage *) tempaddrinfo->ai_addr, TmpBuffer, sizeof(TmpBuffer), NULL, 0, NI_NUMERICHOST, TmpBuffer, sizeof(TmpBuffer));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/sockutils.c:458
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	n = (n + sizeof(long) - 1) & ~(sizeof(long) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/gencode.c:604
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"    dosmemget (rp, sizeof(str), &str);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/msdos/pktdrvr.c:374
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"  dosmemget (DOS_ADDR(reg.x.ds,reg.x.si), sizeof(pktStat), &pktStat);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/msdos/pktdrvr.c:589
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"  dosmemget (DOS_ADDR(reg.x.ds,reg.x.si), sizeof(pktInfo.name), &pktInfo.name);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/msdos/pktdrvr.c:736
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	    sizeof(struct rpcap_startcapreq) + sizeof(struct rpcap_filter) + fp->fcode.bf_len * sizeof(struct rpcap_filterbpf_insn));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/pcap-rpcap.c:1224
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	    strioctl(p->fd, SBIOCSSNAP, sizeof(ss), (char *)&ss) != 0) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/dlpisubs.c:334
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"		if (strioctl(p->fd, SBIOCSTIME, sizeof(to), (char *)&to) != 0) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/dlpisubs.c:343
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"			if (strioctl(p->fd, SBIOCSTIME, sizeof(to), (char *)&to) != 0) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/dlpisubs.c:352
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	if (amt_read != sizeof(hdr) - sizeof(hdr.magic)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/sf-pcap.c:180
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	for (i = 0; i < sizeof(dsa_protos) / sizeof(dsa_protos[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/pcap-linux.c:5151
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"		memset(&bz, 0, sizeof(bz)); /* bzero() deprecated, replaced with memset() */
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/pcap-bpf.c:2105
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	if (strioctl(fd, A_GET_UNITS, sizeof(buf), (char *)&buf) < 0) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/pcap-dlpi.c:1139
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	strncpy(str1, s1, (s1_p1_len > sizeof(str1)) ? s1_p1_len : sizeof(str1));   *(str1 + s1_p1_len) = 0;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/pcap-sita.c:523
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	strncpy(str2, s2, (s2_p1_len > sizeof(str2)) ? s2_p1_len : sizeof(str2));   *(str2 + s2_p1_len) = 0;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/pcap-sita.c:524
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	if (read_client_nbytes(handle->fd, sizeof(buf), buf) == -1) return -1;	/* try reading the required bytes */
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/pcap-sita.c:829
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"				sock_getascii_addrport((struct sockaddr_storage *) tempaddrinfo->ai_addr, TmpBuffer, sizeof(TmpBuffer), NULL, 0, NI_NUMERICHOST, TmpBuffer, sizeof(TmpBuffer));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/sockutils.c:458
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"	n = (n + sizeof(long) - 1) & ~(sizeof(long) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/gencode.c:604
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"  if (fd <= 0 || fd >= sizeof(handle_to_device)/sizeof(handle_to_device[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/pcap-dos.c:140
01a47c4556531ab842baabe3e35f06c09dc19f19567ef67a6af3afee881cc8b3c3c6b7fe9179bee57ae08e785fcf22f59c654f6783663ca21953fb308cbb21a7,"#define DIM(x)   (sizeof((x)) / sizeof(x[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/msdos/pktdrvr.c:34
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	*recovery_max_size = TDB_ALIGN(sizeof(rec) + *recovery_size, tdb->page_size) - sizeof(rec);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/ext2fs/tdb.c:1854
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	e2p_feature_to_string(compat, mask, buf, sizeof(buf) / sizeof(buf[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/e2p/feature.c:181
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	bucket = (id ^ namerand) % (sizeof(buckets) / sizeof(buckets[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/fsstress.c:1105
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	li = (int)(random() % (sizeof(lengths) / sizeof(lengths[0])));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/fsstress.c:1587
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"static int max_nr_opt = (int)sizeof(seopt_file) / sizeof(seopt_file[0]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/android/e2fsdroid.c:34
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	if (fgets(name, sizeof(name), f) && (sz = strlen(name)) > 1) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/blkid/devname.c:172
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	if ((sizeof(off_t) >= sizeof(blkid_loff_t)) ||
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/blkid/llseek.c:100
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	if ((sizeof(off_t) < sizeof(blkid_loff_t)) &&
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/blkid/llseek.c:136
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	*recovery_max_size = TDB_ALIGN(sizeof(rec) + *recovery_size, tdb->page_size) - sizeof(rec);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/ext2fs/tdb.c:1854
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	for (i = 0; i < (sizeof(ErrorTable)/sizeof(ErrorTable[0])); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/ext2fs/nt_io.c:328
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	for (i = 0; i < (int)(sizeof(tests) / sizeof(tests[0])); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/ext2fs/digest_encode.c:146
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	if ((sizeof(off_t) < sizeof(ext2_loff_t)) &&
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/ext2fs/llseek.c:134
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	for (i = 0; i < (int)(sizeof(tests) / sizeof(tests[0])); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/ext2fs/sha256.c:239
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"        (sizeof(array) / sizeof(array[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/ext2fs/nls_utf8.c:91
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	for (i = 0; i < (int)(sizeof(tests) / sizeof(tests[0])); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/ext2fs/sha512.c:287
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	if ((sizeof(off_t) >= sizeof(ext2_loff_t)) &&
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/ext2fs/unix_io.c:246
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	if ((sizeof(off_t) >= sizeof(ext2_loff_t)) &&
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/ext2fs/unix_io.c:382
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"        (sizeof(array) / sizeof(array[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/e2p/errcode.c:34
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"        (sizeof(array) / sizeof(array[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/e2p/encoding.c:23
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	e2p_feature_to_string(compat, mask, buf, sizeof(buf) / sizeof(buf[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/e2p/feature.c:181
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	bucket = (id ^ namerand) % (sizeof(buckets) / sizeof(buckets[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/fsstress.c:1105
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	li = (int)(random() % (sizeof(lengths) / sizeof(lengths[0])));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/fsstress.c:1587
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	if (read(fd, &r, sizeof(r)) != sizeof(r))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/misc/e2fuzz.c:56
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"		if (pwrite64(fd, &c, sizeof(c), off) != sizeof(c)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/misc/e2fuzz.c:286
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"		if (pwrite(fd, &c, sizeof(c), off) != sizeof(c)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/misc/e2fuzz.c:291
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"		if (my_pwrite(fd, &c, sizeof(c), off) != sizeof(c)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/misc/e2fuzz.c:296
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	if (read(fd, (char *) &sb, sizeof(sb)) != sizeof(sb)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/misc/e2label.c:66
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	if (write(fd, (char *) &sb, sizeof(sb)) != sizeof(sb)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/misc/e2label.c:103
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"			if (ret != (int) (sizeof(num) + num*sizeof(uu)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/misc/uuidd.c:550
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"		for (y = 0; y < (sizeof(final) / sizeof(*final_u32)); ++y)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/misc/e4crypt.c:448
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"	for (x = 0; x < (sizeof(keyrings) / sizeof(keyrings[0])); ++x) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/misc/e4crypt.c:517
94daac1d1fc3b24837c496ead3936a10adf7a82c571290b5191facdb11b300479eff30eb0ea202dec8dc08ab7b3bc0d5965bd9625ec7f54c6e94a914f1254c9b,"			if (numtag >= sizeof(show) / sizeof(*show)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/misc/blkid.c:328
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  __builtin_memcpy(key + sizeof(*pkey), pkey, sizeof(*pkey));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/bpf/reuseport_kern.c:607
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  deflate(deflater, inflater, nva1, sizeof(nva1) / sizeof(nva1[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/examples/deflate.c:81
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  deflate(deflater, inflater, nva2, sizeof(nva2) / sizeof(nva2[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/examples/deflate.c:85
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  CU_ASSERT(sizeof(buf) == nghttp2_session_mem_recv(session, buf, sizeof(buf)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/nghttp2_session_test.c:2223
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  CU_ASSERT(sizeof(origin) - 1 == origin_len);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/nghttp2_session_test.c:6341
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  CU_ASSERT(sizeof(value) - 1 == out.nva[0].valuelen);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/nghttp2_hd_test.c:349
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  CU_ASSERT(sizeof(origin) - 1 == oaltsvc.origin_len);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/nghttp2_frame_test.c:500
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  CU_ASSERT(sizeof(field_value) - 1 == oaltsvc.field_value_len);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/nghttp2_frame_test.c:502
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  std::copy_n(std::begin(h), sizeof(dest.data), std::begin(dest.data));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/shrpx_quic.cc:256
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"#define lstreq(A, B, N) ((sizeof((A)) - 1) == (N) && memcmp((A), (B), (N)) == 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/nghttp2_helper.h:41
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"#define lstrieq(A, B, N) ((sizeof((A)) - 1) == (N) && memieq((A), (B), (N)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/nghttp2_http.c:50
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  __builtin_memcpy(key + sizeof(*pkey), pkey, sizeof(*pkey));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/bpf/reuseport_kern.c:607
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"#define ARRLEN(x) (sizeof(x) / sizeof(x[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/examples/libevent-server.c:78
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"    if (namelen == sizeof(PATH) - 1 && memcmp(PATH, name, namelen) == 0) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/examples/libevent-server.c:500
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"#define ARRLEN(x) (sizeof(x) / sizeof(x[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/examples/libevent-client.c:70
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  deflate(deflater, inflater, nva1, sizeof(nva1) / sizeof(nva1[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/examples/deflate.c:81
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  deflate(deflater, inflater, nva2, sizeof(nva2) / sizeof(nva2[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/examples/deflate.c:85
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  CU_ASSERT(sizeof(buf) == nghttp2_session_mem_recv(session, buf, sizeof(buf)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/nghttp2_session_test.c:2223
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  for (i = 0; i < (int)(sizeof(nodes) / sizeof(nodes[0])); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/nghttp2_pq_test.c:151
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  for (i = 0; i < (int)(sizeof(nodes) / sizeof(nodes[0])); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/nghttp2_pq_test.c:159
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"#define ARRLEN(ARR) (sizeof(ARR) / sizeof(ARR[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/nghttp2_test_helper.h:41
8552deb0217b99388b8e774516b767ac1eb3c217fdb2136eb7aa3b20ae3abb15b916239696f2096f365b683c2234e9c475f0f839a995915f3365f42886f713ad,"  std::copy_n(std::begin(h), sizeof(dest.data), std::begin(dest.data));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/shrpx_quic.cc:256
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"			assert(ptr >= reinterpret_cast<char*>(page) + sizeof(xml_memory_page) && ptr < reinterpret_cast<char*>(page) + sizeof(xml_memory_page) + page->busy_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:600
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		PUGI__STATIC_ASSERT(sizeof(wchar_t) == 2 || sizeof(wchar_t) == 4);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:1913
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"			PUGI__STATIC_ASSERT(sizeof(U) == 8 || sizeof(U) == 4 || sizeof(U) == 2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:4560
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		assert(strlen(buf) < sizeof(wbuf) / sizeof(wbuf[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:4657
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		extra = reinterpret_cast<impl::xml_extra_buffer*>((reinterpret_cast<uintptr_t>(extra) + (sizeof(void*) - 1)) & ~(sizeof(void*) - 1));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:6183
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"	static const uintptr_t xpath_memory_block_alignment = sizeof(double) > sizeof(void*) ? sizeof(double) : sizeof(void*);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:7625
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"				char_t* result = static_cast<char_t*>(alloc->reallocate(_uses_heap ? const_cast<char_t*>(_buffer) : 0, (target_length + 1) * sizeof(char_t), (result_length + 1) * sizeof(char_t)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:7885
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"				xpath_node* data = static_cast<xpath_node*>(alloc->reallocate(_begin, capacity * sizeof(xpath_node), (size_ + count) * sizeof(xpath_node)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:8964
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		xpath_node* data = static_cast<xpath_node*>(alloc->reallocate(_begin, capacity * sizeof(xpath_node), new_capacity * sizeof(xpath_node)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:9046
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            RegexType* r = new (allocator_->Malloc(sizeof(RegexType))) RegexType(value.GetString(), allocator_);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/rapidjson/include/rapidjson/schema.h:1207
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                SchemaType* s = new (allocator_->Malloc(sizeof(SchemaType))) SchemaType(this, pointer, v, document, allocator_);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/rapidjson/include/rapidjson/schema.h:1730
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        return new (GetStateAllocator().Malloc(sizeof(HasherType))) HasherType(&GetStateAllocator());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/rapidjson/include/rapidjson/schema.h:2294
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                    CurrentContext().arrayElementHashCodes = a = new (GetStateAllocator().Malloc(sizeof(HashCodeArray))) HashCodeArray(kArrayType);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/rapidjson/include/rapidjson/schema.h:2415
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        static const Pointer p(kTokens, sizeof(kTokens) / sizeof(kTokens[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/rapidjson/include/rapidjson/pointer.h:156
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            SetMembersPointer(reinterpret_cast<Member*>(allocator.Realloc(GetMembersPointer(), data_.o.capacity * sizeof(Member), newCapacity * sizeof(Member))));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/rapidjson/include/rapidjson/document.h:1262
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            SetElementsPointer(reinterpret_cast<GenericValue*>(allocator.Realloc(GetElementsPointer(), data_.a.capacity * sizeof(GenericValue), newCapacity * sizeof(GenericValue))));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/rapidjson/include/rapidjson/document.h:1698
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        RAPIDJSON_ASSERT(static_cast<std::ptrdiff_t>(sizeof(T) * count) <= (stackEnd_ - stackTop_));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/rapidjson/include/rapidjson/internal/stack.h:131
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"  const ::wstring str(s, sizeof(s)/sizeof(wchar_t));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/gtest/test/gtest-printers_test.cc:699
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"  const ::std::wstring str(s, sizeof(s)/sizeof(wchar_t));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/gtest/test/gtest-printers_test.cc:710
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"//   GTEST_COMPILE_ASSERT_(sizeof(foo) < 128, foo_too_large);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/gtest/include/gtest/internal/gtest-port.h:1031
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"  return FilePath(_getcwd(cwd, sizeof(cwd)) == NULL ? """" : cwd);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/gtest/src/gtest-filepath.cc:106
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    ::GetTempPathA(sizeof(temp_dir_path), temp_dir_path);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/gtest/src/gtest-port.cc:941
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"         size_t bytes_copy = (bytes_left < sizeof(temp)) ? bytes_left : sizeof(temp);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/stb/stb_image.h:1175
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"					memcpy(offsetBuffer + face * sizeof(unsigned int), &faceBufferOffset, sizeof(unsigned int));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/port/jassimp/jassimp-native/src/jassimp.cpp:747
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    static_assert(sizeof(BinFloat) >= sizeof(ai_real), ""sizeof(BinFloat) >= sizeof(ai_real)"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/code/Common/SpatialSort.cpp:199
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    static_assert(sizeof(BinFloat) == sizeof(ai_real), ""sizeof(BinFloat) == sizeof(ai_real)"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/code/Common/SpatialSort.cpp:206
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            CopyNextWord(it, m_DataItEnd, value, sizeof(value) / sizeof(*value));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/code/AssetLib/Obj/ObjFileMtlImporter.cpp:458
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            CopyNextWord(it, m_DataItEnd, value, sizeof(value) / sizeof(*value));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/code/AssetLib/Obj/ObjFileMtlImporter.cpp:467
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                static_assert(sizeof(aiUVTransform) / sizeof(ai_real) == 5, ""sizeof(aiUVTransform)/sizeof(ai_real) == 5"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/code/AssetLib/LWO/LWOMaterial.cpp:154
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    void *p = STBIW_REALLOC_SIZED(*arr ? _m3dstbiw___sbraw(*arr) : 0, *arr ? (_m3dstbiw___sbm(*arr) * itemsize + sizeof(int) * 2) : 0, itemsize * m + sizeof(int) * 2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/code/AssetLib/M3D/m3d.h:659
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                ai_assert(sizeof(mac_codetable) / sizeof(mac_codetable[0]) == 0x100-0x20);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/code/AssetLib/STEPParser/STEPFileEncoding.cpp:315
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    static_assert(sizeof(uint16_t) == 2, ""sizeof(uint16_t)==2"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/code/AssetLib/Assbin/AssbinFileWriter.cpp:103
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    static_assert(sizeof(float) == 4, ""sizeof(float)==4"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/code/AssetLib/Assbin/AssbinFileWriter.cpp:113
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    static_assert(sizeof(double) == 8, ""sizeof(double)==8"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/code/AssetLib/Assbin/AssbinFileWriter.cpp:123
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"			assert(ptr >= reinterpret_cast<char*>(page) + sizeof(xml_memory_page) && ptr < reinterpret_cast<char*>(page) + sizeof(xml_memory_page) + page->busy_size);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:600
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		PUGI__STATIC_ASSERT(sizeof(wchar_t) == 2 || sizeof(wchar_t) == 4);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:1913
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"			PUGI__STATIC_ASSERT(sizeof(U) == 8 || sizeof(U) == 4 || sizeof(U) == 2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:4560
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		assert(strlen(buf) < sizeof(wbuf) / sizeof(wbuf[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:4657
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		extra = reinterpret_cast<impl::xml_extra_buffer*>((reinterpret_cast<uintptr_t>(extra) + (sizeof(void*) - 1)) & ~(sizeof(void*) - 1));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:6183
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"				char_t* result = static_cast<char_t*>(alloc->reallocate(_uses_heap ? const_cast<char_t*>(_buffer) : 0, (target_length + 1) * sizeof(char_t), (result_length + 1) * sizeof(char_t)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:7885
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		if (length >= sizeof(buffer) / sizeof(buffer[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:8434
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		if (length >= sizeof(buffer) / sizeof(buffer[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:8823
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"				xpath_node* data = static_cast<xpath_node*>(alloc->reallocate(_begin, capacity * sizeof(xpath_node), (size_ + count) * sizeof(xpath_node)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:8964
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		xpath_node* data = static_cast<xpath_node*>(alloc->reallocate(_begin, capacity * sizeof(xpath_node), new_capacity * sizeof(xpath_node)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:9046
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:12503
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:12509
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:12515
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:12533
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:12542
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:12558
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/pugixml/src/pugixml.cpp:12567
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        static const ValueType v(s, static_cast<SizeType>(sizeof(s) / sizeof(Ch) - 1));\
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/rapidjson/include/rapidjson/schema.h:1093
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            RegexType* r = new (allocator_->Malloc(sizeof(RegexType))) RegexType(value.GetString(), allocator_);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/rapidjson/include/rapidjson/schema.h:1207
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        static const StringRefType v(s, static_cast<SizeType>(sizeof(s) / sizeof(Ch) - 1)); \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/rapidjson/include/rapidjson/schema.h:2169
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        ISchemaValidator* sv = new (GetStateAllocator().Malloc(sizeof(GenericSchemaValidator))) GenericSchemaValidator(*schemaDocument_, root, documentStack_.template Bottom<char>(), documentStack_.GetSize(),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/rapidjson/include/rapidjson/schema.h:2278
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        return new (GetStateAllocator().Malloc(sizeof(HasherType))) HasherType(&GetStateAllocator());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/rapidjson/include/rapidjson/schema.h:2294
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        static const Pointer p(kTokens, sizeof(kTokens) / sizeof(kTokens[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/rapidjson/include/rapidjson/pointer.h:156
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            SetMembersPointer(reinterpret_cast<Member*>(allocator.Realloc(GetMembersPointer(), data_.o.capacity * sizeof(Member), newCapacity * sizeof(Member))));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/rapidjson/include/rapidjson/document.h:1262
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            SetElementsPointer(reinterpret_cast<GenericValue*>(allocator.Realloc(GetElementsPointer(), data_.a.capacity * sizeof(GenericValue), newCapacity * sizeof(GenericValue))));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/rapidjson/include/rapidjson/document.h:1698
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        if (RAPIDJSON_UNLIKELY(static_cast<std::ptrdiff_t>(sizeof(T) * count) > (stackEnd_ - stackTop_)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/rapidjson/include/rapidjson/internal/stack.h:118
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        RAPIDJSON_ASSERT(static_cast<std::ptrdiff_t>(sizeof(T) * count) <= (stackEnd_ - stackTop_));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/rapidjson/include/rapidjson/internal/stack.h:131
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"#  define GT_OFF(x) (sizeof(int) == sizeof(z_off64_t) && (x) > gz_intmax())
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/zlib/gzguts.h:217
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"  const ::wstring str(s, sizeof(s)/sizeof(wchar_t));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/gtest/test/gtest-printers_test.cc:699
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"  const ::std::wstring str(s, sizeof(s)/sizeof(wchar_t));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/gtest/test/gtest-printers_test.cc:710
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"  for (int i = 0; i < static_cast<int>(sizeof(a)/sizeof(*a)); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/gtest/test/gtest_output_test_.cc:158
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"#define GTEST_ARRAY_SIZE_(array) (sizeof(array) / sizeof(array[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/gtest/include/gtest/internal/gtest-port.h:1104
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"  for (i = 0; i < sizeof(s_error_descs) / sizeof(s_error_descs[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/zip/src/miniz.h:1851
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"   if (n < 0 || n >= (int) (sizeof(stbi__bmask)/sizeof(*stbi__bmask))) return 0;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/stb/stb_image.h:2095
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"      if (num_packets==sizeof(packets)/sizeof(packets[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/stb/stb_image.h:6219
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"      if (num_packets==sizeof(packets)/sizeof(packets[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/stb/stb_image.h:7247
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"					memcpy(offsetBuffer + face * sizeof(unsigned int), &faceBufferOffset, sizeof(unsigned int));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/port/jassimp/jassimp-native/src/jassimp.cpp:747
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        for (unsigned int type = 0; type < sizeof(types) / sizeof(types[0]); ++type) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tools/assimp_cmd/Info.cpp:476
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    static_assert(sizeof(BinFloat) >= sizeof(ai_real), ""sizeof(BinFloat) >= sizeof(ai_real)"");
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/Common/SpatialSort.cpp:199
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    static_assert(sizeof(BinFloat) == sizeof(ai_real), ""sizeof(BinFloat) == sizeof(ai_real)"");
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/Common/SpatialSort.cpp:206
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            CopyNextWord(it, m_DataItEnd, value, sizeof(value) / sizeof(*value));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/Obj/ObjFileMtlImporter.cpp:458
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            CopyNextWord(it, m_DataItEnd, value, sizeof(value) / sizeof(*value));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/Obj/ObjFileMtlImporter.cpp:467
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        for (size_t i = 0; i < sizeof(conv_data.next_texture) / sizeof(conv_data.next_texture[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/Blender/BlenderLoader.cpp:686
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"        for (size_t i = 0; i < sizeof(mat->mtex) / sizeof(mat->mtex[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/Blender/BlenderLoader.cpp:733
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                static_assert(sizeof(aiUVTransform) / sizeof(ai_real) == 5, ""sizeof(aiUVTransform)/sizeof(ai_real) == 5"");
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/LWO/LWOMaterial.cpp:154
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"#define AI_DXF_NUM_INDEX_COLORS (sizeof(g_aclrDxfIndexColors)/sizeof(g_aclrDxfIndexColors[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/DXF/DXFLoader.cpp:90
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"            for (l = 0; l < sizeof(m3d_propertytypes) / sizeof(m3d_propertytypes[0]); l++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/M3DImporter.cpp:242
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    void *p = STBIW_REALLOC_SIZED(*arr ? _m3dstbiw___sbraw(*arr) : 0, *arr ? (_m3dstbiw___sbm(*arr) * itemsize + sizeof(int) * 2) : 0, itemsize * m + sizeof(int) * 2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:659
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                    for (j = 0; j < sizeof(m3d_propertytypes) / sizeof(m3d_propertytypes[0]); j++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:1428
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                    for (cd = NULL, k = 0; k < (unsigned int)(sizeof(m3d_commandtypes) / sizeof(m3d_commandtypes[0])); k++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:1571
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                        for (k = 256, j = 0; j < sizeof(m3d_propertytypes) / sizeof(m3d_propertytypes[0]); j++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:2166
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                if (h->cmd[i].type >= (unsigned int)(sizeof(m3d_commandtypes) / sizeof(m3d_commandtypes[0]))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:2317
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                    if (cmd->type >= (unsigned int)(sizeof(m3d_commandtypes) / sizeof(m3d_commandtypes[0])) || !cmd->arg)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:3213
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                        for (l = 0; l < sizeof(m3d_propertytypes) / sizeof(m3d_propertytypes[0]); l++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:3336
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                        for (l = 0; l < sizeof(m3d_propertytypes) / sizeof(m3d_propertytypes[0]); l++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:3686
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                            for (l = 0; l < sizeof(m3d_propertytypes) / sizeof(m3d_propertytypes[0]); l++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:3692
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                        for (l = 0; l < sizeof(m3d_propertytypes) / sizeof(m3d_propertytypes[0]); l++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:3699
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                    if (cmd->type >= (unsigned int)(sizeof(m3d_commandtypes) / sizeof(m3d_commandtypes[0])) || !cmd->arg)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:3843
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                        for (k = 256, l = 0; l < sizeof(m3d_propertytypes) / sizeof(m3d_propertytypes[0]); l++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:4299
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                    if (cmd->type >= (unsigned int)(sizeof(m3d_commandtypes) / sizeof(m3d_commandtypes[0])) || !cmd->arg)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/M3D/m3d.h:4429
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"                ai_assert(sizeof(mac_codetable) / sizeof(mac_codetable[0]) == 0x100-0x20);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/STEPParser/STEPFileEncoding.cpp:315
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"#   define ARRAYSIZE(_array) (int(sizeof(_array) / sizeof(_array[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/MD2/MD2Loader.cpp:65
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    static_assert(sizeof(uint16_t) == 2, ""sizeof(uint16_t)==2"");
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/Assbin/AssbinFileWriter.cpp:103
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    static_assert(sizeof(float) == 4, ""sizeof(float)==4"");
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/Assbin/AssbinFileWriter.cpp:113
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"    static_assert(sizeof(double) == 8, ""sizeof(double)==8"");
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/code/AssetLib/Assbin/AssbinFileWriter.cpp:123
c7d79fcace10b3115428ad12943eeee8eff4435dbaabb845f6f0516faa5c906aef62b00cc63a09338ceb186a0b099e47a7a948541923dee85a902fe13e58fd2b,"#define AI_COUNT_OF(X) (sizeof(X) / sizeof((X)[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/assimp/defs.h:334
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"        strncat(target_path, "".gz"", sizeof(target_path) - strlen(target_path) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/minigzip.c:66
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"        strncat(tmp_path, "".tmp.zip"", sizeof(tmp_path) - strlen(tmp_path) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/minizip.c:417
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"            strncat(bak_path, "".bak"", sizeof(bak_path) - strlen(bak_path) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/minizip.c:494
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"            bytes_to_read = (int32_t)sizeof(buffered->readbuf) - (buffered->readbuf_len - buffered->readbuf_pos);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/mz_strm_buf.c:146
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"    convert_buffer_to_hex_string(hash, sizeof(hash), computed_hash, sizeof(computed_hash));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/test.c:645
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"    convert_buffer_to_hex_string(hash, sizeof(hash), computed_hash, sizeof(computed_hash));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/test.c:802
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"        strncat(target_path, "".gz"", sizeof(target_path) - strlen(target_path) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/minigzip.c:66
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"        strncat(tmp_path, "".tmp.zip"", sizeof(tmp_path) - strlen(tmp_path) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/minizip.c:417
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"            strncat(bak_path, "".bak"", sizeof(bak_path) - strlen(bak_path) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/minizip.c:494
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"        if (mz_stream_write(pkcrypt->stream.base, header, sizeof(header)) != sizeof(header))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mz_strm_pkcrypt.c:151
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"        if (mz_stream_read(pkcrypt->stream.base, header, sizeof(header)) != sizeof(header))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/mz_strm_pkcrypt.c:156
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"    convert_buffer_to_hex_string(hash, sizeof(hash), computed_hash, sizeof(computed_hash));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/test.c:645
dd16f6d7663c3ada3f6d89b90b065e449cd2beead9cb69965e6df306d16152dc047fcd687d29d0c6c09042fd8fe8f91d8615f1b8bef07615bf2f7da416071495,"    convert_buffer_to_hex_string(hash, sizeof(hash), computed_hash, sizeof(computed_hash));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/test.c:802
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    char_array_buffer<char> buffer(contents, contents + sizeof(contents) / sizeof(contents[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/test_document.cpp:213
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    char_array_buffer<wchar_t> buffer(contents, contents + sizeof(contents) / sizeof(contents[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/test_document.cpp:224
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    char_array_buffer<char> buffer(contents, contents + sizeof(contents) / sizeof(contents[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/test_document.cpp:250
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    char_array_buffer<wchar_t> buffer(contents, contents + sizeof(contents) / sizeof(contents[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/test_document.cpp:262
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	size_t size = q.evaluate_string(result, sizeof(result) / sizeof(result[0]), node);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/test_xpath.cpp:235
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	xpath_node_set ns(nodes, nodes + sizeof(nodes) / sizeof(nodes[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/test_xpath.cpp:763
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"const size_t memory_alignment = sizeof(double) > sizeof(void*) ? sizeof(double) : sizeof(void*);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/allocator.cpp:145
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    xpath_node_set ns(nodes, nodes + sizeof(nodes) / sizeof(nodes[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/test_xpath_paths.cpp:697
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"			assert(ptr >= reinterpret_cast<char*>(page) + sizeof(xml_memory_page) && ptr < reinterpret_cast<char*>(page) + sizeof(xml_memory_page) + page->busy_size);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/pugixml.cpp:600
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		PUGI__STATIC_ASSERT(sizeof(wchar_t) == 2 || sizeof(wchar_t) == 4);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/pugixml.cpp:1913
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"			PUGI__STATIC_ASSERT(sizeof(U) == 8 || sizeof(U) == 4 || sizeof(U) == 2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/pugixml.cpp:4560
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		assert(strlen(buf) < sizeof(wbuf) / sizeof(wbuf[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/pugixml.cpp:4657
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		extra = reinterpret_cast<impl::xml_extra_buffer*>((reinterpret_cast<uintptr_t>(extra) + (sizeof(void*) - 1)) & ~(sizeof(void*) - 1));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/pugixml.cpp:6183
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	static const uintptr_t xpath_memory_block_alignment = sizeof(double) > sizeof(void*) ? sizeof(double) : sizeof(void*);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/pugixml.cpp:7625
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"				char_t* result = static_cast<char_t*>(alloc->reallocate(_uses_heap ? const_cast<char_t*>(_buffer) : 0, (target_length + 1) * sizeof(char_t), (result_length + 1) * sizeof(char_t)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/pugixml.cpp:7885
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"				xpath_node* data = static_cast<xpath_node*>(alloc->reallocate(_begin, capacity * sizeof(xpath_node), (size_ + count) * sizeof(xpath_node)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/pugixml.cpp:8964
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		xpath_node* data = static_cast<xpath_node*>(alloc->reallocate(_begin, capacity * sizeof(xpath_node), new_capacity * sizeof(xpath_node)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/pugixml.cpp:9046
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (size_t i = 0; i < sizeof(fp_roundtrip_base) / sizeof(fp_roundtrip_base[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_dom_modify.cpp:1806
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (size_t i = 0; i < sizeof(fp_roundtrip_base) / sizeof(fp_roundtrip_base[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_dom_modify.cpp:1824
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(flags_parse) / sizeof(flags_parse[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_write.cpp:602
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (unsigned int j = 0; j < sizeof(flags_format) / sizeof(flags_format[0]); ++j)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_write.cpp:607
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    char_array_buffer<char> buffer(contents, contents + sizeof(contents) / sizeof(contents[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:213
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    char_array_buffer<wchar_t> buffer(contents, contents + sizeof(contents) / sizeof(contents[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:224
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    char_array_buffer<char> buffer(contents, contents + sizeof(contents) / sizeof(contents[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:250
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    char_array_buffer<wchar_t> buffer(contents, contents + sizeof(contents) / sizeof(contents[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:262
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(files) / sizeof(files[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:953
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(files) / sizeof(files[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:994
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (unsigned int j = 0; j < sizeof(files) / sizeof(files[0]); ++j)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:996
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(files[0]) / sizeof(files[0][0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1046
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (unsigned int j = 0; j < sizeof(encodings) / sizeof(encodings[0]); ++j)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1051
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(files) / sizeof(files[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1104
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int src = 0; src < sizeof(files) / sizeof(files[0]); ++src)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1110
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (unsigned int dst = 0; dst < sizeof(files) / sizeof(files[0]); ++dst)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1112
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int j = 0; j < sizeof(files) / sizeof(files[0]); ++j)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1124
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(files) / sizeof(files[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1139
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int src = 0; src < sizeof(files) / sizeof(files[0]); ++src)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1145
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (unsigned int dst = 0; dst < sizeof(files) / sizeof(files[0]); ++dst)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1147
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int j = 0; j < sizeof(files) / sizeof(files[0]); ++j)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1159
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(encodings) / sizeof(encodings[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1231
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(encodings) / sizeof(encodings[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1267
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (size_t i = 0; i < sizeof(data) / sizeof(data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1502
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(files) / sizeof(files[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1604
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int src = 0; src < sizeof(files) / sizeof(files[0]); ++src)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1612
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int j = 0; j < sizeof(files) / sizeof(files[0]); ++j)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_document.cpp:1619
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_xpath_parse.cpp:179
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_xpath_parse.cpp:222
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_xpath_parse.cpp:256
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (size_t i = 0; i + 1 < sizeof(query) / sizeof(query[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_xpath_parse.cpp:349
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	size_t size = q.evaluate_string(result, sizeof(result) / sizeof(result[0]), node);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_xpath.cpp:235
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	xpath_node_set ns(nodes, nodes + sizeof(nodes) / sizeof(nodes[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_xpath.cpp:763
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(flag_sets) / sizeof(flag_sets[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:13
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(flag_sets) / sizeof(flag_sets[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:60
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(flag_sets) / sizeof(flag_sets[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:153
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(flag_sets) / sizeof(flag_sets[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:223
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    for (size_t i = 0; i < sizeof(test_data) / sizeof(test_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:338
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    for (size_t i = 0; i < sizeof(test_data) / sizeof(test_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:389
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    for (size_t i = 0; i < sizeof(test_data) / sizeof(test_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:470
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (size_t i = 0; i < sizeof(flags) / sizeof(flags[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:486
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(flag_sets) / sizeof(flag_sets[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:857
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (unsigned int i = 0; i < sizeof(flag_sets) / sizeof(flag_sets[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:891
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (size_t i = 0; i < sizeof(data) / sizeof(data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:1088
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (size_t i = 0; i < sizeof(data) / sizeof(data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:1307
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"	for (size_t i = 0; i < sizeof(data) / sizeof(data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_parse.cpp:1349
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"    xpath_node_set ns(nodes, nodes + sizeof(nodes) / sizeof(nodes[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_xpath_paths.cpp:697
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"			assert(ptr >= reinterpret_cast<char*>(page) + sizeof(xml_memory_page) && ptr < reinterpret_cast<char*>(page) + sizeof(xml_memory_page) + page->busy_size);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:600
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		PUGI__STATIC_ASSERT(sizeof(wchar_t) == 2 || sizeof(wchar_t) == 4);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:1913
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"			PUGI__STATIC_ASSERT(sizeof(U) == 8 || sizeof(U) == 4 || sizeof(U) == 2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:4560
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		assert(strlen(buf) < sizeof(wbuf) / sizeof(wbuf[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:4657
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		extra = reinterpret_cast<impl::xml_extra_buffer*>((reinterpret_cast<uintptr_t>(extra) + (sizeof(void*) - 1)) & ~(sizeof(void*) - 1));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:6183
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"				char_t* result = static_cast<char_t*>(alloc->reallocate(_uses_heap ? const_cast<char_t*>(_buffer) : 0, (target_length + 1) * sizeof(char_t), (result_length + 1) * sizeof(char_t)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:7885
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		if (length >= sizeof(buffer) / sizeof(buffer[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:8434
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		if (length >= sizeof(buffer) / sizeof(buffer[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:8823
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"				xpath_node* data = static_cast<xpath_node*>(alloc->reallocate(_begin, capacity * sizeof(xpath_node), (size_ + count) * sizeof(xpath_node)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:8964
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		xpath_node* data = static_cast<xpath_node*>(alloc->reallocate(_begin, capacity * sizeof(xpath_node), new_capacity * sizeof(xpath_node)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:9046
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:12503
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:12509
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:12515
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:12533
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:12542
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:12558
ba1f0f9ba8f070074f8d2f09997f0e09e7ec783a44a7a39fc2f09246935b210894defd559c78e5a901f2a32ef165549efcaafa454821a7d9b6cd955bd73d16fc,"		for (size_t i = 0; i < sizeof(_data) / sizeof(_data[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/pugixml.cpp:12567
6eabc503bc34e350d378b0e6d3f417292ee091b6c89c54bc66c9259be7818624860ba8899daf4bd244fd0faeb56d576ac0b6d969d19ccb88308156a152d202e3,"    sizeof(T) <= sizeof(buffer) && alignof(buffer) % alignof(T) == 0 &&
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/MoveOnlyFunction.h:89
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"    igraph_vector_view(&vector, data, sizeof(data) / sizeof(data[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/examples/simple/igraph_power_law_fit.c:208
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"    igraph_vector_view(&vector, data, sizeof(data) / sizeof(data[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/examples/simple/igraph_power_law_fit.c:271
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"    qsort(*result, n, sizeof(double), double_comparator);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/vendor/plfit/plfit.c:72
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"         (sizeof(void *) == 4 || sizeof(void *) == 8));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/vendor/glpk/env/env.c:63
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"  rn = (size * count + sizeof(mp_limb_t) - 1) / sizeof(mp_limb_t);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/vendor/mini-gmp/mini-gmp.c:4449
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"    for (j = 0; j < sizeof(params) / (2 * sizeof(params[0])); j++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/examples/simple/igraph_independent_sets.c:50
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"    igraph_vector_view(&vector, data, sizeof(data) / sizeof(data[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/examples/simple/igraph_power_law_fit.c:208
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"    igraph_vector_view(&vector, data, sizeof(data) / sizeof(data[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/examples/simple/igraph_power_law_fit.c:271
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"    for (j = 0; j < sizeof(params) / (2 * sizeof(params[0])); j++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/examples/simple/igraph_cliques.c:133
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"#define IGRAPH_REALLOC(p,n,t) (t*) realloc((void*)(p), (n) > 0 ? (size_t)((n)*sizeof(t)) : (size_t)1)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/igraph_memory.h:33
b556f5b014e29b7e21f1879672aff34cb7a65925bd700e09436a484e1df74f1362f0eed1dbfc850997ed1eafa8556596ca46a8c505624fbdc712957a6f490e2f,"         (sizeof(void *) == 4 || sizeof(void *) == 8));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/vendor/glpk/env/env.c:63
f93fbb60e0a772e1754448f1a221d882ed35d018517ebf5044b6dfd6741d465f13dca8c8cd9bd100bd13c51f49e4c59af1c1d3cca337f89b8fd00d49444de936,"  ((sizeof(a) / sizeof(*(a))) /                         \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/double-conversion/utils.h:199
f93fbb60e0a772e1754448f1a221d882ed35d018517ebf5044b6dfd6741d465f13dca8c8cd9bd100bd13c51f49e4c59af1c1d3cca337f89b8fd00d49444de936,"  static_cast<size_t>(!(sizeof(a) % sizeof(*(a)))))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/double-conversion/utils.h:200
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"  unsigned int size = (unsigned int)(sizeof(smilesData) / sizeof(smilesData[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/regressionstest.cpp:360
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"  if (arg2) memcpy(arg1->fpid,arg2,16*sizeof(char)); else memset(arg1->fpid,0,16*sizeof(char)); r_ans = R_NilValue; free(arg2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/scripts/R/examples/openbabelR/src/openbabel-R.cpp:19979
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"  if (arg2) memcpy(arg1->datafilename,arg2,256*sizeof(char)); else memset(arg1->datafilename,0,256*sizeof(char));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/scripts/R/examples/openbabelR/src/openbabel-R.cpp:19995
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"    std::vector<double> vec (arr, arr + sizeof(arr) / sizeof(arr[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/confsearch.cpp:133
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"            snprintf(type_name, sizeof(type_num), ""%d"",type_num);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/formats/chem3dformat.cpp:309
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"int cnListNumEl = (int)(sizeof(cnList)/sizeof(cnList[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/formats/libinchi/ichirvr1.c:516
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"  unsigned int size = (unsigned int)(sizeof(smilesData) / sizeof(smilesData[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/regressionstest.cpp:360
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"  if (arg2) memcpy(arg1->fpid,arg2,16*sizeof(char)); else memset(arg1->fpid,0,16*sizeof(char)); r_ans = R_NilValue; free(arg2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/scripts/R/examples/openbabelR/src/openbabel-R.cpp:19979
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"  if (arg2) memcpy(arg1->datafilename,arg2,256*sizeof(char)); else memset(arg1->datafilename,0,256*sizeof(char));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/scripts/R/examples/openbabelR/src/openbabel-R.cpp:19995
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"                 (hlen=sizeof(sStructHdrPln)-1, !memcmp(szLine, sStructHdrPln, hlen)) ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/inchi/aux2atom.h:387
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"            if ( (bHeaderRead && (bFatal=0, len=sizeof(sStructMsgXmlErr)-1,      !memcmp(szLine, sStructMsgXmlErr, len))) ||
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/inchi/aux2atom.h:1401
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"                 (bHeaderRead && (len=sizeof(sStructMsgXmlErrFatal)-1, !memcmp(szLine, sStructMsgXmlErrFatal, len))&&(bFatal=1))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/inchi/aux2atom.h:1402
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"        if ( len == sizeof(sdf_data_hdr_name)-1 && !memicmp( p, sdf_data_hdr_name, len ) )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/inchi/lreadmol.h:1082
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"        if ( len == sizeof(sdf_data_hdr_comm)-1 && !memicmp( p, sdf_data_hdr_comm, len ) )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/inchi/lreadmol.h:1084
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"    std::vector<double> vec (arr, arr + sizeof(arr) / sizeof(arr[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/confsearch.cpp:133
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"#define NEU (sizeof(eu)/sizeof(eu[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/data_utilities.cpp:103
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"                while (end < sizeof(type_name) - 1 && type_name[end] && !isspace(type_name[end]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/pdbqtformat.cpp:932
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"#define LASTIDX (sizeof(magicints) / sizeof(*magicints))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/xtcformat.cpp:46
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"    for ( i = 0; i < sizeof(szElem)/sizeof(szElem[0]); i++ ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichister.c:1283
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"    for ( i = 0; i < (int)(sizeof(szElem)/sizeof(szElem[0])); i++ ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichister.c:1300
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"        for ( i = sizeof(apc->bSetNew)/sizeof(apc->bSetNew[0])-1; 0 <= i; i -- ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichi_bns.c:6000
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"        for ( i = sizeof(apc->bSetOldCapsVert)/sizeof(apc->bSetOldCapsVert[0])-1; 0 <= i; i -- ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichi_bns.c:6025
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"        for ( i = sizeof(apc->bSetOldCapsVert)/sizeof(apc->bSetOldCapsVert[0])-1; 0 <= i; i -- ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichi_bns.c:6041
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"        for ( i = sizeof(apc->bSetNew)/sizeof(apc->bSetNew[0])-1; 0 <= i; i -- ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichi_bns.c:6055
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"             for ( k = 0; k < (int)(sizeof(t_group->num)/sizeof(t_group->num[0])); k ++ )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichitaut.c:708
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"             for ( k = 0; k < (int)(sizeof(t_group->num_DA)/sizeof(t_group->num_DA[0])); k ++ )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichitaut.c:710
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"         for ( k = 0; k < (int)(sizeof(t_group->num)/sizeof(t_group->num[0])); k ++ )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichitaut.c:750
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"         for ( k = 0; k < (int)(sizeof(t_group->num_DA)/sizeof(t_group->num_DA[0])); k ++ )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichitaut.c:752
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"int cnListNumEl = (int)(sizeof(cnList)/sizeof(cnList[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichirvr1.c:516
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"        for ( i = 0; i < (int)(sizeof(vf)/sizeof(vf[0])); i ++ ) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichirvr1.c:3649
eae3ecc975c9f895c32b5fbba7574324e3ad59534d093a51931b02fe806598f942a488091302fa164eee9ceb79817a6131365487d07ff04fd01c477ee4f69d16,"        while ( NULL != fgets( temp, sizeof(temp), inp ) && NULL == strchr(temp,'\n') )
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/formats/libinchi/ichi_io.c:794
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        EXPECT_EQ(sizeof(e) / sizeof(int), handler.LogCount);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/unittest/readertest.cpp:1579
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        EXPECT_EQ(sizeof(e) / sizeof(int), handler.LogCount);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/unittest/readertest.cpp:1614
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    Pointer p(kTokens, sizeof(kTokens) / sizeof(kTokens[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/unittest/pointertest.cpp:456
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        Pointer p(kTokens, sizeof(kTokens) / sizeof(kTokens[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/unittest/pointertest.cpp:485
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        Pointer p(kTokens, sizeof(kTokens) / sizeof(kTokens[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/unittest/pointertest.cpp:524
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        EXPECT_TRUE(it->second < sizeof(pointers) / sizeof(pointers[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/unittest/pointertest.cpp:1672
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        EXPECT_TRUE(i < sizeof(ordered_pointers) / sizeof(ordered_pointers[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/unittest/pointertest.cpp:1674
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"            RegexType* r = new (allocator_->Malloc(sizeof(RegexType))) RegexType(value.GetString(), allocator_);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/rapidjson/schema.h:1246
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"                SchemaType* s = new (allocator_->Malloc(sizeof(SchemaType))) SchemaType(this, pointer, v, document, allocator_, id);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/rapidjson/schema.h:1765
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        return new (GetStateAllocator().Malloc(sizeof(HasherType))) HasherType(&GetStateAllocator());
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/rapidjson/schema.h:2458
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"                    CurrentContext().arrayElementHashCodes = a = new (GetStateAllocator().Malloc(sizeof(HashCodeArray))) HashCodeArray(kArrayType);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/rapidjson/schema.h:2579
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        static const Pointer p(kTokens, sizeof(kTokens) / sizeof(kTokens[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/rapidjson/pointer.h:159
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"            SetElementsPointer(reinterpret_cast<GenericValue*>(allocator.Realloc(GetElementsPointer(), data_.a.capacity * sizeof(GenericValue), newCapacity * sizeof(GenericValue))));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/rapidjson/document.h:1682
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"            *newMap = new (allocator.Malloc(sizeof(Map))) Map(MapLess(), allocator);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/rapidjson/document.h:2180
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    RAPIDJSON_NOEXCEPT_ASSERT(old_n <= SIZE_MAX / sizeof(T) && new_n <= SIZE_MAX / sizeof(T));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/rapidjson/allocators.h:436
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    return static_cast<T*>(a.Realloc(old_p, old_n * sizeof(T), new_n * sizeof(T)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/rapidjson/allocators.h:437
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        RAPIDJSON_ASSERT(static_cast<std::ptrdiff_t>(sizeof(T) * count) <= (stackEnd_ - stackTop_));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/include/rapidjson/internal/stack.h:131
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/perftest/schematest.cpp:30
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"            for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/perftest/perftest.h:83
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"            for (size_t j = 0; j < sizeof(typesfilenames) / sizeof(typesfilenames[0]); j++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/perftest/perftest.h:137
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"                for (size_t i = 0; i < sizeof(typespaths) / sizeof(typespaths[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/perftest/perftest.h:139
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/istreamwrappertest.cpp:115
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/schematest.cpp:2009
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    for (size_t i = 0; i < sizeof(filenames) / sizeof(filenames[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/schematest.cpp:2210
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/filestreamtest.cpp:36
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        for (size_t i = 0; i < sizeof(abcde_paths) / sizeof(abcde_paths[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/filestreamtest.cpp:61
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        EXPECT_EQ(sizeof(e) / sizeof(int), handler.LogCount);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/readertest.cpp:1579
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        EXPECT_EQ(sizeof(e) / sizeof(int), handler.LogCount);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/readertest.cpp:1614
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"            EXPECT_TRUE(oldLogCount < sizeof(e) / sizeof(int)) << ""overrun"";
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/readertest.cpp:1649
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        EXPECT_EQ(sizeof(e) / sizeof(int), handler.LogCount) << ""handler invoked wrong number of times"";
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/readertest.cpp:1657
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/jsoncheckertest.cpp:31
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/documenttest.cpp:165
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    for (size_t i = 0; i < sizeof(sources) / sizeof(sources[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/pointertest.cpp:424
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"#define NAME(s) { s, static_cast<SizeType>(sizeof(s) / sizeof(s[0]) - 1), kPointerInvalidIndex }
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/pointertest.cpp:447
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    Pointer p(kTokens, sizeof(kTokens) / sizeof(kTokens[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/pointertest.cpp:456
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        Pointer p(kTokens, sizeof(kTokens) / sizeof(kTokens[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/pointertest.cpp:485
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        Pointer p(kTokens, sizeof(kTokens) / sizeof(kTokens[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/pointertest.cpp:524
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    for (i = 0; i < sizeof(pointers) / sizeof(pointers[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/pointertest.cpp:1664
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        EXPECT_TRUE(it->second < sizeof(pointers) / sizeof(pointers[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/pointertest.cpp:1672
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        EXPECT_TRUE(i < sizeof(ordered_pointers) / sizeof(ordered_pointers[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/pointertest.cpp:1674
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        for (size_t i = 0; i < sizeof(paths) / sizeof(paths[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/unittest/encodedstreamtest.cpp:53
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        static const ValueType v(s, static_cast<SizeType>(sizeof(s) / sizeof(Ch) - 1));\
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/schema.h:1123
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"            RegexType* r = new (allocator_->Malloc(sizeof(RegexType))) RegexType(value.GetString(), allocator_);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/schema.h:1246
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        static const StringRefType v(s, static_cast<SizeType>(sizeof(s) / sizeof(Ch) - 1)); \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/schema.h:2320
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        ISchemaValidator* sv = new (GetStateAllocator().Malloc(sizeof(GenericSchemaValidator))) GenericSchemaValidator(*schemaDocument_, root, documentStack_.template Bottom<char>(), documentStack_.GetSize(),
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/schema.h:2442
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        return new (GetStateAllocator().Malloc(sizeof(HasherType))) HasherType(&GetStateAllocator());
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/schema.h:2458
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        static const Pointer p(kTokens, sizeof(kTokens) / sizeof(kTokens[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/pointer.h:159
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"            SetElementsPointer(reinterpret_cast<GenericValue*>(allocator.Realloc(GetElementsPointer(), data_.a.capacity * sizeof(GenericValue), newCapacity * sizeof(GenericValue))));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/document.h:1682
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"            *newMap = new (allocator.Malloc(sizeof(Map))) Map(MapLess(), allocator);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/document.h:2180
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    RAPIDJSON_NOEXCEPT_ASSERT(old_n <= SIZE_MAX / sizeof(T) && new_n <= SIZE_MAX / sizeof(T));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/allocators.h:436
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"    return static_cast<T*>(a.Realloc(old_p, old_n * sizeof(T), new_n * sizeof(T)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/allocators.h:437
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        if (RAPIDJSON_UNLIKELY(static_cast<std::ptrdiff_t>(sizeof(T) * count) > (stackEnd_ - stackTop_)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/internal/stack.h:118
36569e72745497811f09c06c33b561bf1854a425f8a0613728675e06a341733353c6564829a56ec011c106ab4733bebe4eabba3bfc6c84786191bc973c747b5c,"        RAPIDJSON_ASSERT(static_cast<std::ptrdiff_t>(sizeof(T) * count) <= (stackEnd_ - stackTop_));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/include/rapidjson/internal/stack.h:131
5d66f8a78fde4577e957941664d7692f2909ca3d5fb5535184e718142038deaf339ed51abc83ae943224e35d0005ddccd5717a926e4238bdd7686751613c1769,"        CryptGenRandom(hp, sizeof(rb), rb);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/fn_numbers.cpp:35
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"			for (i = 0; i < sizeof(req_buf) / sizeof(req_buf[0]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/include/getgrgid_r.c:232
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		fprintf(stderr, ""%d: lxc.prlimit returned wrong value: %d %s not %d %s\n"", __LINE__, ret, v3, (int)sizeof(ALL_LIMITS)-1, ALL_LIMITS);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/tests/get_item.c:318
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		fprintf(stderr, ""%d: lxc.prlimit returned wrong value: %d %s not %d %s\n"", __LINE__, ret, v3, (int)sizeof(LIMIT_STACK)-1, LIMIT_STACK);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/tests/get_item.c:335
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		fprintf(stderr, ""%d: lxc.sysctl returned wrong value: %d %s not %d %s\n"", __LINE__, ret, v3, (int)sizeof(ALL_SYSCTLS) - 1, ALL_SYSCTLS);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/tests/get_item.c:390
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		fprintf(stderr, ""%d: lxc.sysctl returned wrong value: %d %s not %d %s\n"", __LINE__, ret, v3, (int)sizeof(SYSCTL_SOMAXCONN) - 1, SYSCTL_SOMAXCONN);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/tests/get_item.c:407
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		fprintf(stderr, ""%d: lxc.proc returned wrong value: %d %s not %d %s\n"", __LINE__, ret, v3, (int)sizeof(ALL_PROCS) - 1, ALL_PROCS);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/tests/get_item.c:462
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		fprintf(stderr, ""%d: lxc.proc returned wrong value: %d %s not %d %s\n"", __LINE__, ret, v3, (int)sizeof(PROC_OOM_SCORE_ADJ) - 1, PROC_OOM_SCORE_ADJ);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/tests/get_item.c:479
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	ret = strnprintf(log, sizeof(log), ""%s/%s.log"", opts->user->directory, opts->action);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/criu.c:254
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"				ret = strnprintf(eth, sizeof(eth), ""eth%d"", netnr);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/criu.c:517
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	ret = lxc_make_abstract_socket_name(path, sizeof(path), name, lxcpath, NULL, suffix);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/commands.c:2062
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	ret = strnprintf(path, sizeof(path), ""%s/%s/lxc_snapshots"", c0->config_path, c0->name);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/lxccontainer.c:2701
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	ret = strnprintf(path, sizeof(path), ""%s/%s/lxc_rdepends"", c->config_path, c->name);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/lxccontainer.c:3535
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	ret = strnprintf(path, sizeof(path), ""%s/%s/ts"", snappath, name);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/lxccontainer.c:4274
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		ret = strnprintf(path, sizeof(path), ""%s%s"", c->lxc_conf->shmount.path_cont, suff);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/lxccontainer.c:5106
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	ret = strnprintf(status, sizeof(status), ""/proc/%d/status"", pid);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/utils.c:1286
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	return lxc_write_nointr(fd, &pid, sizeof(pid_t)) == sizeof(pid_t);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/attach.c:149
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	return lxc_read_nointr(fd, pid, sizeof(pid_t)) == sizeof(pid_t);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/attach.c:154
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		memcpy(&buf[at], "")"", sizeof("")""));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/lsm/apparmor.c:740
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	monitor_len = strnprintf(monitor, sizeof(monitor), ""%d"", handler->monitor_pid);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/cgroups/cgfsng.c:1161
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		transient_len = strnprintf(transient, sizeof(transient), ""%d"", handler->transient_pid);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lxc/cgroups/cgfsng.c:1166
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (i = 0; i < sizeof(mountinfo) / sizeof(mountinfo[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/tests/lxc-test-utils.c:183
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (i = 0; i < sizeof(mountinfo) / sizeof(mountinfo[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/tests/lxc-test-utils.c:194
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		for (i = 0; (size_t)i < (sizeof(signals) / sizeof(signals[0])); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/tests/lxc-test-utils.c:554
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		for (i = 0; (size_t)i < (sizeof(signals) / sizeof(signals[0])); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/tests/lxc-test-utils.c:566
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t i = 0; i < sizeof(dev_symlinks) / sizeof(dev_symlinks[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/conf.c:894
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t i = 0; i < sizeof(lxc_devices) / sizeof(lxc_devices[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/conf.c:1320
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (i = 0; i < sizeof(limit_opt) / sizeof(limit_opt[0]); ++i)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/conf.c:3255
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		if (lxc_write_nointr(status_pipe, &status, sizeof(status)) != sizeof(status))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/criu.c:1150
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (retry = 0; retry < sizeof(backoff_ms) / sizeof(backoff_ms[0]); retry++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/monitor.c:205
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"#define __type_half_max(type) ((type)1 << (8*sizeof(type) - 1 - is_signed_type(type)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/compiler.h:49
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t i = 0; i < sizeof(veth_mode) / sizeof(veth_mode[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/confile_utils.c:501
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t i = 0; i < sizeof(veth_mode) / sizeof(veth_mode[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/confile_utils.c:514
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t i = 0; i < sizeof(macvlan_mode) / sizeof(macvlan_mode[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/confile_utils.c:536
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t i = 0; i < sizeof(macvlan_mode) / sizeof(macvlan_mode[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/confile_utils.c:549
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t i = 0; i < sizeof(ipvlan_mode) / sizeof(ipvlan_mode[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/confile_utils.c:570
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t i = 0; i < sizeof(ipvlan_mode) / sizeof(ipvlan_mode[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/confile_utils.c:583
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t i = 0; i < sizeof(ipvlan_isolation) / sizeof(ipvlan_isolation[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/confile_utils.c:604
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t i = 0; i < sizeof(ipvlan_isolation) / sizeof(ipvlan_isolation[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/confile_utils.c:617
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (size_t sig = 0; sig < (sizeof(signals) / sizeof(signals[0])); sig++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/start.c:357
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (i = 0; i < sizeof(ovl_dirs) / sizeof(ovl_dirs[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/storage/overlay.c:685
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	for (i = 0; i < sizeof(fsfile) / sizeof(fsfile[0]); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/storage/storage_utils.c:285
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"	if (lxc_write_nointr(fd, &slen, sizeof(slen)) != sizeof(slen))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/tools/lxc_ls.c:1086
26453fd6e933794b2f2759a3d7faf6cd2d6c8566757fd19e4b08bf278ecd77c66e557a21a47ecd6019f74b84f120b092daa503191ee2c6b7ae174bd9d823a80f,"		memcpy(&buf[at], "")"", sizeof("")""));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lxc/lsm/apparmor.c:740
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"        strncat(outfn, ""."", sizeof(outfn) - strlen(outfn) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/samples/dcraw_emu.cpp:627
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"        strncat(outfn, outext, sizeof(outfn) - strlen(outfn) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/samples/dcraw_emu.cpp:628
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"      qsort(badCols.data(), badCols.size(), sizeof(unsigned), unsigned_cmp);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/decoders/load_mfbacks.cpp:461
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"         i < int(sizeof(imgdata.color.cblack)/sizeof(imgdata.color.cblack[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/decoders/fp_dng.cpp:509
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"    (sizeof(_rawspeed_data_xml) / sizeof(_rawspeed_data_xml[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/tables/cameralist.cpp:20
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"    memmove(model, model+1, MIN(sizeof(model)-1,strlen(model)));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/metadata/hasselblad_model.cpp:97
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"        strncat(outfn, ""."", sizeof(outfn) - strlen(outfn) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/samples/dcraw_emu.cpp:627
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"        strncat(outfn, outext, sizeof(outfn) - strlen(outfn) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/samples/dcraw_emu.cpp:628
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"  strncat(buf, string, LIM(sizeof(buf) - strbuflen(buf) - 1, 0, sizeof(buf)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal/dcraw_defs.h:31
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"         i < int(sizeof(imgdata.color.cblack)/sizeof(imgdata.color.cblack[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/decoders/fp_dng.cpp:509
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"    (sizeof(_rawspeed_data_xml) / sizeof(_rawspeed_data_xml[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/tables/cameralist.cpp:20
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"  return (sizeof(static_camera_list) / sizeof(static_camera_list[0])) - 1;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/tables/cameralist.cpp:1259
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"#define _ARR_SZ(a) (sizeof(a)/sizeof(a[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/tables/wblists.cpp:18
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"    for(int i = 0; i < int(sizeof(alist)/sizeof(alist[0])); i++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/metadata/identify.cpp:163
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"  for (int q = 0; q < int(sizeof(const_table) / sizeof(const_table[0])); q++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/metadata/identify.cpp:414
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"    memmove(model, model+1, MIN(sizeof(model)-1,strlen(model)));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/metadata/hasselblad_model.cpp:97
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"#define numel (sizeof(code) / sizeof(code[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/metadata/pentax.cpp:120
1bded9228eca0f04b869bdd262c16ce56cef42b5e71fbb864afb330d0454d3f5758bbb7113af1b808f96aef369979c72531cfbb53ca93e4f6355e2c7077294c1,"    if (nWB <= int(sizeof(icWBCCTC) / sizeof(icWBCCTC[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/metadata/pentax.cpp:469
4c5697ece60c5ef5eaa8eae2b7c3d7a65281da8bc784d091e48f86d771f7cf88db298b8e26c83d27b463a8a01b50aea151c7b9e0de077891599d56d2c0047e0c,"      size += channels*(120*sizeof(opus_val32) + sizeof(opus_val32));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/opus_multistream_encoder.c:424
4c5697ece60c5ef5eaa8eae2b7c3d7a65281da8bc784d091e48f86d771f7cf88db298b8e26c83d27b463a8a01b50aea151c7b9e0de077891599d56d2c0047e0c,"#define silk_abs_int(a)                     (((a) ^ ((a) >> (8 * sizeof(a) - 1))) - ((a) >> (8 * sizeof(a) - 1)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/silk/SigProc_FIX.h:589
4c5697ece60c5ef5eaa8eae2b7c3d7a65281da8bc784d091e48f86d771f7cf88db298b8e26c83d27b463a8a01b50aea151c7b9e0de077891599d56d2c0047e0c,"#define RAND_SAMPLE(a) (a[fast_rand() % sizeof(a)/sizeof(a[0])])
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_opus_encode.c:55
4c5697ece60c5ef5eaa8eae2b7c3d7a65281da8bc784d091e48f86d771f7cf88db298b8e26c83d27b463a8a01b50aea151c7b9e0de077891599d56d2c0047e0c,"      size += channels*(120*sizeof(opus_val32) + sizeof(opus_val32));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/opus_multistream_encoder.c:424
4c5697ece60c5ef5eaa8eae2b7c3d7a65281da8bc784d091e48f86d771f7cf88db298b8e26c83d27b463a8a01b50aea151c7b9e0de077891599d56d2c0047e0c,"#define PUSH(stack, size, type) (VALGRIND_MAKE_MEM_NOACCESS(stack, global_stack_top-stack),ALIGN((stack),sizeof(type)/sizeof(char)),VALGRIND_MAKE_MEM_UNDEFINED(stack, ((size)*sizeof(type)/sizeof(char))),(stack)+=(2*(size)*sizeof(type)/sizeof(char)),(type*)((stack)-(2*(size)*sizeof(type)/sizeof(char))))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/celt/stack_alloc.h:137
4c5697ece60c5ef5eaa8eae2b7c3d7a65281da8bc784d091e48f86d771f7cf88db298b8e26c83d27b463a8a01b50aea151c7b9e0de077891599d56d2c0047e0c,"#define PUSH(stack, size, type) (ALIGN((stack),sizeof(type)/sizeof(char)),(stack)+=(size)*(sizeof(type)/sizeof(char)),(type*)((stack)-(size)*(sizeof(type)/sizeof(char))))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/celt/stack_alloc.h:144
862eea4da9059c31c8db5f3955162370bed58e4eb523cf08da22bcbeb56313d75215e9377f8ec4cbdaa753cdc09adcf88801b6bdda4c65e60e1eb2a7a789e2e6,"  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/swig/libwebp_python_wrap.c:841
862eea4da9059c31c8db5f3955162370bed58e4eb523cf08da22bcbeb56313d75215e9377f8ec4cbdaa753cdc09adcf88801b6bdda4c65e60e1eb2a7a789e2e6,"          *cptr = (char *)memcpy(malloc((len + 1)*sizeof(char)), cstr, sizeof(char)*(len + 1));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/swig/libwebp_python_wrap.c:3110
862eea4da9059c31c8db5f3955162370bed58e4eb523cf08da22bcbeb56313d75215e9377f8ec4cbdaa753cdc09adcf88801b6bdda4c65e60e1eb2a7a789e2e6,"          *cptr = (char *)memcpy(malloc((len + 1)*sizeof(char)), cstr, sizeof(char)*(len + 1));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/swig/libwebp_python_wrap.c:3148
862eea4da9059c31c8db5f3955162370bed58e4eb523cf08da22bcbeb56313d75215e9377f8ec4cbdaa753cdc09adcf88801b6bdda4c65e60e1eb2a7a789e2e6,"    if (BITS != 8 * sizeof(bit_t)) bits >>= (8 * sizeof(bit_t) - BITS);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/utils/bit_reader_inl_utils.h:97
862eea4da9059c31c8db5f3955162370bed58e4eb523cf08da22bcbeb56313d75215e9377f8ec4cbdaa753cdc09adcf88801b6bdda4c65e60e1eb2a7a789e2e6,"      (WEBP_ALIGN_CST + sizeof(uint32_t) - 1) / sizeof(uint32_t);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/enc/vp8l_enc.c:1497
862eea4da9059c31c8db5f3955162370bed58e4eb523cf08da22bcbeb56313d75215e9377f8ec4cbdaa753cdc09adcf88801b6bdda4c65e60e1eb2a7a789e2e6,"          *cptr = (char *)memcpy(malloc((len + 1)*sizeof(char)), cstr, sizeof(char)*(len + 1));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/swig/libwebp_python_wrap.c:3110
862eea4da9059c31c8db5f3955162370bed58e4eb523cf08da22bcbeb56313d75215e9377f8ec4cbdaa753cdc09adcf88801b6bdda4c65e60e1eb2a7a789e2e6,"          *cptr = (char *)memcpy(malloc((len + 1)*sizeof(char)), cstr, sizeof(char)*(len + 1));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/swig/libwebp_python_wrap.c:3148
862eea4da9059c31c8db5f3955162370bed58e4eb523cf08da22bcbeb56313d75215e9377f8ec4cbdaa753cdc09adcf88801b6bdda4c65e60e1eb2a7a789e2e6,"    for (i = 0; i < sizeof(kSlowModels) / sizeof(kSlowModels[0]); ++i) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/dsp/cpu.c:118
862eea4da9059c31c8db5f3955162370bed58e4eb523cf08da22bcbeb56313d75215e9377f8ec4cbdaa753cdc09adcf88801b6bdda4c65e60e1eb2a7a789e2e6,"    if (BITS != 8 * sizeof(bit_t)) bits >>= (8 * sizeof(bit_t) - BITS);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/utils/bit_reader_inl_utils.h:97
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"                rd_snprintf(topic, sizeof(topic), ""%s_%d"", base_topic, i);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/0045-subscribe_update.c:397
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"        hdr = rd_calloc(1, sizeof(*hdr) + (sizeof(*hdr->counts) * countsLen));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rdhdrhistogram.c:131
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"                        srcPatternLength = LZ4HC_countPattern(ip+sizeof(pattern), iHighLimit, pattern) + sizeof(pattern);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lz4hc.c:345
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"                        size_t forwardPatternLength = LZ4HC_countPattern(matchPtr+sizeof(pattern), iLimit, pattern) + sizeof(pattern);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lz4hc.c:356
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"        rsal = rd_calloc(1, sizeof(*rsal) + (sizeof(*rsal->rsal_addr) * cnt));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rdaddr.c:216
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"        memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rdxxhash.c:509
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"        memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rdxxhash.c:1047
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"                rd_snprintf(topic, sizeof(topic), ""topic%d"", i + 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rdkafka_sticky_assignor.c:2676
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"                        rd_snprintf(topic, sizeof(topic), ""topic%d"", j);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rdkafka_sticky_assignor.c:2691
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"                rd_snprintf(topic, sizeof(topic), ""topic%d"", i + 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rdkafka_sticky_assignor.c:2800
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"                rd_snprintf(topic, sizeof(topic), ""topic%d"", i + 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rdkafka_sticky_assignor.c:2863
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"                        rd_snprintf(key, sizeof(key), ""key%d"", i);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/rdmap.c:413
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"#define RD_UVARINT_ENC_SIZEOF(TYPE) (sizeof(TYPE) + 1 + (sizeof(TYPE) / 7))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/rdvarint.h:152
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"        hdr = rd_calloc(1, sizeof(*hdr) + (sizeof(*hdr->counts) * countsLen));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/rdhdrhistogram.c:131
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"#define RD_ARRAY_SIZE(A)          (sizeof((A)) / sizeof(*(A)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/rd.h:216
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"#define ARRAY_SIZE(x) (sizeof(x) / sizeof(*(x)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/snappy_compat.h:94
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"                        srcPatternLength = LZ4HC_countPattern(ip+sizeof(pattern), iHighLimit, pattern) + sizeof(pattern);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lz4hc.c:345
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"                        size_t forwardPatternLength = LZ4HC_countPattern(matchPtr+sizeof(pattern), iLimit, pattern) + sizeof(pattern);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lz4hc.c:356
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"        rsal = rd_calloc(1, sizeof(*rsal) + (sizeof(*rsal->rsal_addr) * cnt));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/rdaddr.c:216
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"        memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/rdxxhash.c:509
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"        memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/rdxxhash.c:1047
609ea15465852a32506db20cfc08700ee80e2a5d923bfe59426dacc13c38bdc5453c32266c68c885aa9f4303e7726a996e577d4d19e9e21fcff79e8a9f85646f,"#define nelem(a) (sizeof(a) / sizeof(a)[0])
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/regexp.c:21
0eb5d6b837016f0082c90caaad74dbdef0273b2394b7762cf727acee1aacf3f26c475fc7bcf8bd22a27de699de28808254e67ed73973c3ab0a046f0e5998b313,"    int64_t m = (max_mem - sizeof(Prog)) / sizeof(Prog::Inst);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/re2/compile.cc:1087
0eb5d6b837016f0082c90caaad74dbdef0273b2394b7762cf727acee1aacf3f26c475fc7bcf8bd22a27de699de28808254e67ed73973c3ab0a046f0e5998b313,"          sizeof(PCRE), sizeof(RE2), sizeof(Prog), sizeof(Prog::Inst));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/re2/testing/regexp_benchmark.cc:119
0eb5d6b837016f0082c90caaad74dbdef0273b2394b7762cf727acee1aacf3f26c475fc7bcf8bd22a27de699de28808254e67ed73973c3ab0a046f0e5998b313,"                 (sizeof(int)+sizeof(int)) * 2;  // q0, q1
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/re2/dfa.cc:444
0eb5d6b837016f0082c90caaad74dbdef0273b2394b7762cf727acee1aacf3f26c475fc7bcf8bd22a27de699de28808254e67ed73973c3ab0a046f0e5998b313,"          sizeof(PCRE), sizeof(RE2), sizeof(Prog), sizeof(Prog::Inst));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/re2/testing/regexp_benchmark.cc:119
0eb5d6b837016f0082c90caaad74dbdef0273b2394b7762cf727acee1aacf3f26c475fc7bcf8bd22a27de699de28808254e67ed73973c3ab0a046f0e5998b313,"#define arraysize(array) (sizeof(array)/sizeof((array)[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/util/util.h:8
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/readclause.c:101
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/readclause.c:243
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/readclause.c:276
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/readclause.c:309
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/readclause.c:339
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/readclause.c:372
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/readclause.c:448
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/readclause.c:478
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/readclause.c:508
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	p = (PHONEME_TAB *)calloc(sizeof(PHONEME_TAB), N_PHONEME_TAB);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/libespeak-ng/compiledata.c:2378
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"				memcpy(phoneme_tab2, phoneme_tab_list2[ix].phoneme_tab_ptr, sizeof(PHONEME_TAB)*N_PHONEME_TAB);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/libespeak-ng/compiledata.c:2399
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	MAKE_MEM_UNDEFINED(&ssml_stack[1], sizeof(ssml_stack) - sizeof(ssml_stack[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/libespeak-ng/readclause.c:1000
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	MAKE_MEM_UNDEFINED(&param_stack[1], sizeof(param_stack) - sizeof(param_stack[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/libespeak-ng/readclause.c:1002
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/readclause.c:101
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/readclause.c:243
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/readclause.c:276
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/readclause.c:309
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/readclause.c:339
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/readclause.c:372
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/readclause.c:448
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/readclause.c:478
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	assert(charix_top == (sizeof(retix)/sizeof(retix[0])) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/readclause.c:508
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	if (read(mbr_proc_stat, buffer, sizeof(buffer)) != sizeof(buffer))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/libespeak-ng/mbrowrap.c:421
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	MAKE_MEM_UNDEFINED(&ssml_stack[1], sizeof(ssml_stack) - sizeof(ssml_stack[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/libespeak-ng/readclause.c:1000
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	MAKE_MEM_UNDEFINED(&param_stack[1], sizeof(param_stack) - sizeof(param_stack[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/libespeak-ng/readclause.c:1002
8c0043627ba742c664b5c3bc6fff195ce3aa88f2e8232ecf326137ca1d445ebc3671ec4a8c8d3bec6b2a4348ea28a4dd08d5d69aa8a37d912472a8798be16b92,"	if ((unsigned int)s >= (sizeof(scripts)/sizeof(scripts[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/ucd-tools/src/tostring.c:267
5848022c4b8c44d5316515e8bafb8c1022fc310c5a4b7aea50cc1c9a0f3c8771eacd40d8d85fdf34518a1e2016f50de6cb9d36565f924177fccd8566933b6714,"        (size + sizeof(void *) - 1ul) & ~(sizeof(void *) - 1ul);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lib/lwan-coro.c:530
5848022c4b8c44d5316515e8bafb8c1022fc310c5a4b7aea50cc1c9a0f3c8771eacd40d8d85fdf34518a1e2016f50de6cb9d36565f924177fccd8566933b6714,"        entry = bsearch(&k, la->base, la->elements, sizeof(k), key_value_compare);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/lib/lwan-request.c:1598
5848022c4b8c44d5316515e8bafb8c1022fc310c5a4b7aea50cc1c9a0f3c8771eacd40d8d85fdf34518a1e2016f50de6cb9d36565f924177fccd8566933b6714,"        (size + sizeof(void *) - 1ul) & ~(sizeof(void *) - 1ul);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lib/lwan-coro.c:530
5848022c4b8c44d5316515e8bafb8c1022fc310c5a4b7aea50cc1c9a0f3c8771eacd40d8d85fdf34518a1e2016f50de6cb9d36565f924177fccd8566933b6714,"    (ZERO_IF_IS_ARRAY(array) | sizeof(array) / sizeof(array[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lib/lwan.h:54
5848022c4b8c44d5316515e8bafb8c1022fc310c5a4b7aea50cc1c9a0f3c8771eacd40d8d85fdf34518a1e2016f50de6cb9d36565f924177fccd8566933b6714,"    if (pthread_setaffinity_np(thread->self, sizeof(set), &set))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/lib/lwan-thread.c:1120
5848022c4b8c44d5316515e8bafb8c1022fc310c5a4b7aea50cc1c9a0f3c8771eacd40d8d85fdf34518a1e2016f50de6cb9d36565f924177fccd8566933b6714,"            if (r < (ssize_t)(sizeof(client->buffer)-client->buffer_offset-1))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/bin/tools/weighttp.c:945
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	SSL_CTX_use_certificate_ASN1(ctx, sizeof(SSL_CERT_ASN1), SSL_CERT_ASN1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/examples/embed_certificate/ec_example.c:236
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		temppathlen = GetTempPathA(sizeof(temppath), temppath);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/examples/embedded_c/embedded_c.c:322
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		strncat(path, ""/"", sizeof(path) - strlen(path) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/main.c:942
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		strncat(path, option_value, sizeof(path) - strlen(path) - 1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/main.c:943
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		strncat(path, "" "", sizeof(path) - 1 - strlen(path));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/main.c:2797
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		strncat(path, service_magic_argument, sizeof(path) - 1 - strlen(path));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/main.c:2798
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	GetFullPathNameA(dir, sizeof(full_dir), full_dir, NULL);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/civetweb.c:5555
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	mg_base64_encode((unsigned char *)sha, sizeof(sha), b64_sha, &dst_len);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/civetweb.c:13007
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        correctbytes((char *)&d, sizeof(d), h.endian);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/lua_struct.c:327
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(zBuf), zBuf, ""%02d:%02d:%02d"", x.h, x.m, (int)x.s);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:22676
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(zBuf), zBuf, ""%04d-%02d-%02d"", x.Y, x.M, x.D);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:22695
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    if( ALWAYS(nByte>(signed)sizeof(unsigned)) ) nByte = sizeof(unsigned int);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:23229
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( pInt[nReserve/sizeof(int)]==(int)REARGUARD );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:24010
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( (sizeof(Mem5Link)&(sizeof(Mem5Link)-1))==0 );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:25532
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        sqlite3_snprintf(sizeof(zBuf),zBuf,""invalid(%d)"", pWin->eExclude);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:29824
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"          sqlite3_snprintf(sizeof(zOp2),zOp2,"" op2=0x%02x"",pExpr->op2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:29891
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        sqlite3_snprintf(sizeof(zBuf),zBuf,""0x%02x"",pExpr->op2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:30046
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_randomness(sizeof(r), &r);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:39303
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      assert( sizeof(t)+sizeof(randomnessPid)<=(size_t)nBuf );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:40064
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(errmsg),errmsg,""path error (len %d)"",(int)pathLen);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:40598
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(errmsg),errmsg,""read error (len %d)"",(int)readLen);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:40604
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""create failed (%d)"", errno);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:40610
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""write failed (%d)"", errno);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:40614
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""rename failed (%d)"", errno);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:40618
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  winGetLastErrorMsg(lastErrno, sizeof(zMsg), zMsg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:43774
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_randomness(sizeof(lk), &lk);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:44857
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        sqlite3_randomness(sizeof(i), &i);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:48836
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  memset(&pPgHdr->pDirty, 0, sizeof(PgHdr) - offsetof(PgHdr,pDirty));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:49348
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  sqlite3_randomness(sizeof(pPager->cksumInit), &pPager->cksumInit);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:53198
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  memcpy(pPtr, &pPager, sizeof(pPager));  pPtr += sizeof(pPager);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:56513
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  walChecksumBytes(1, (u8*)&h1, sizeof(h1)-sizeof(h1.aCksum), 0, aCksum);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:61655
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      rc = sqlite3PagerReadFileheader(pBt->pPager,sizeof(zDbHeader),zDbHeader);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:66966
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  vdbeMemRenderNum(sizeof(zBuf), zBuf, p);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:75998
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  memset(&p->aOp, 0, sizeof(Vdbe)-offsetof(Vdbe,aOp));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:77768
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        sqlite3_snprintf(sizeof(zAlt), zAlt, ""r[P2] = (%s)"", zSynopsis+3);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:79227
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        sqlite3_snprintf(sizeof(zAlt), zAlt, ""if %s goto P2"", zSynopsis+3);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:79229
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(z), z, ""%s"", pOp->p4.z);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:79964
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      sqlite3_randomness(sizeof(iRandom), &iRandom);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:80510
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    assert( sizeof(r1)==sizeof(t2) && memcmp(&r1, &t2, sizeof(r1))==0 );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:81620
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        sqlite3_randomness(sizeof(v), &v);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:90164
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(zErr),zErr, ""no such database: %s"", zName);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:109783
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(zErr),zErr, ""cannot detach database %s"", zName);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:109787
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(zErr),zErr, ""database %s is locked"", zName);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:109791
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(zTab),zTab,""sqlite_stat%d"",i);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:113323
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    p = (Schema *)sqlite3BtreeSchema(pBt, sizeof(Schema), sqlite3SchemaClear);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:116064
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  sqlite3_randomness(sizeof(r), &r);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:117565
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      sqlite3_snprintf(sizeof(zBuf), zBuf, ""%!.15g"", r1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:118093
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        sqlite3_snprintf(sizeof(zBuf), zBuf, ""%!.20e"", r1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:118096
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  int nExtra = (N+X)*(sizeof(CollSeq*)+1) - sizeof(CollSeq*);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:130596
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      if( cnt>3 ) sqlite3_randomness(sizeof(cnt), &cnt);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:131332
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      sqlite3_snprintf(sizeof(zLeft),zLeft,""left=%d"", pTerm->leftCursor);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:147375
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      assert( iLookAhead<sizeof(yyFallback)/sizeof(yyFallback[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:156518
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        assert( j<(int)(sizeof(yy_lookahead)/sizeof(yy_lookahead[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:156535
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      assert( i>=0 && i<sizeof(yy_action)/sizeof(yy_action[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:156550
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( yyruleno<sizeof(yyRuleInfoLhs)/sizeof(yyRuleInfoLhs[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:158965
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( iToken<(int)(sizeof(yyFallback)/sizeof(yyFallback[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:159253
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(zBuf), zBuf, ""SQLITE_UNKNOWN(%d)"", origRc);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:162534
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  sqlite3_snprintf(sizeof(zMsg), zMsg, ""database corruption page %d"", pgno);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:164608
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  sqlite3_snprintf(sizeof(zRnd), zRnd, ""rbu_vfs_%d"", rnd);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:199680
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  sqlite3_snprintf(sizeof(aBuf)-1, aBuf, ""%d"", iVal);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:204389
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      assert( iLookAhead<sizeof(fts5yyFallback)/sizeof(fts5yyFallback[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:210073
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        assert( j<(int)(sizeof(fts5yy_lookahead)/sizeof(fts5yy_lookahead[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:210090
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      assert( i>=0 && i<sizeof(fts5yy_action)/sizeof(fts5yy_action[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:210105
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( fts5yyruleno<sizeof(fts5yyRuleInfoLhs)/sizeof(fts5yyRuleInfoLhs[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:210523
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( iToken<(int)(sizeof(fts5yyFallback)/sizeof(fts5yyFallback[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:210809
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"          fts5BufferAppendBlob(&p->rc, &buf, sizeof(aHdr), aHdr);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/sqlite3.c:220518
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src-separate/duk_debugger.c:207
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src-separate/duk_debugger.c:778
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src-separate/duk_debugger.c:806
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src-separate/duk_hobject_pc2line.c:35
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src-separate/duk_heap_alloc.c:537
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src-noline/duktape.c:36991
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src-noline/duktape.c:37562
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src-noline/duktape.c:37590
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src-noline/duktape.c:41253
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src-noline/duktape.c:46870
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src/duktape.c:37073
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src/duktape.c:37644
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src/duktape.c:37672
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src/duktape.c:41343
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.5.2/src/duktape.c:46972
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b," LoadBlock(S,s+sizeof(char),LUAC_HEADERSIZE-sizeof(char));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/lua-5.2.4/src/lundump.c:196
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, sizeof(searchers)/sizeof(searchers[0]) - 1, 0);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/lua-5.2.4/src/loadlib.c:680
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, sizeof(searchers)/sizeof(searchers[0]) - 1, 0);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/lua-5.3.6/src/loadlib.c:738
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src-separate/duk_debugger.c:207
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src-separate/duk_debugger.c:778
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src-separate/duk_debugger.c:806
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src-separate/duk_hobject_pc2line.c:35
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src-separate/duk_heap_alloc.c:537
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src-noline/duktape.c:37198
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src-noline/duktape.c:37769
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src-noline/duktape.c:37797
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src-noline/duktape.c:41472
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src-noline/duktape.c:47121
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src/duktape.c:37280
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src/duktape.c:37851
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src/duktape.c:37879
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src/duktape.c:41562
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/duktape-1.8.0/src/duktape.c:47223
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, sizeof(loaders)/sizeof(loaders[0]) - 1, 0);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/lua-5.1.5/src/loadlib.c:642
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, sizeof(searchers)/sizeof(searchers[0]) - 1, 0);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/third_party/lua-5.4.3/src/loadlib.c:715
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	mask_data(in, sizeof(out), 0, out);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/private.c:1421
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	(void)GetCurrentDirectoryA(sizeof(wd), wd);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:211
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert_int_le(opt_idx, (int)(sizeof(OPTIONS) / sizeof(OPTIONS[0])));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:656
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 1] == NULL);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:657
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 2] == NULL);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:658
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert_int_le(opt_idx, (int)(sizeof(OPTIONS) / sizeof(OPTIONS[0])));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:782
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 1] == NULL);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:783
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 2] == NULL);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:784
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert_int_le(opt_idx, (int)(sizeof(OPTIONS) / sizeof(OPTIONS[0])));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:1350
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 1] == NULL);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:1351
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 2] == NULL);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:1352
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert_int_le(opt_idx, (int)(sizeof(OPTIONS) / sizeof(OPTIONS[0])));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:2706
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 1] == NULL);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:2707
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 2] == NULL);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/unittest/public_server.c:2708
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    for (int i=0; i<(sizeof(options)/sizeof(options[0])-1); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/examples/embedded_cpp/embedded_cpp.cpp:389
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		strncat(path, ""/"", sizeof(path) - strlen(path) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/main.c:942
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		strncat(path, option_value, sizeof(path) - strlen(path) - 1);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/main.c:943
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		strncat(path, "" "", sizeof(path) - 1 - strlen(path));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/main.c:2797
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		strncat(path, service_magic_argument, sizeof(path) - 1 - strlen(path));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/main.c:2798
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define ARRAY_SIZE(array) (sizeof(array) / sizeof(array[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/civetweb.c:504
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"mg_static_assert((sizeof(config_options) / sizeof(config_options[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/civetweb.c:2213
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define MAXALIGN  	(PADDING > sizeof(int) ? PADDING : sizeof(int))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua_struct.c:71
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define ArraySize(X)    ((int)(sizeof(X)/sizeof(X[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:14594
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(zBuf), zBuf, ""%02d:%02d:%02d"", x.h, x.m, (int)x.s);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:22676
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( pInt[nReserve/sizeof(int)]==(int)REARGUARD );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:24010
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( (sizeof(Mem5Link)&(sizeof(Mem5Link)-1))==0 );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:25532
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        sqlite3_snprintf(sizeof(zBuf),zBuf,""invalid(%d)"", pWin->eExclude);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:29824
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:34133
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:34142
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:34169
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    if( i>=sizeof(azDirs)/sizeof(azDirs[0]) ) break;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:39277
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      assert( sizeof(t)+sizeof(randomnessPid)<=(size_t)nBuf );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:40064
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(errmsg),errmsg,""path error (len %d)"",(int)pathLen);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:40598
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(errmsg),errmsg,""read error (len %d)"",(int)readLen);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:40604
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""create failed (%d)"", errno);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:40610
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""write failed (%d)"", errno);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:40614
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""rename failed (%d)"", errno);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:40618
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:42865
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:42874
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:42901
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    for(i=0; i<sizeof(azDirs)/sizeof(azDirs[0]); zDir=azDirs[i++]){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:46473
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    (((BITVEC_SZ-(3*sizeof(u32)))/sizeof(Bitvec*))*sizeof(Bitvec*))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:48510
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  memset(&pPgHdr->pDirty, 0, sizeof(PgHdr) - offsetof(PgHdr,pDirty));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:49348
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=1; i<sizeof(aBucket)/sizeof(aBucket[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:51336
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  walChecksumBytes(1, (u8*)&h1, sizeof(h1)-sizeof(h1.aCksum), 0, aCksum);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:61655
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  memset(&p->aOp, 0, sizeof(Vdbe)-offsetof(Vdbe,aOp));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:77768
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        sqlite3_snprintf(sizeof(zAlt), zAlt, ""r[P2] = (%s)"", zSynopsis+3);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:79227
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    assert( sizeof(r1)==sizeof(t2) && memcmp(&r1, &t2, sizeof(r1))==0 );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:81620
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define YY_NLOOKAHEAD ((int)(sizeof(yy_lookahead)/sizeof(yy_lookahead[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:154533
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      assert( iLookAhead<sizeof(yyFallback)/sizeof(yyFallback[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:156518
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        assert( j<(int)(sizeof(yy_lookahead)/sizeof(yy_lookahead[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:156535
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      assert( i>=0 && i<sizeof(yy_action)/sizeof(yy_action[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:156550
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  if( yyTraceFILE && yyruleno<(int)(sizeof(yyRuleName)/sizeof(yyRuleName[0])) ){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:157479
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( yyruleno<sizeof(yyRuleInfoLhs)/sizeof(yyRuleInfoLhs[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:158965
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( iToken<(int)(sizeof(yyFallback)/sizeof(yyFallback[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:159253
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    sqlite3_snprintf(sizeof(zBuf), zBuf, ""SQLITE_UNKNOWN(%d)"", origRc);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:162534
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define SizeofArray(X) ((int)(sizeof(X)/sizeof(X[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:166594
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; i<sizeof(azName)/sizeof(azName[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:170846
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; i<sizeof(aFunc)/sizeof(aFunc[0]) && rc==SQLITE_OK; i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:188020
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; i<sizeof(aAgg)/sizeof(aAgg[0]) && rc==SQLITE_OK; i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:188026
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; i<sizeof(aMod)/sizeof(aMod[0]) && rc==SQLITE_OK; i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:188034
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; i<sizeof(azName)/sizeof(azName[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:191510
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; i<sizeof(aFunc)/sizeof(aFunc[0]) && rc==SQLITE_OK; i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:194219
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; i<sizeof(aAgg)/sizeof(aAgg[0]) && rc==SQLITE_OK; i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:194230
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; rc==SQLITE_OK && i<(int)(sizeof(scalars)/sizeof(scalars[0])); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:194949
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    for(i=0; i<sizeof(aStmt)/sizeof(aStmt[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:197102
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"# define ArraySize(x) ((int)(sizeof(x) / sizeof(x[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:208537
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define fts5YY_NLOOKAHEAD ((int)(sizeof(fts5yy_lookahead)/sizeof(fts5yy_lookahead[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:209504
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      assert( iLookAhead<sizeof(fts5yyFallback)/sizeof(fts5yyFallback[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:210073
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"        assert( j<(int)(sizeof(fts5yy_lookahead)/sizeof(fts5yy_lookahead[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:210090
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"      assert( i>=0 && i<sizeof(fts5yy_action)/sizeof(fts5yy_action[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:210105
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  if( fts5yyTraceFILE && fts5yyruleno<(int)(sizeof(fts5yyRuleName)/sizeof(fts5yyRuleName[0])) ){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:210320
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( fts5yyruleno<sizeof(fts5yyRuleInfoLhs)/sizeof(fts5yyRuleInfoLhs[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:210523
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  assert( iToken<(int)(sizeof(fts5yyFallback)/sizeof(fts5yyFallback[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:210809
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for(i=0; i<sizeof(azName)/sizeof(azName[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/sqlite3.c:225740
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src-separate/duk_debugger.c:207
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src-separate/duk_debugger.c:778
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src-separate/duk_debugger.c:806
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src-separate/duk_hobject_pc2line.c:35
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src-separate/duk_heap_alloc.c:537
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src-noline/duktape.c:36991
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src-noline/duktape.c:37562
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src-noline/duktape.c:37590
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src-noline/duktape.c:41253
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src-noline/duktape.c:46870
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src/duktape.c:37073
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src/duktape.c:37644
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src/duktape.c:37672
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src/duktape.c:41343
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.5.2/src/duktape.c:46972
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, 0, sizeof(l)/sizeof((l)[0]) - 1)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.2.4/src/lauxlib.h:109
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  L1 = &luaC_newobj(L, LUA_TTHREAD, sizeof(LX), NULL, offsetof(LX, l))->th;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.2.4/src/lstate.c:241
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  for (i = 0; i < sizeof(options)/sizeof(options[0]); i += 2) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.2.4/src/loslib.c:174
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b," LoadBlock(S,s+sizeof(char),LUAC_HEADERSIZE-sizeof(char));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.2.4/src/lundump.c:196
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"            ((v)=cast(t *, luaM_growaux_(L,v,&(size),sizeof(t),limit,e)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.2.4/src/lmem.h:42
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, sizeof(searchers)/sizeof(searchers[0]) - 1, 0);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.2.4/src/loadlib.c:680
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"                                 (sizeof(s)/sizeof(char))-1))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.2.4/src/lstring.h:20
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define LUAC_HEADERSIZE		(sizeof(LUA_SIGNATURE)-sizeof(char)+2+6+sizeof(LUAC_TAIL)-sizeof(char))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.2.4/src/lundump.h:26
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	lua_pushlstring(L, """" s, (sizeof(s)/sizeof(char))-1)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.2.4/src/lua.h:341
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, 0, sizeof(l)/sizeof((l)[0]) - 1)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/lauxlib.h:117
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define sof(e)		(sizeof(e) / sizeof(unsigned int))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/ltablib.c:250
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  check_exp(sizeof((ts)->extra), cast(char *, (ts)) + sizeof(UTString))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/lobject.h:329
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  check_exp(sizeof((u)->ttuv_), (cast(char*, (u)) + sizeof(UUdata)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/lobject.h:369
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  (((sizeof(n) >= sizeof(size_t) && cast(size_t, (n)) + 1 > MAX_SIZET/(e)) \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/lmem.h:31
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"    cast(char *, luaM_realloc_(L, (b), (on)*sizeof(char), (n)*sizeof(char)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/lmem.h:39
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"            ((v)=cast(t *, luaM_growaux_(L,v,&(size),sizeof(t),limit,e)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/lmem.h:54
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, sizeof(searchers)/sizeof(searchers[0]) - 1, 0);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/loadlib.c:738
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"                                 (sizeof(s)/sizeof(char))-1))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/lstring.h:21
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	(sizeof(size_t) < sizeof(int) ? MAX_SIZET : (size_t)(INT_MAX))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/lstrlib.c:49
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define DumpLiteral(s,D)	DumpBlock(s, sizeof(s) - sizeof(char), D)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.3.6/src/ldump.c:37
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src-separate/duk_debugger.c:207
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src-separate/duk_debugger.c:778
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src-separate/duk_debugger.c:806
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src-separate/duk_hobject_pc2line.c:35
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src-separate/duk_heap_alloc.c:537
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src-noline/duktape.c:37198
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src-noline/duktape.c:37769
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src-noline/duktape.c:37797
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src-noline/duktape.c:41472
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src-noline/duktape.c:47121
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"		now = (length > sizeof(dummy) ? sizeof(dummy) : length);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src/duktape.c:37280
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(ptr) >= 1 && sizeof(ptr) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src/duktape.c:37851
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_ASSERT(sizeof(obj) >= 1 && sizeof(obj) <= 16);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src/duktape.c:37879
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	DUK_D(DUK_DPRINT(""sizeof()""));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src/duktape.c:41562
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	curr_offset = (duk_uint_fast32_t) (sizeof(duk_uint32_t) + num_header_entries * sizeof(duk_uint32_t) * 2);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/duktape-1.8.0/src/duktape.c:47223
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"            ((v)=cast(t *, luaM_growaux_(L,v,&(size),sizeof(t),limit,e)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.1.5/src/lmem.h:35
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, sizeof(loaders)/sizeof(loaders[0]) - 1, 0);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.1.5/src/loadlib.c:642
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"                                 (sizeof(s)/sizeof(char))-1))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.1.5/src/lstring.h:22
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	lua_pushlstring(L, """" s, (sizeof(s)/sizeof(char))-1)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.1.5/src/lua.h:274
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, 0, sizeof(l)/sizeof((l)[0]) - 1)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.4.3/src/lauxlib.h:128
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define sof(e)		(sizeof(e) / sizeof(unsigned int))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.4.3/src/ltablib.c:237
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	(sizeof(n) >= sizeof(size_t) && cast_sizet((n)) + 1 > MAX_SIZET/(e))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.4.3/src/lmem.h:32
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  cast_charp(luaM_saferealloc_(L, (b), (on)*sizeof(char), (n)*sizeof(char)))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.4.3/src/lmem.h:53
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  (luaM_checksize(L,n,sizeof(t)), luaM_newvector(L,n,t))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.4.3/src/lmem.h:62
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"  lua_createtable(L, sizeof(searchers)/sizeof(searchers[0]) - 1, 0);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.4.3/src/loadlib.c:715
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"                                 (sizeof(s)/sizeof(char))-1))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.4.3/src/lstring.h:29
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	(sizeof(size_t) < sizeof(int) ? MAX_SIZET : (size_t)(INT_MAX))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.4.3/src/lstrlib.c:50
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"#define dumpLiteral(D, s)	dumpBlock(D,s,sizeof(s) - sizeof(char))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/third_party/lua-5.4.3/src/ldump.c:37
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert_int_le(opt_idx, (int)(sizeof(OPTIONS) / sizeof(OPTIONS[0])));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:656
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 1] == NULL);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:657
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 2] == NULL);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:658
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert_int_le(opt_idx, (int)(sizeof(OPTIONS) / sizeof(OPTIONS[0])));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:782
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 1] == NULL);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:783
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 2] == NULL);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:784
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert_int_le(opt_idx, (int)(sizeof(OPTIONS) / sizeof(OPTIONS[0])));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:1350
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 1] == NULL);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:1351
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 2] == NULL);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:1352
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert_int_le(opt_idx, (int)(sizeof(OPTIONS) / sizeof(OPTIONS[0])));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:2706
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 1] == NULL);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:2707
76064234c3273e2efe3a34a1e1df8aa841a44d45ffefc7c2bc8418e83cd0375c0b3ab6a43cd7bb2afe6115823d1bb14559bb6fa120ac6eb22ad8bac18b07009b,"	ck_assert(OPTIONS[sizeof(OPTIONS) / sizeof(OPTIONS[0]) - 2] == NULL);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/unittest/public_server.c:2708
8ce155bfc842d7cdfeb4a7381dfaf5c11f1e4d3f2f36364ab773fc71fc44c4da52741ad6d3e4519c35121c01d9f750050d738a07c0022e150f5fab91cd423087,"  ((sizeof(a) / sizeof(*(a))) /                         \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/vendor/double-conversion/double-conversion/utils.h:169
8ce155bfc842d7cdfeb4a7381dfaf5c11f1e4d3f2f36364ab773fc71fc44c4da52741ad6d3e4519c35121c01d9f750050d738a07c0022e150f5fab91cd423087,"  static_cast<size_t>(!(sizeof(a) % sizeof(*(a)))))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/vendor/double-conversion/double-conversion/utils.h:170
26f2df05613ef72a9d05da60d2e26c65e3624eb2ff77eef255e3ac0bc29505d8cb4ca6c4e7550af937ed64e95428d124d8946ee196325a6d19c6e88db5b8a194,"            size_t to_read = (sizeof(buf) < length ? sizeof(buf) : length);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libqpdf/QPDF.cc:2729
26f2df05613ef72a9d05da60d2e26c65e3624eb2ff77eef255e3ac0bc29505d8cb4ca6c4e7550af937ed64e95428d124d8946ee196325a6d19c6e88db5b8a194,"    static_assert(1 == sizeof(int8_t), ""int8_t check"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/libtests/cxx11.cc:75
26f2df05613ef72a9d05da60d2e26c65e3624eb2ff77eef255e3ac0bc29505d8cb4ca6c4e7550af937ed64e95428d124d8946ee196325a6d19c6e88db5b8a194,"            size_t to_read = (sizeof(buf) < length ? sizeof(buf) : length);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/libqpdf/QPDF.cc:2729
3f5243f73a7af6e97d655f1aafc491b30169d746fb13dc93708b0d758aa83f6e6c1bec574c9b5d68af4f69ef8a26e407153bb4cae5b8fc713309bc8edf0c0634,"        strlncpy(buf1, sizeof(buf1), total, buf1_len);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test.c:4140
3f5243f73a7af6e97d655f1aafc491b30169d746fb13dc93708b0d758aa83f6e6c1bec574c9b5d68af4f69ef8a26e407153bb4cae5b8fc713309bc8edf0c0634,"  printf(""sizeof(http_parser) = %u\n"", (unsigned int)sizeof(http_parser));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test.c:4345
3f5243f73a7af6e97d655f1aafc491b30169d746fb13dc93708b0d758aa83f6e6c1bec574c9b5d68af4f69ef8a26e407153bb4cae5b8fc713309bc8edf0c0634,"#define ARRAY_SIZE(x) (sizeof(x) / sizeof(*x))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test.c:44
3f5243f73a7af6e97d655f1aafc491b30169d746fb13dc93708b0d758aa83f6e6c1bec574c9b5d68af4f69ef8a26e407153bb4cae5b8fc713309bc8edf0c0634,"  for (i = 0; i < (sizeof(url_tests) / sizeof(url_tests[0])); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test.c:3557
3f5243f73a7af6e97d655f1aafc491b30169d746fb13dc93708b0d758aa83f6e6c1bec574c9b5d68af4f69ef8a26e407153bb4cae5b8fc713309bc8edf0c0634,"  printf(""sizeof(http_parser) = %u\n"", (unsigned int)sizeof(http_parser));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test.c:4345
3f5243f73a7af6e97d655f1aafc491b30169d746fb13dc93708b0d758aa83f6e6c1bec574c9b5d68af4f69ef8a26e407153bb4cae5b8fc713309bc8edf0c0634,"# define ARRAY_SIZE(a) (sizeof(a) / sizeof((a)[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/http_parser.c:39
6b7e69a79529bf0dfbb415919436a4796bb209718db780a374c15b8dabf3c55cccf22b2b4c39e8aad9f858ffec2cbd216f7d4bbacf5b9b577d5f637b2c0a85d6,"  if (htsize <= sizeof(s->small_table_) / sizeof(s->small_table_[0])) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/c/enc/encode.c:238
9b50ae874f523125c9d26542aab56a0edc2b33caf4fb2cda9cb60b4c26f02bc035bb49b14408f2f9b8c85146c74d6bf1bc802ef190fa88deaea57b23044ce8fb,"        return sizeof(void*) * ((size + sizeof(void*) - 1) / sizeof(void*));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/common/simple_allocator.c:41
9b50ae874f523125c9d26542aab56a0edc2b33caf4fb2cda9cb60b4c26f02bc035bb49b14408f2f9b8c85146c74d6bf1bc802ef190fa88deaea57b23044ce8fb,"        return sizeof(void*) * ((size + sizeof(void*) - 1) / sizeof(void*));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/common/simple_allocator.c:41
1236085c50d78857358c1a8aa94146bbaae78dbe853d47fc0a2d1055e2e1912963c04f8c5125583ec9e2b022b57770b29fbf6c741d589889629dd986c989663c,"    (sizeof(options_tests) / sizeof(*options_tests))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/optionstest.c:276
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"        bStatus = BCRYPT_SUCCESS(BCryptCreateHash(pContext->hAlgorithm, &hHash, pbHashObject, pContext->cbHashObject, NULL, 0, 0)) && BCRYPT_SUCCESS(BCryptHashData(hHash, pbPassword, cbPassword, 0)) && BCRYPT_SUCCESS(BCryptGetProperty(hHash, BCRYPT_HASH_LENGTH, (PUCHAR)&cbPassword, sizeof(cbPassword), &cbResult, 0)) && BCRYPT_SUCCESS(BCryptFinishHash(hHash, key, cbPassword, 0));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/zip_crypto_win.c:169
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"    return BCRYPT_SUCCESS(BCryptGetProperty(pContext->hAlgorithm, BCRYPT_OBJECT_LENGTH, (PUCHAR)&cbHashObject, sizeof(cbHashObject), &cbResult, 0)) && hmacCalculateInternal(pContext->hInnerHash, pbData, cbData, pbDigest, DIGEST_SIZE, cbHashObject) && hmacCalculateInternal(pContext->hOuterHash, pbDigest, DIGEST_SIZE, pbDigest, DIGEST_SIZE, cbHashObject);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/zip_crypto_win.c:218
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"    snprintf(unknown, sizeof(unknown), ""unknown (%u)"", value);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/zipcmp.c:875
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"#define ZIP_SOURCE_GET_ARGS(type, data, len, error) ((len) < sizeof(type) ? zip_error_set((error), ZIP_ER_INVAL, 0), (type *)NULL : (type *)(data))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/zip.h:277
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"    if (!BCRYPT_SUCCESS(BCryptOpenAlgorithmProvider(&pContext->hAlgorithm, BCRYPT_SHA1_ALGORITHM, NULL, 0)) || !BCRYPT_SUCCESS(BCryptGetProperty(pContext->hAlgorithm, BCRYPT_OBJECT_LENGTH, (PUCHAR)&pContext->cbHashObject, sizeof(pContext->cbHashObject), &cbResult, 0)) || ((pContext->pbInnerHash = malloc(pContext->cbHashObject)) == NULL) || ((pContext->pbOuterHash = malloc(pContext->cbHashObject)) == NULL) || !BCRYPT_SUCCESS(BCryptCreateHash(pContext->hAlgorithm, &pContext->hInnerHash, pContext->pbInnerHash, pContext->cbHashObject, NULL, 0, 0)) || !BCRYPT_SUCCESS(BCryptCreateHash(pContext->hAlgorithm, &pContext->hOuterHash, pContext->pbOuterHash, pContext->cbHashObject, NULL, 0, 0))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/zip_crypto_win.c:158
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"        bStatus = BCRYPT_SUCCESS(BCryptCreateHash(pContext->hAlgorithm, &hHash, pbHashObject, pContext->cbHashObject, NULL, 0, 0)) && BCRYPT_SUCCESS(BCryptHashData(hHash, pbPassword, cbPassword, 0)) && BCRYPT_SUCCESS(BCryptGetProperty(hHash, BCRYPT_HASH_LENGTH, (PUCHAR)&cbPassword, sizeof(cbPassword), &cbResult, 0)) && BCRYPT_SUCCESS(BCryptFinishHash(hHash, key, cbPassword, 0));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/zip_crypto_win.c:169
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"    return BCRYPT_SUCCESS(BCryptGetProperty(pContext->hAlgorithm, BCRYPT_OBJECT_LENGTH, (PUCHAR)&cbHashObject, sizeof(cbHashObject), &cbResult, 0)) && hmacCalculateInternal(pContext->hInnerHash, pbData, cbData, pbDigest, DIGEST_SIZE, cbHashObject) && hmacCalculateInternal(pContext->hOuterHash, pbDigest, DIGEST_SIZE, pbDigest, DIGEST_SIZE, cbHashObject);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/zip_crypto_win.c:218
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"    if ((buffer = _zip_buffer_new_from_source(za->src, sizeof(b), b, &za->error)) == NULL) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/zip_extra_field.c:377
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"    if ((buffer->nfragments > SIZE_MAX / sizeof(buffer->fragment[0])) || ((buffer->fragment = (zip_uint8_t **)malloc(sizeof(buffer->fragment[0]) * buffer->nfragments)) == NULL)) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/regress/source_hole.c:235
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"    for (i = 0; i < sizeof(dispatch_table) / sizeof(dispatch_table_t); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/ziptool.c:775
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"    for (i = 0; i < sizeof(dispatch_table) / sizeof(dispatch_table_t); i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/ziptool.c:830
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"        if ((a->nentry > SIZE_MAX / sizeof(a->entry[0])) || (a->entry = (struct entry *)malloc(sizeof(a->entry[0]) * a->nentry)) == NULL) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/zipcmp.c:546
04401e52616f24b7c38cbe41ddea18c9b69ea1d29d0cce4370857dd4accc8ada13534621615a31afbc83592bcfd48f539d779ffd293dabe258c8c93fef3b1255,"    snprintf(unknown, sizeof(unknown), ""unknown (%u)"", value);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/zipcmp.c:875
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStream(&(shc->state1), sizeof(shc->state1)) == NULL, ""state1 (%p) failed init"", (void*)&(shc->state1) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/fuzzer.c:1140
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStream(&(shc->state2), sizeof(shc->state2)) == NULL, ""state2 (%p) failed init"", (void*)&(shc->state2)  );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/fuzzer.c:1141
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStream(&(shc->state3), sizeof(shc->state3)) == NULL, ""state3 (%p) failed init"", (void*)&(shc->state3)  );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/fuzzer.c:1142
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStreamHC(&(shc->hc1), sizeof(shc->hc1)) == NULL, ""hc1 (%p) failed init"", (void*)&(shc->hc1) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/fuzzer.c:1251
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStreamHC(&(shc->hc2), sizeof(shc->hc2)) == NULL, ""hc2 (%p) failed init"", (void*)&(shc->hc2)  );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/fuzzer.c:1252
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStreamHC(&(shc->hc3), sizeof(shc->hc3)) == NULL, ""hc3 (%p) failed init"", (void*)&(shc->hc3)  );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/fuzzer.c:1253
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"static const size_t maxMemory = (sizeof(size_t)==4)  ?  (2 GB - 64 MB) : (size_t)(1ULL << ((sizeof(size_t)*8)-31));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/programs/bench.c:243
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/xxhash.c:446
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/xxhash.c:907
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"                        srcPatternLength = LZ4HC_countPattern(ip+sizeof(pattern), iHighLimit, pattern) + sizeof(pattern);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/lz4hc.c:345
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"                        size_t forwardPatternLength = LZ4HC_countPattern(matchPtr+sizeof(pattern), iLimit, pattern) + sizeof(pattern);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/lz4hc.c:356
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStream(&(shc->state1), sizeof(shc->state1)) == NULL, ""state1 (%p) failed init"", (void*)&(shc->state1) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/fuzzer.c:1140
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStream(&(shc->state2), sizeof(shc->state2)) == NULL, ""state2 (%p) failed init"", (void*)&(shc->state2)  );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/fuzzer.c:1141
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStream(&(shc->state3), sizeof(shc->state3)) == NULL, ""state3 (%p) failed init"", (void*)&(shc->state3)  );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/fuzzer.c:1142
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStreamHC(&(shc->hc1), sizeof(shc->hc1)) == NULL, ""hc1 (%p) failed init"", (void*)&(shc->hc1) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/fuzzer.c:1251
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStreamHC(&(shc->hc2), sizeof(shc->hc2)) == NULL, ""hc2 (%p) failed init"", (void*)&(shc->hc2)  );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/fuzzer.c:1252
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"        FUZ_CHECKTEST( LZ4_initStreamHC(&(shc->hc3), sizeof(shc->hc3)) == NULL, ""hc3 (%p) failed init"", (void*)&(shc->hc3)  );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/fuzzer.c:1253
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"static const size_t maxMemory = (sizeof(size_t)==4)  ?  (2 GB - 64 MB) : (size_t)(1ULL << ((sizeof(size_t)*8)-31));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/programs/bench.c:243
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/xxhash.c:446
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/xxhash.c:907
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"                        srcPatternLength = LZ4HC_countPattern(ip+sizeof(pattern), iHighLimit, pattern) + sizeof(pattern);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/lz4hc.c:345
ebb413bd9d614765f3aa30799c07799d3f30c5ccf06adfe7442e64eae35507ca15cff4932c861c6100a05a2d01450a3b8805a03cb74001c2407dfbfdfa441a21,"                        size_t forwardPatternLength = LZ4HC_countPattern(matchPtr+sizeof(pattern), iLimit, pattern) + sizeof(pattern);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/lz4hc.c:356
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"static const size_t maxMemory = (sizeof(size_t)==4)  ?  (2 GB - 64 MB) : (size_t)(1ULL << ((sizeof(size_t)*8)-31));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/zlibWrapper/examples/zwrapbench.c:66
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"static const size_t maxMemory = (sizeof(size_t)==4)  ?  (2 GB - 64 MB) : (size_t)(1ULL << ((sizeof(size_t)*8)-31));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/tests/paramgrill.c:44
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"    qsort(state->matches, state->nbMatches, sizeof(ZSTD_eDist_match), ZSTD_eDist_matchComp);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/match_finders/zstd_edist.c:414
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"static const size_t g_maxMemory = (sizeof(size_t) == 4) ? (2 GB - 64 MB) : ((size_t)(512 MB) << sizeof(size_t));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/programs/dibio.c:49
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"    DEBUGLOG(5, ""sizeof(ZSTD_CDict) : %u"", (unsigned)sizeof(ZSTD_CDict));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/compress/zstd_compress.c:4766
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"    DEBUGLOG(5, ""sizeof(*cdict) : %u"", (unsigned)sizeof(*cdict));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/compress/zstd_compress.c:4786
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"        assert((sizeof(size_t) == 4) || (sizeof(size_t) == 8));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/lib/compress/zstd_lazy.c:1049
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"#  define GT_OFF(x) (sizeof(int) == sizeof(z_off64_t) && (x) > gz_intmax())
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/zlibWrapper/gzguts.h:228
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"static const size_t maxMemory = (sizeof(size_t)==4)  ?  (2 GB - 64 MB) : (size_t)(1ULL << ((sizeof(size_t)*8)-31));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/zlibWrapper/examples/zwrapbench.c:66
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"static const size_t maxMemory = (sizeof(size_t)==4)  ?  (2 GB - 64 MB) : (size_t)(1ULL << ((sizeof(size_t)*8)-31));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/paramgrill.c:44
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"static const size_t g_maxMemory = (sizeof(size_t) == 4) ? (2 GB - 64 MB) : ((size_t)(512 MB) << sizeof(size_t));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/programs/dibio.c:49
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"        if (sizeof(ptrdiff_t)==8) assert(istart - base < (ptrdiff_t)(U32)(-1));   /* ensure no overflow */
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/compress/zstd_compress.c:2842
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"    DEBUGLOG(5, ""sizeof(ZSTD_CDict) : %u"", (unsigned)sizeof(ZSTD_CDict));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/compress/zstd_compress.c:4766
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"    DEBUGLOG(5, ""sizeof(*cdict) : %u"", (unsigned)sizeof(*cdict));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/compress/zstd_compress.c:4786
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"        assert((sizeof(size_t) == 4) || (sizeof(size_t) == 8));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/compress/zstd_lazy.c:1049
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"        if (sizeof(size_t) > sizeof(int)) assert(job->src.size < ((size_t)INT_MAX) * chunkSize);   /* check overflow */
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/compress/zstdmt_compress.c:736
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"#define ZSTD_BUILD_FSE_TABLE_WKSP_SIZE_U32 ((ZSTD_BUILD_FSE_TABLE_WKSP_SIZE + sizeof(U32) - 1) / sizeof(U32))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/decompress/zstd_decompress_internal.h:77
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"MEM_STATIC void MEM_check(void) { DEBUG_STATIC_ASSERT((sizeof(size_t)==4) || (sizeof(size_t)==8)); }
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/mem.h:445
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"#  define ZSTD_ALIGNOF(T) (sizeof(void*) < sizeof(T) ? sizeof(void*) : sizeof(T))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/compiler.h:269
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"#define BIT_MASK_SIZE (sizeof(BIT_mask) / sizeof(BIT_mask[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/bitstream.h:144
16b8566b57f4ed9c8c92c25561b070a8c872df1be37fd7a15d6a0eea84327225db74cd36358f88d8234d91f4ac41c8e31f86bd97e5ac607b3a45abf2c4a6b461,"#define FSE_BUILD_DTABLE_WKSP_SIZE_U32(maxTableLog, maxSymbolValue) ((FSE_BUILD_DTABLE_WKSP_SIZE(maxTableLog, maxSymbolValue) + sizeof(unsigned) - 1) / sizeof(unsigned))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/lib/common/fse.h:346
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"                        srcPatternLength = LZ4HC_countPattern(ip+sizeof(pattern), iHighLimit, pattern) + sizeof(pattern);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/lz4-1.9.3/lz4hc.c:345
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"                        size_t forwardPatternLength = LZ4HC_countPattern(matchPtr+sizeof(pattern), iLimit, pattern) + sizeof(pattern);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/lz4-1.9.3/lz4hc.c:356
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        zng_deflateGetParams(&c_stream, params, sizeof(params) / sizeof(params[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/example.c:320
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        zng_deflateSetParams(&c_stream, params, sizeof(params) / sizeof(params[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/example.c:327
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        zng_deflateGetParams(&c_stream, params, sizeof(params) / sizeof(params[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/example.c:345
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        zng_deflateSetParams(&c_stream, params, sizeof(params) / sizeof(params[0]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/example.c:352
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    strm.avail_in = (uint32_t)(next_in + sizeof(next_in) - strm.next_in);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/hash_head_0.c:66
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    strm.avail_out = (uint32_t)(next_out + sizeof(next_out) - strm.next_out);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/hash_head_0.c:67
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        strm.avail_out = (uint32_t)(next_out + sizeof(next_out) - strm.next_out);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/deflate_quick_block_open.c:62
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    Assert(sizeof(Pos) == 2, ""Wrong Pos size"");
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/arch/arm/slide_neon.c:28
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    DEBUGLOG(5, ""sizeof(ZSTD_CDict) : %u"", (unsigned)sizeof(ZSTD_CDict));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zstd-1.5.2/compress/zstd_compress.c:4762
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    DEBUGLOG(5, ""sizeof(*cdict) : %u"", (unsigned)sizeof(*cdict));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zstd-1.5.2/compress/zstd_compress.c:4782
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        assert((sizeof(size_t) == 4) || (sizeof(size_t) == 8));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/internal-complibs/zstd-1.5.2/compress/zstd_lazy.c:1078
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"      r1[0].val[j] = vtbx4_u8(r1[0].val[j], r0[1], vld1_u8(index_top + sizeof(r1[0]) +j*sizeof(r1[0].val[j])));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/unshuffle8_neon/unshuffle8_neon_vtbx_bucle.c:79
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        vst1_u8(dest + i + l*sizeof(r0[l]) + j*sizeof(r0[l].val[j]), r0[l].val[j]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/unshuffle8_neon/unshuffle8_neon_vtbx_bucle.c:96
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"      r1[0].val[j] = vtbx4_u8(r1[0].val[j], r0[1], vld1_u8(index_top + sizeof(r1[0]) +j*sizeof(r1[0].val[j])));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/unshuffle8_neon/unshuffle8_neon_vtbx.c:42
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        vst1_u8(dest + i + l*sizeof(r0[l]) + j*sizeof(r0[l].val[j]), r0[l].val[j]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/unshuffle8_neon/unshuffle8_neon_vtbx.c:55
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"      vst1q_u8(dest + total_elements*0 + k*sizeof(r0.val[0]), r0.val[0]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/shuffle4_neon/shuffle4_neon_bucle.c:54
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"      vst1q_u8(dest + total_elements*1 + k*sizeof(r0.val[1]), r0.val[1]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/shuffle4_neon/shuffle4_neon_bucle.c:55
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"      vst1q_u8(dest + total_elements*2 + k*sizeof(r0.val[2]), r0.val[2]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/shuffle4_neon/shuffle4_neon_bucle.c:56
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"      vst1q_u8(dest + total_elements*3 + k*sizeof(r0.val[3]), r0.val[3]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/shuffle4_neon/shuffle4_neon_bucle.c:57
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        r0[l].val[j] = vld1_u8(src + l*32 + k*32 + k*sizeof(r0[l]) + j*sizeof(r0[l].val[j]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/shuffle8_neon/shuffle8_neon_vtbx_bucle.c:73
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        vst1_u8(dest + total_elements*(j+l*4) + k*sizeof(r0[l].val[j]), r0[l].val[j]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/shuffle8_neon/shuffle8_neon_vtbx_bucle.c:92
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        r0[l].val[j] = vld1_u8(src + l*32 + k*32 + k*sizeof(r0[l]) + j*sizeof(r0[l].val[j]));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/shuffle8_neon/shuffle8_neon_opt.c:36
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        vst1_u8(dest + total_elements*(j+l*4) + k*sizeof(r0[l].val[j]), r0[l].val[j]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/shuffle8_neon/shuffle8_neon_opt.c:55
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    vst2q_u8(dest+k*sizeof(r0),r0);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/unshuffle2_neon/unshuffle2_neon_bucle.c:44
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        vst1_u8(dest + total_elements*(j+l*4) + k*sizeof(r0[l].val[j]), r0[l].val[j]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/shuffle16_neon/shuffle16_neon_vtbx_bucle.c:136
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        vst1_u8(dest + total_elements*(j+l*4) + k*sizeof(r0[l].val[j]), r0[l].val[j]);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/contrib/shuffle_neon/shuffle16_neon/shuffle16_neon_vtbx.c:76
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"      trailer_len = (int32_t) (sizeof(int32_t) + sizeof(int64_t) + nblocks * sizeof(int32_t));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/blosc/frame.c:2164
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"                 ip - sizeof(token) - sizeof(offset) - offset + l * cell_shape, cell_shape);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/plugins/codecs/ndlz/ndlz8x8.c:517
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"                 ip - sizeof(token) - sizeof(offset) - offset + l * cell_shape, cell_shape);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/plugins/codecs/ndlz/ndlz8x8.c:532
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/plugins/codecs/ndlz/xxhash.h:2013
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved64));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/plugins/codecs/ndlz/xxhash.h:2444
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"                        srcPatternLength = LZ4HC_countPattern(ip+sizeof(pattern), iHighLimit, pattern) + sizeof(pattern);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/lz4-1.9.3/lz4hc.c:345
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"                        size_t forwardPatternLength = LZ4HC_countPattern(matchPtr+sizeof(pattern), iLimit, pattern) + sizeof(pattern);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/lz4-1.9.3/lz4hc.c:356
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"#  define GT_OFF(x) (sizeof(int) == sizeof(z_off64_t) && (x) > gz_intmax())
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/gzguts.h:151
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        zng_deflateGetParams(&c_stream, params, sizeof(params) / sizeof(params[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/example.c:320
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        zng_deflateSetParams(&c_stream, params, sizeof(params) / sizeof(params[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/example.c:327
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        zng_deflateGetParams(&c_stream, params, sizeof(params) / sizeof(params[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/example.c:345
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        zng_deflateSetParams(&c_stream, params, sizeof(params) / sizeof(params[0]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/test/example.c:352
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    if ((len > sizeof(uint16_t)) && ((ptrdiff_t)buf & sizeof(uint16_t))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/arch/arm/crc32_acle.c:25
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    if ((len > sizeof(uint32_t)) && ((ptrdiff_t)buf & sizeof(uint32_t))) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zlib-ng-2.0.6/arch/arm/crc32_acle.c:35
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        if (sizeof(ptrdiff_t)==8) assert(istart - base < (ptrdiff_t)(U32)(-1));   /* ensure no overflow */
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zstd-1.5.2/compress/zstd_compress.c:2843
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    DEBUGLOG(5, ""sizeof(ZSTD_CDict) : %u"", (unsigned)sizeof(ZSTD_CDict));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zstd-1.5.2/compress/zstd_compress.c:4762
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    DEBUGLOG(5, ""sizeof(*cdict) : %u"", (unsigned)sizeof(*cdict));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zstd-1.5.2/compress/zstd_compress.c:4782
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        assert((sizeof(size_t) == 4) || (sizeof(size_t) == 8));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zstd-1.5.2/compress/zstd_lazy.c:1078
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        if (sizeof(size_t) > sizeof(int)) assert(job->src.size < ((size_t)INT_MAX) * chunkSize);   /* check overflow */
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zstd-1.5.2/compress/zstdmt_compress.c:736
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"#define ZSTD_BUILD_FSE_TABLE_WKSP_SIZE_U32 ((ZSTD_BUILD_FSE_TABLE_WKSP_SIZE + sizeof(U32) - 1) / sizeof(U32))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zstd-1.5.2/decompress/zstd_decompress_internal.h:77
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"MEM_STATIC void MEM_check(void) { DEBUG_STATIC_ASSERT((sizeof(size_t)==4) || (sizeof(size_t)==8)); }
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zstd-1.5.2/common/mem.h:435
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"#  define ZSTD_ALIGNOF(T) (sizeof(void*) < sizeof(T) ? sizeof(void*) : sizeof(T))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zstd-1.5.2/common/compiler.h:267
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"#define BIT_MASK_SIZE (sizeof(BIT_mask) / sizeof(BIT_mask[0]))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zstd-1.5.2/common/bitstream.h:185
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"#define FSE_BUILD_DTABLE_WKSP_SIZE_U32(maxTableLog, maxSymbolValue) ((FSE_BUILD_DTABLE_WKSP_SIZE(maxTableLog, maxSymbolValue) + sizeof(unsigned) - 1) / sizeof(unsigned))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/internal-complibs/zstd-1.5.2/common/fse.h:346
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"  for (int i = size / (int)sizeof(int32_t) * (int)sizeof(int32_t); i < size; i++) {
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/test_bitshuffle_leftovers.c:91
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"                            sizeof(cutest_##name) / sizeof(type), sizeof(type)); \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/tests/cutest.h:34
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"      r1[0].val[j] = vtbx4_u8(r1[0].val[j], r0[1], vld1_u8(index_top + sizeof(r1[0]) +j*sizeof(r1[0].val[j])));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/shuffle_neon/unshuffle8_neon/unshuffle8_neon_vtbx_bucle.c:79
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        vst1_u8(dest + i + l*sizeof(r0[l]) + j*sizeof(r0[l].val[j]), r0[l].val[j]);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/shuffle_neon/unshuffle8_neon/unshuffle8_neon_vtbx_bucle.c:96
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"      r1[0].val[j] = vtbx4_u8(r1[0].val[j], r0[1], vld1_u8(index_top + sizeof(r1[0]) +j*sizeof(r1[0].val[j])));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/shuffle_neon/unshuffle8_neon/unshuffle8_neon_vtbx.c:42
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        vst1_u8(dest + i + l*sizeof(r0[l]) + j*sizeof(r0[l].val[j]), r0[l].val[j]);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/shuffle_neon/unshuffle8_neon/unshuffle8_neon_vtbx.c:55
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        r0[l].val[j] = vld1_u8(src + l*32 + k*32 + k*sizeof(r0[l]) + j*sizeof(r0[l].val[j]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/shuffle_neon/shuffle8_neon/shuffle8_neon_vtbx_bucle.c:73
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"        r0[l].val[j] = vld1_u8(src + l*32 + k*32 + k*sizeof(r0[l]) + j*sizeof(r0[l].val[j]));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/contrib/shuffle_neon/shuffle8_neon/shuffle8_neon_opt.c:36
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"      trailer_len = (int32_t) (sizeof(int32_t) + sizeof(int64_t) + nblocks * sizeof(int32_t));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/blosc/frame.c:2164
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/plugins/codecs/ndlz/xxhash.h:2013
5256af5b9dcf33c00c2d74fe7be32dd37eca3b2aebab83cba2b103614d5b527d6467593e8ccc0e140e2059557440713e01b6320289a72440b8755573b2e158ce,"    memcpy(statePtr, &state, sizeof(state) - sizeof(state.reserved64));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/plugins/codecs/ndlz/xxhash.h:2444
62b06221ae2cba11b31a2a540e951c7f7afd0ff9fec023b918c6e45000f4d7cb88dbfe44cb75b78b0f7ab3898af41e5c17571166d721728f6db10f3002614289,"    for(i=0; i < (int)(sizeof(cases)/sizeof(cases[0])); i++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/src/libtom/tomcrypt_des.c:1800
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DWORD n = GetLogicalDriveStringsW(sizeof(buffer)/sizeof(wchar_t) - 1, buffer);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Foundation/src/Path_WIN32U.cpp:207
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	wchar_t* end = buffer + (n > sizeof(buffer) ? sizeof(buffer) : n);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Foundation/src/Path_WIN32U.cpp:209
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"OP1(SLJIT_MOV, SLJIT_MEM1(TMP2), sizeof(sljit_sw), SLJIT_MEM1(STACK_TOP), -3 * sizeof(sljit_sw));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Foundation/src/pcre_jit_compile.c:4862
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        OP2(SLJIT_ADD, SLJIT_MEM1(SLJIT_SP), private_data_ptr, STACK_TOP, 0, SLJIT_IMM, needs_control_head ? (2 * sizeof(sljit_sw)) : sizeof(sljit_sw));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Foundation/src/pcre_jit_compile.c:8187
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"            RaiseException(MS_VC_EXCEPTION, 0, sizeof(info)/sizeof(ULONG_PTR), (ULONG_PTR*)&info);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Foundation/src/Thread_WIN32.cpp:52
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"            (int)sizeof(entropy) * 2, entropy, (unsigned long)sizeof(entropy));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/XML/src/xmlparse.cpp:909
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(zBuf), zBuf, ""%02d:%02d:%02d"", x.h, x.m, (int)x.s);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:23135
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(zBuf), zBuf, ""%04d-%02d-%02d"", x.Y, x.M, x.D);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:23154
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    if( ALWAYS(nByte>(signed)sizeof(unsigned)) ) nByte = sizeof(unsigned int);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:23697
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( pInt[nReserve/sizeof(int)]==(int)REARGUARD );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:24478
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( (sizeof(Mem5Link)&(sizeof(Mem5Link)-1))==0 );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:26000
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        sqlite3_snprintf(sizeof(zBuf),zBuf,""invalid(%d)"", pWin->eExclude);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:30306
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"          sqlite3_snprintf(sizeof(zOp2),zOp2,"" op2=0x%02x"",pExpr->op2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:30373
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        sqlite3_snprintf(sizeof(zBuf),zBuf,""0x%02x"",pExpr->op2);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:30528
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_randomness(sizeof(r), &r);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:39905
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( sizeof(t)+sizeof(randomnessPid)<=(size_t)nBuf );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:40722
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(errmsg),errmsg,""path error (len %d)"",(int)pathLen);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:41257
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(errmsg),errmsg,""read error (len %d)"",(int)readLen);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:41263
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""create failed (%d)"", errno);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:41269
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""write failed (%d)"", errno);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:41273
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""rename failed (%d)"", errno);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:41277
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  winGetLastErrorMsg(lastErrno, sizeof(zMsg), zMsg);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:44452
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_randomness(sizeof(lk), &lk);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:45535
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        sqlite3_randomness(sizeof(i), &i);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:49770
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  memset(&pPgHdr->pDirty, 0, sizeof(PgHdr) - offsetof(PgHdr,pDirty));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:50282
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  sqlite3_randomness(sizeof(pPager->cksumInit), &pPager->cksumInit);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:54137
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  memcpy(pPtr, &pPager, sizeof(pPager));  pPtr += sizeof(pPager);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:57462
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  walChecksumBytes(1, (u8*)&h1, sizeof(h1)-sizeof(h1.aCksum), 0, aCksum);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:62606
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      rc = sqlite3PagerReadFileheader(pBt->pPager,sizeof(zDbHeader),zDbHeader);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:67964
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  vdbeMemRenderNum(sizeof(zBuf), zBuf, p);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:77167
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  memset(&p->aOp, 0, sizeof(Vdbe)-offsetof(Vdbe,aOp));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:78939
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      sqlite3_snprintf(sizeof(zAlt), zAlt, ""if %s goto P2"", zSynopsis+3);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:80399
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(z), z, ""%s"", pOp->p4.z);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:81133
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      sqlite3_randomness(sizeof(iRandom), &iRandom);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:81674
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    assert( sizeof(r1)==sizeof(t2) && memcmp(&r1, &t2, sizeof(r1))==0 );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:82785
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        sqlite3_randomness(sizeof(v), &v);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:91540
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(zErr),zErr, ""no such database: %s"", zName);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:111832
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(zErr),zErr, ""cannot detach database %s"", zName);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:111836
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(zErr),zErr, ""database %s is locked"", zName);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:111842
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(zTab),zTab,""sqlite_stat%d"",i);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:115506
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    p = (Schema *)sqlite3BtreeSchema(pBt, sizeof(Schema), sqlite3SchemaClear);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:118323
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  sqlite3_randomness(sizeof(r), &r);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:119829
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      sqlite3_snprintf(sizeof(zBuf), zBuf, ""%!.15g"", r1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:120358
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        sqlite3_snprintf(sizeof(zBuf), zBuf, ""%!.20e"", r1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:120361
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  int nExtra = (N+X)*(sizeof(CollSeq*)+1) - sizeof(CollSeq*);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:133451
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      if( cnt>3 ) sqlite3_randomness(sizeof(cnt), &cnt);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:134192
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        sqlite3_snprintf(sizeof(zWhich),zWhich,""%r "", nClause+1);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:142626
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      sqlite3_snprintf(sizeof(zLeft),zLeft,""left=%d"", pTerm->leftCursor);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:151038
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( iLookAhead<sizeof(yyFallback)/sizeof(yyFallback[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:160547
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        assert( j<(int)(sizeof(yy_lookahead)/sizeof(yy_lookahead[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:160564
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( i>=0 && i<(int)(sizeof(yy_action)/sizeof(yy_action[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:160579
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( yyruleno<sizeof(yyRuleInfoLhs)/sizeof(yyRuleInfoLhs[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:162997
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( yyruleno<(int)(sizeof(yyRuleName)/sizeof(yyRuleName[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:163151
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( iToken<(int)(sizeof(yyFallback)/sizeof(yyFallback[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:163329
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(zBuf), zBuf, ""SQLITE_UNKNOWN(%d)"", origRc);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:166644
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  sqlite3_snprintf(sizeof(zMsg), zMsg, ""database corruption page %d"", pgno);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:168726
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  sqlite3_snprintf(sizeof(zRnd), zRnd, ""rbu_vfs_%d"", rnd);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:203901
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  sqlite3_snprintf(sizeof(aBuf)-1, aBuf, ""%d"", iVal);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:208757
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( iLookAhead<sizeof(fts5yyFallback)/sizeof(fts5yyFallback[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:214607
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        assert( j<(int)(sizeof(fts5yy_lookahead)/sizeof(fts5yy_lookahead[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:214624
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( i>=0 && i<(int)(sizeof(fts5yy_action)/sizeof(fts5yy_action[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:214639
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( fts5yyruleno<sizeof(fts5yyRuleInfoLhs)/sizeof(fts5yyRuleInfoLhs[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:215009
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( fts5yyruleno<(int)(sizeof(fts5yyRuleName)/sizeof(fts5yyRuleName[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:215161
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( iToken<(int)(sizeof(fts5yyFallback)/sizeof(fts5yyFallback[0])) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:215339
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"          fts5BufferAppendBlob(&p->rc, &buf, sizeof(aHdr), aHdr);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:225217
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( nBuf+1<=sizeof(aMerger)/sizeof(aMerger[0]) );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Data/SQLite/src/sqlite3.c:226050
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"			if (sizeof(struct sockaddr) > len) len = sizeof(struct sockaddr);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Net/src/NetworkInterface.cpp:1773
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"				if (len < sizeof(struct sockaddr_in6)) len = sizeof(struct sockaddr_in6);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Net/src/NetworkInterface.cpp:1785
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"				if (len < sizeof(struct sockaddr_in)) len = sizeof(struct sockaddr_in);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/Net/src/NetworkInterface.cpp:1791
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	wchar_t* end = buffer + (n > sizeof(buffer) ? sizeof(buffer) : n);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Foundation/src/Path_WIN32U.cpp:209
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  ((sizeof(a) / sizeof(*(a))) /                         \
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Foundation/src/utils.h:154
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  static_cast<size_t>(!(sizeof(a) % sizeof(*(a)))))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Foundation/src/utils.h:155
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"#  define GT_OFF(x) (sizeof(int) == sizeof(z_off64_t) && (x) > gz_intmax())
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Foundation/src/gzguts.h:218
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"OP1(SLJIT_MOV, SLJIT_MEM1(TMP2), sizeof(sljit_sw), SLJIT_MEM1(STACK_TOP), -3 * sizeof(sljit_sw));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Foundation/src/pcre_jit_compile.c:4862
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        OP2(SLJIT_ADD, SLJIT_MEM1(SLJIT_SP), private_data_ptr, STACK_TOP, 0, SLJIT_IMM, needs_control_head ? (2 * sizeof(sljit_sw)) : sizeof(sljit_sw));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Foundation/src/pcre_jit_compile.c:8187
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    if (cc[1 + (32 / sizeof(pcre_uchar))] >= OP_CRSTAR && cc[1 + (32 / sizeof(pcre_uchar))] <= OP_CRPOSRANGE)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Foundation/src/pcre_jit_compile.c:9608
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"            RaiseException(MS_VC_EXCEPTION, 0, sizeof(info)/sizeof(ULONG_PTR), (ULONG_PTR*)&info);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Foundation/src/Thread_WIN32.cpp:52
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"            (int)sizeof(entropy) * 2, entropy, (unsigned long)sizeof(entropy));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/XML/src/xmlparse.cpp:909
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for (i = 0; i < (int)(sizeof(encodingNames) / sizeof(encodingNames[0])); i++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/XML/src/xmltok.c:1515
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"#define sip_endof(a) (&(a)[sizeof(a) / sizeof *(a)])
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/XML/src/siphash.h:204
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    for (i = 0; i < (int)(sizeof(types) / sizeof(types[0])); i++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/XML/src/xmlrole.c:752
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"#define ArraySize(X)    ((int)(sizeof(X)/sizeof(X[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:14819
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(zBuf), zBuf, ""%02d:%02d:%02d"", x.h, x.m, (int)x.s);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:23135
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( pInt[nReserve/sizeof(int)]==(int)REARGUARD );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:24478
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( (sizeof(Mem5Link)&(sizeof(Mem5Link)-1))==0 );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:26000
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        sqlite3_snprintf(sizeof(zBuf),zBuf,""invalid(%d)"", pWin->eExclude);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:30306
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:34644
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:34653
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:34680
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    if( i>=sizeof(azDirs)/sizeof(azDirs[0]) ) break;
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:39879
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( sizeof(t)+sizeof(randomnessPid)<=(size_t)nBuf );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:40722
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(errmsg),errmsg,""path error (len %d)"",(int)pathLen);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:41257
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(errmsg),errmsg,""read error (len %d)"",(int)readLen);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:41263
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""create failed (%d)"", errno);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:41269
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""write failed (%d)"", errno);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:41273
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(errmsg), errmsg, ""rename failed (%d)"", errno);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:41277
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:43543
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:43552
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; i<sizeof(aSyscall)/sizeof(aSyscall[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:43579
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    for(i=0; i<sizeof(azDirs)/sizeof(azDirs[0]); zDir=azDirs[i++]){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:47151
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    (((BITVEC_SZ-(3*sizeof(u32)))/sizeof(Bitvec*))*sizeof(Bitvec*))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:49444
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  memset(&pPgHdr->pDirty, 0, sizeof(PgHdr) - offsetof(PgHdr,pDirty));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:50282
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=1; i<sizeof(aBucket)/sizeof(aBucket[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:52271
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  walChecksumBytes(1, (u8*)&h1, sizeof(h1)-sizeof(h1.aCksum), 0, aCksum);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:62606
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  memset(&p->aOp, 0, sizeof(Vdbe)-offsetof(Vdbe,aOp));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:78939
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    assert( sizeof(r1)==sizeof(t2) && memcmp(&r1, &t2, sizeof(r1))==0 );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:82785
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"#define YY_NLOOKAHEAD ((int)(sizeof(yy_lookahead)/sizeof(yy_lookahead[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:158522
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( iLookAhead<sizeof(yyFallback)/sizeof(yyFallback[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:160547
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        assert( j<(int)(sizeof(yy_lookahead)/sizeof(yy_lookahead[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:160564
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( i>=0 && i<(int)(sizeof(yy_action)/sizeof(yy_action[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:160579
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( yyruleno<sizeof(yyRuleInfoLhs)/sizeof(yyRuleInfoLhs[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:162997
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( yyruleno<(int)(sizeof(yyRuleName)/sizeof(yyRuleName[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:163151
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( iToken<(int)(sizeof(yyFallback)/sizeof(yyFallback[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:163329
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    sqlite3_snprintf(sizeof(zBuf), zBuf, ""SQLITE_UNKNOWN(%d)"", origRc);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:166644
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"#define SizeofArray(X) ((int)(sizeof(X)/sizeof(X[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:170782
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; i<sizeof(azName)/sizeof(azName[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:175042
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; i<sizeof(aFunc)/sizeof(aFunc[0]) && rc==SQLITE_OK; i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:192230
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; i<sizeof(aAgg)/sizeof(aAgg[0]) && rc==SQLITE_OK; i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:192236
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; i<sizeof(aMod)/sizeof(aMod[0]) && rc==SQLITE_OK; i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:192244
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; i<sizeof(azName)/sizeof(azName[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:195720
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; i<sizeof(aFunc)/sizeof(aFunc[0]) && rc==SQLITE_OK; i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:198438
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; i<sizeof(aAgg)/sizeof(aAgg[0]) && rc==SQLITE_OK; i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:198449
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; rc==SQLITE_OK && i<(int)(sizeof(scalars)/sizeof(scalars[0])); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:199168
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    for(i=0; i<sizeof(aStmt)/sizeof(aStmt[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:201321
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"# define ArraySize(x) ((int)(sizeof(x) / sizeof(x[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:213041
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"#define fts5YY_NLOOKAHEAD ((int)(sizeof(fts5yy_lookahead)/sizeof(fts5yy_lookahead[0])))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:214037
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( iLookAhead<sizeof(fts5yyFallback)/sizeof(fts5yyFallback[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:214607
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"        assert( j<(int)(sizeof(fts5yy_lookahead)/sizeof(fts5yy_lookahead[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:214624
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( i>=0 && i<(int)(sizeof(fts5yy_action)/sizeof(fts5yy_action[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:214639
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( fts5yyruleno<sizeof(fts5yyRuleInfoLhs)/sizeof(fts5yyRuleInfoLhs[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:215009
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"      assert( fts5yyruleno<(int)(sizeof(fts5yyRuleName)/sizeof(fts5yyRuleName[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:215161
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( iToken<(int)(sizeof(fts5yyFallback)/sizeof(fts5yyFallback[0])) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:215339
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  assert( nBuf+1<=sizeof(aMerger)/sizeof(aMerger[0]) );
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:226050
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for(i=0; i<sizeof(azName)/sizeof(azName[0]); i++){
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Data/SQLite/src/sqlite3.c:230597
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	""	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))\n""
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/Compiler/src/TextEncodingCompiler.cpp:391
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_8Encoding.cpp:87
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/MacJapaneseEncoding.cpp:1864
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_11Encoding.cpp:90
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows1257Encoding.cpp:93
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows1258Encoding.cpp:93
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows932Encoding.cpp:1968
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_9Encoding.cpp:93
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_3Encoding.cpp:93
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_6Encoding.cpp:86
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_5Encoding.cpp:91
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/MacKoreanEncoding.cpp:2204
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows1255Encoding.cpp:92
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows1256Encoding.cpp:94
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_14Encoding.cpp:93
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_10Encoding.cpp:93
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows1253Encoding.cpp:92
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows1254Encoding.cpp:94
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/MacCentralEurRomanEncoding.cpp:87
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_16Encoding.cpp:93
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_13Encoding.cpp:93
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows949Encoding.cpp:4340
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_7Encoding.cpp:91
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/ISO8859_4Encoding.cpp:93
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows950Encoding.cpp:3453
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/MacCyrillicEncoding.cpp:87
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/MacChineseSimpEncoding.cpp:1942
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows936Encoding.cpp:5526
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/Windows874Encoding.cpp:91
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/MacRomanEncoding.cpp:87
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"	DoubleByteEncoding(_names, _charMap, _mappingTable, sizeof(_mappingTable)/sizeof(Mapping), _reverseMappingTable, sizeof(_reverseMappingTable)/sizeof(Mapping))
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/Encodings/src/MacChineseTradEncoding.cpp:3434
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    if (len <= 0 || len >= (int)sizeof(buf) || buf[sizeof(buf) - 1] != 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/PDF/src/gzio.c:631
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"    if (len <= 0 || len >= sizeof(buf) || buf[sizeof(buf) - 1] != 0)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/PDF/src/gzio.c:668
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for (i = 0; i < sizeof(kVendors) / sizeof(kVendors[i]); i++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/SevenZip/src/CpuArch.c:115
469dd75e3cca9644a3b5f345df761fc76f1c62a5a0fc4745d76968f77170c927c86f34288cdc91dfa2e32e408324c4d4945649f507d48c41560620b2af31ed5a,"  for (i = 0; i < sizeof(p) / sizeof(p[0]); i++)
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/SevenZip/src/Bcj2.c:48
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"			TEST_ASSERT(cp_vbnn_ver(r, z, h, ida, sizeof(ida), m, sizeof(m), mpk) == 1, end);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/test_cp.c:727
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"			TEST_ASSERT(cp_vbnn_ver(r, z, h, idb, sizeof(idb), m, sizeof(m), mpk) == 0, end);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/test_cp.c:728
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"			TEST_ASSERT(cp_vbnn_ver(r, z, h, ida, sizeof(ida), m, sizeof(m), mpk) == 0, end);
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/test/test_cp.c:730
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"		BENCH_ADD(md_xmd(buf, sizeof(buf), buf, sizeof(buf), dst, 5));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/bench/bench_md.c:48
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"		BENCH_ADD(cp_vbnn_ver(r, z, h, ida, sizeof(ida), m, sizeof(m), mpk));
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/bench/bench_cp.c:509
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"    store32( buffer + sizeof( S->h[i] ) * i, S->h[i] );
",".*\(.*sizeof\((.*)\).*\1.*\);
",/tmp/GitClone/src/md/blake2s-ref.c:258
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"			TEST_ASSERT(cp_vbnn_ver(r, z, h, ida, sizeof(ida), m, sizeof(m), mpk) == 1, end);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/test_cp.c:727
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"			TEST_ASSERT(cp_vbnn_ver(r, z, h, idb, sizeof(idb), m, sizeof(m), mpk) == 0, end);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/test_cp.c:728
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"			TEST_ASSERT(cp_vbnn_ver(r, z, h, ida, sizeof(ida), m, sizeof(m), mpk) == 0, end);
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/test_cp.c:730
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"	int lens[5] = {sizeof(m), sizeof(m), sizeof(m), sizeof(m), sizeof(m)};
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/test/test_cp.c:1545
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"		BENCH_ADD(md_xmd(buf, sizeof(buf), buf, sizeof(buf), dst, 5));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/bench/bench_md.c:48
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"		BENCH_ADD(cp_vbnn_ver(r, z, h, ida, sizeof(ida), m, sizeof(m), mpk));
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/bench/bench_cp.c:509
a8f2c0a9c9014acc53aa72dc440d6558dc9da056708dc89eecef83864b603f8d994741b66884742911dc7ed001397b6d9144e70baef5090a2fc85f59aa5a7098,"	int lens[5] = {sizeof(m), sizeof(m), sizeof(m), sizeof(m), sizeof(m)};
",.*\(.*sizeof\((.*)\).*\1.*\).*\),/tmp/GitClone/bench/bench_cp.c:1162
